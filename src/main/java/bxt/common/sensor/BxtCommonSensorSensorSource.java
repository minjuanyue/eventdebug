// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bxt.common.sensor.SensorSource.proto

package bxt.common.sensor;

public final class BxtCommonSensorSensorSource {
  private BxtCommonSensorSensorSource() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code bxt.common.sensor.SensorSource}
   */
  public enum SensorSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UnknownSource = 0;</code>
     */
    UnknownSource(0),
    /**
     * <pre>
     *&#47; lidar
     * </pre>
     *
     * <code>LidarMain = 1;</code>
     */
    LidarMain(1),
    /**
     * <code>LidarTailLeft = 2;</code>
     */
    LidarTailLeft(2),
    /**
     * <code>LidarTailRight = 3;</code>
     */
    LidarTailRight(3),
    /**
     * <code>LidarHeadMid = 4;</code>
     */
    LidarHeadMid(4),
    /**
     * <code>LidarMerge = 5;</code>
     */
    LidarMerge(5),
    /**
     * <code>LidarTailMid = 6;</code>
     */
    LidarTailMid(6),
    /**
     * <code>LidarHeadLeft = 7;</code>
     */
    LidarHeadLeft(7),
    /**
     * <code>LidarHeadRight = 8;</code>
     */
    LidarHeadRight(8),
    /**
     * <pre>
     * lidar rs
     * </pre>
     *
     * <code>LidarMidLeft = 92;</code>
     */
    LidarMidLeft(92),
    /**
     * <code>LidarMidRight = 93;</code>
     */
    LidarMidRight(93),
    /**
     * <code>LidarTopLeft = 94;</code>
     */
    LidarTopLeft(94),
    /**
     * <code>LidarTopRight = 95;</code>
     */
    LidarTopRight(95),
    /**
     * <pre>
     * radar
     * </pre>
     *
     * <code>RadarTailMid = 20;</code>
     */
    RadarTailMid(20),
    /**
     * <code>RadarHeadMid = 21;</code>
     */
    RadarHeadMid(21),
    /**
     * <code>UltrasonicRadarFront = 25;</code>
     */
    UltrasonicRadarFront(25),
    /**
     * <code>UltrasonicRadarMid = 26;</code>
     */
    UltrasonicRadarMid(26),
    /**
     * <code>UltrasonicRadarRear = 27;</code>
     */
    UltrasonicRadarRear(27),
    /**
     * <pre>
     * camera
     * </pre>
     *
     * <code>CameraHeadLeft = 40;</code>
     */
    CameraHeadLeft(40),
    /**
     * <code>CameraHeadRight = 41;</code>
     */
    CameraHeadRight(41),
    /**
     * <code>CameraFrontLeft = 42;</code>
     */
    CameraFrontLeft(42),
    /**
     * <code>CameraFrontRight = 43;</code>
     */
    CameraFrontRight(43),
    /**
     * <code>CameraMidLeft = 44;</code>
     */
    CameraMidLeft(44),
    /**
     * <code>CameraMidRight = 45;</code>
     */
    CameraMidRight(45),
    /**
     * <code>CameraTailLeft = 46;</code>
     */
    CameraTailLeft(46),
    /**
     * <code>CameraTailRight = 47;</code>
     */
    CameraTailRight(47),
    /**
     * <code>CameraTrafficLight = 48;</code>
     */
    CameraTrafficLight(48),
    /**
     * <pre>
     * localization
     * </pre>
     *
     * <code>VehicleCenter = 60;</code>
     */
    VehicleCenter(60),
    /**
     * <code>AsensingIns = 61;</code>
     */
    AsensingIns(61),
    /**
     * <pre>
     * virtual
     * </pre>
     *
     * <code>World = 70;</code>
     */
    World(70),
    /**
     * <code>EgoFront = 71;</code>
     */
    EgoFront(71),
    /**
     * <code>FusionTrack = 81;</code>
     */
    FusionTrack(81),
    /**
     * <code>FusionPre = 82;</code>
     */
    FusionPre(82),
    /**
     * <code>FusionLidarRadarMerge = 83;</code>
     */
    FusionLidarRadarMerge(83),
    /**
     * <code>VisualizeRaw = 91;</code>
     */
    VisualizeRaw(91),
    /**
     * <pre>
     * sync
     * </pre>
     *
     * <code>SyncLidarHead = 100;</code>
     */
    SyncLidarHead(100),
    /**
     * <code>SyncLidarFrontLeft = 101;</code>
     */
    SyncLidarFrontLeft(101),
    /**
     * <code>SyncLidarFrontRight = 102;</code>
     */
    SyncLidarFrontRight(102),
    /**
     * <code>SyncLidarMidLeft = 103;</code>
     */
    SyncLidarMidLeft(103),
    /**
     * <code>SyncLidarMidRight = 104;</code>
     */
    SyncLidarMidRight(104),
    /**
     * <code>SyncLidarTailLeft = 105;</code>
     */
    SyncLidarTailLeft(105),
    /**
     * <code>SyncLidarTailRight = 106;</code>
     */
    SyncLidarTailRight(106),
    ;

    /**
     * <code>UnknownSource = 0;</code>
     */
    public static final int UnknownSource_VALUE = 0;
    /**
     * <pre>
     *&#47; lidar
     * </pre>
     *
     * <code>LidarMain = 1;</code>
     */
    public static final int LidarMain_VALUE = 1;
    /**
     * <code>LidarTailLeft = 2;</code>
     */
    public static final int LidarTailLeft_VALUE = 2;
    /**
     * <code>LidarTailRight = 3;</code>
     */
    public static final int LidarTailRight_VALUE = 3;
    /**
     * <code>LidarHeadMid = 4;</code>
     */
    public static final int LidarHeadMid_VALUE = 4;
    /**
     * <code>LidarMerge = 5;</code>
     */
    public static final int LidarMerge_VALUE = 5;
    /**
     * <code>LidarTailMid = 6;</code>
     */
    public static final int LidarTailMid_VALUE = 6;
    /**
     * <code>LidarHeadLeft = 7;</code>
     */
    public static final int LidarHeadLeft_VALUE = 7;
    /**
     * <code>LidarHeadRight = 8;</code>
     */
    public static final int LidarHeadRight_VALUE = 8;
    /**
     * <pre>
     * lidar rs
     * </pre>
     *
     * <code>LidarMidLeft = 92;</code>
     */
    public static final int LidarMidLeft_VALUE = 92;
    /**
     * <code>LidarMidRight = 93;</code>
     */
    public static final int LidarMidRight_VALUE = 93;
    /**
     * <code>LidarTopLeft = 94;</code>
     */
    public static final int LidarTopLeft_VALUE = 94;
    /**
     * <code>LidarTopRight = 95;</code>
     */
    public static final int LidarTopRight_VALUE = 95;
    /**
     * <pre>
     * radar
     * </pre>
     *
     * <code>RadarTailMid = 20;</code>
     */
    public static final int RadarTailMid_VALUE = 20;
    /**
     * <code>RadarHeadMid = 21;</code>
     */
    public static final int RadarHeadMid_VALUE = 21;
    /**
     * <code>UltrasonicRadarFront = 25;</code>
     */
    public static final int UltrasonicRadarFront_VALUE = 25;
    /**
     * <code>UltrasonicRadarMid = 26;</code>
     */
    public static final int UltrasonicRadarMid_VALUE = 26;
    /**
     * <code>UltrasonicRadarRear = 27;</code>
     */
    public static final int UltrasonicRadarRear_VALUE = 27;
    /**
     * <pre>
     * camera
     * </pre>
     *
     * <code>CameraHeadLeft = 40;</code>
     */
    public static final int CameraHeadLeft_VALUE = 40;
    /**
     * <code>CameraHeadRight = 41;</code>
     */
    public static final int CameraHeadRight_VALUE = 41;
    /**
     * <code>CameraFrontLeft = 42;</code>
     */
    public static final int CameraFrontLeft_VALUE = 42;
    /**
     * <code>CameraFrontRight = 43;</code>
     */
    public static final int CameraFrontRight_VALUE = 43;
    /**
     * <code>CameraMidLeft = 44;</code>
     */
    public static final int CameraMidLeft_VALUE = 44;
    /**
     * <code>CameraMidRight = 45;</code>
     */
    public static final int CameraMidRight_VALUE = 45;
    /**
     * <code>CameraTailLeft = 46;</code>
     */
    public static final int CameraTailLeft_VALUE = 46;
    /**
     * <code>CameraTailRight = 47;</code>
     */
    public static final int CameraTailRight_VALUE = 47;
    /**
     * <code>CameraTrafficLight = 48;</code>
     */
    public static final int CameraTrafficLight_VALUE = 48;
    /**
     * <pre>
     * localization
     * </pre>
     *
     * <code>VehicleCenter = 60;</code>
     */
    public static final int VehicleCenter_VALUE = 60;
    /**
     * <code>AsensingIns = 61;</code>
     */
    public static final int AsensingIns_VALUE = 61;
    /**
     * <pre>
     * virtual
     * </pre>
     *
     * <code>World = 70;</code>
     */
    public static final int World_VALUE = 70;
    /**
     * <code>EgoFront = 71;</code>
     */
    public static final int EgoFront_VALUE = 71;
    /**
     * <code>FusionTrack = 81;</code>
     */
    public static final int FusionTrack_VALUE = 81;
    /**
     * <code>FusionPre = 82;</code>
     */
    public static final int FusionPre_VALUE = 82;
    /**
     * <code>FusionLidarRadarMerge = 83;</code>
     */
    public static final int FusionLidarRadarMerge_VALUE = 83;
    /**
     * <code>VisualizeRaw = 91;</code>
     */
    public static final int VisualizeRaw_VALUE = 91;
    /**
     * <pre>
     * sync
     * </pre>
     *
     * <code>SyncLidarHead = 100;</code>
     */
    public static final int SyncLidarHead_VALUE = 100;
    /**
     * <code>SyncLidarFrontLeft = 101;</code>
     */
    public static final int SyncLidarFrontLeft_VALUE = 101;
    /**
     * <code>SyncLidarFrontRight = 102;</code>
     */
    public static final int SyncLidarFrontRight_VALUE = 102;
    /**
     * <code>SyncLidarMidLeft = 103;</code>
     */
    public static final int SyncLidarMidLeft_VALUE = 103;
    /**
     * <code>SyncLidarMidRight = 104;</code>
     */
    public static final int SyncLidarMidRight_VALUE = 104;
    /**
     * <code>SyncLidarTailLeft = 105;</code>
     */
    public static final int SyncLidarTailLeft_VALUE = 105;
    /**
     * <code>SyncLidarTailRight = 106;</code>
     */
    public static final int SyncLidarTailRight_VALUE = 106;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SensorSource forNumber(int value) {
      switch (value) {
        case 0: return UnknownSource;
        case 1: return LidarMain;
        case 2: return LidarTailLeft;
        case 3: return LidarTailRight;
        case 4: return LidarHeadMid;
        case 5: return LidarMerge;
        case 6: return LidarTailMid;
        case 7: return LidarHeadLeft;
        case 8: return LidarHeadRight;
        case 92: return LidarMidLeft;
        case 93: return LidarMidRight;
        case 94: return LidarTopLeft;
        case 95: return LidarTopRight;
        case 20: return RadarTailMid;
        case 21: return RadarHeadMid;
        case 25: return UltrasonicRadarFront;
        case 26: return UltrasonicRadarMid;
        case 27: return UltrasonicRadarRear;
        case 40: return CameraHeadLeft;
        case 41: return CameraHeadRight;
        case 42: return CameraFrontLeft;
        case 43: return CameraFrontRight;
        case 44: return CameraMidLeft;
        case 45: return CameraMidRight;
        case 46: return CameraTailLeft;
        case 47: return CameraTailRight;
        case 48: return CameraTrafficLight;
        case 60: return VehicleCenter;
        case 61: return AsensingIns;
        case 70: return World;
        case 71: return EgoFront;
        case 81: return FusionTrack;
        case 82: return FusionPre;
        case 83: return FusionLidarRadarMerge;
        case 91: return VisualizeRaw;
        case 100: return SyncLidarHead;
        case 101: return SyncLidarFrontLeft;
        case 102: return SyncLidarFrontRight;
        case 103: return SyncLidarMidLeft;
        case 104: return SyncLidarMidRight;
        case 105: return SyncLidarTailLeft;
        case 106: return SyncLidarTailRight;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorSource>() {
            public SensorSource findValueByNumber(int number) {
              return SensorSource.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return bxt.common.sensor.BxtCommonSensorSensorSource.getDescriptor().getEnumTypes().get(0);
    }

    private static final SensorSource[] VALUES = values();

    public static SensorSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SensorSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bxt.common.sensor.SensorSource)
  }

  /**
   * Protobuf enum {@code bxt.common.sensor.SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     */
    Unknown(0),
    /**
     * <code>Lidar = 1;</code>
     */
    Lidar(1),
    /**
     * <code>Radar = 2;</code>
     */
    Radar(2),
    /**
     * <code>Camera = 3;</code>
     */
    Camera(3),
    /**
     * <code>Fusion = 4;</code>
     */
    Fusion(4),
    /**
     * <code>Sync = 5;</code>
     */
    Sync(5),
    ;

    /**
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <code>Lidar = 1;</code>
     */
    public static final int Lidar_VALUE = 1;
    /**
     * <code>Radar = 2;</code>
     */
    public static final int Radar_VALUE = 2;
    /**
     * <code>Camera = 3;</code>
     */
    public static final int Camera_VALUE = 3;
    /**
     * <code>Fusion = 4;</code>
     */
    public static final int Fusion_VALUE = 4;
    /**
     * <code>Sync = 5;</code>
     */
    public static final int Sync_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SensorType forNumber(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return Lidar;
        case 2: return Radar;
        case 3: return Camera;
        case 4: return Fusion;
        case 5: return Sync;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return bxt.common.sensor.BxtCommonSensorSensorSource.getDescriptor().getEnumTypes().get(1);
    }

    private static final SensorType[] VALUES = values();

    public static SensorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SensorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:bxt.common.sensor.SensorType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$bxt.common.sensor.SensorSource.proto\022\021" +
      "bxt.common.sensor*\321\006\n\014SensorSource\022\021\n\rUn" +
      "knownSource\020\000\022\r\n\tLidarMain\020\001\022\021\n\rLidarTai" +
      "lLeft\020\002\022\022\n\016LidarTailRight\020\003\022\020\n\014LidarHead" +
      "Mid\020\004\022\016\n\nLidarMerge\020\005\022\020\n\014LidarTailMid\020\006\022" +
      "\021\n\rLidarHeadLeft\020\007\022\022\n\016LidarHeadRight\020\010\022\020" +
      "\n\014LidarMidLeft\020\\\022\021\n\rLidarMidRight\020]\022\020\n\014L" +
      "idarTopLeft\020^\022\021\n\rLidarTopRight\020_\022\020\n\014Rada" +
      "rTailMid\020\024\022\020\n\014RadarHeadMid\020\025\022\030\n\024Ultrason" +
      "icRadarFront\020\031\022\026\n\022UltrasonicRadarMid\020\032\022\027" +
      "\n\023UltrasonicRadarRear\020\033\022\022\n\016CameraHeadLef" +
      "t\020(\022\023\n\017CameraHeadRight\020)\022\023\n\017CameraFrontL" +
      "eft\020*\022\024\n\020CameraFrontRight\020+\022\021\n\rCameraMid" +
      "Left\020,\022\022\n\016CameraMidRight\020-\022\022\n\016CameraTail" +
      "Left\020.\022\023\n\017CameraTailRight\020/\022\026\n\022CameraTra" +
      "fficLight\0200\022\021\n\rVehicleCenter\020<\022\017\n\013Asensi" +
      "ngIns\020=\022\t\n\005World\020F\022\014\n\010EgoFront\020G\022\017\n\013Fusi" +
      "onTrack\020Q\022\r\n\tFusionPre\020R\022\031\n\025FusionLidarR" +
      "adarMerge\020S\022\020\n\014VisualizeRaw\020[\022\021\n\rSyncLid" +
      "arHead\020d\022\026\n\022SyncLidarFrontLeft\020e\022\027\n\023Sync" +
      "LidarFrontRight\020f\022\024\n\020SyncLidarMidLeft\020g\022" +
      "\025\n\021SyncLidarMidRight\020h\022\025\n\021SyncLidarTailL" +
      "eft\020i\022\026\n\022SyncLidarTailRight\020j*Q\n\nSensorT" +
      "ype\022\013\n\007Unknown\020\000\022\t\n\005Lidar\020\001\022\t\n\005Radar\020\002\022\n" +
      "\n\006Camera\020\003\022\n\n\006Fusion\020\004\022\010\n\004Sync\020\005"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
