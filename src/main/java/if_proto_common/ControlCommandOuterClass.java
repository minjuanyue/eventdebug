// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_command.proto

package if_proto_common;

public final class ControlCommandOuterClass {
  private ControlCommandOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ControlCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:if_proto_common.ControlCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     * @return The header.
     */
    if_proto_common.BxtCommonHeader.Header getHeader();
    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     */
    if_proto_common.BxtCommonHeader.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * target throttle in percentage [0, 100]
     * </pre>
     *
     * <code>optional double throttle = 2 [default = 0];</code>
     * @return Whether the throttle field is set.
     */
    boolean hasThrottle();
    /**
     * <pre>
     * target throttle in percentage [0, 100]
     * </pre>
     *
     * <code>optional double throttle = 2 [default = 0];</code>
     * @return The throttle.
     */
    double getThrottle();

    /**
     * <pre>
     * unused, target brake in percentage [0, 100]
     * </pre>
     *
     * <code>optional double brake = 3 [default = 0];</code>
     * @return Whether the brake field is set.
     */
    boolean hasBrake();
    /**
     * <pre>
     * unused, target brake in percentage [0, 100]
     * </pre>
     *
     * <code>optional double brake = 3 [default = 0];</code>
     * @return The brake.
     */
    double getBrake();

    /**
     * <pre>
     * target non-directional steering rate
     * </pre>
     *
     * <code>optional double steering_rate = 4 [default = 400];</code>
     * @return Whether the steeringRate field is set.
     */
    boolean hasSteeringRate();
    /**
     * <pre>
     * target non-directional steering rate
     * </pre>
     *
     * <code>optional double steering_rate = 4 [default = 400];</code>
     * @return The steeringRate.
     */
    double getSteeringRate();

    /**
     * <pre>
     * target steering angle
     * </pre>
     *
     * <code>optional double steering_target = 5 [default = 0];</code>
     * @return Whether the steeringTarget field is set.
     */
    boolean hasSteeringTarget();
    /**
     * <pre>
     * target steering angle
     * </pre>
     *
     * <code>optional double steering_target = 5 [default = 0];</code>
     * @return The steeringTarget.
     */
    double getSteeringTarget();

    /**
     * <pre>
     * parking brake engage. true: engaged
     * </pre>
     *
     * <code>optional bool parking_brake = 6 [default = true];</code>
     * @return Whether the parkingBrake field is set.
     */
    boolean hasParkingBrake();
    /**
     * <pre>
     * parking brake engage. true: engaged
     * </pre>
     *
     * <code>optional bool parking_brake = 6 [default = true];</code>
     * @return The parkingBrake.
     */
    boolean getParkingBrake();

    /**
     * <pre>
     * unused, target speed, in km/h
     * </pre>
     *
     * <code>optional double speed = 7 [default = 0];</code>
     * @return Whether the speed field is set.
     */
    boolean hasSpeed();
    /**
     * <pre>
     * unused, target speed, in km/h
     * </pre>
     *
     * <code>optional double speed = 7 [default = 0];</code>
     * @return The speed.
     */
    double getSpeed();

    /**
     * <pre>
     * unused, target acceleration in m`s^-2
     * </pre>
     *
     * <code>optional double acceleration = 8 [default = 0];</code>
     * @return Whether the acceleration field is set.
     */
    boolean hasAcceleration();
    /**
     * <pre>
     * unused, target acceleration in m`s^-2
     * </pre>
     *
     * <code>optional double acceleration = 8 [default = 0];</code>
     * @return The acceleration.
     */
    double getAcceleration();

    /**
     * <pre>
     * target deceleration
     * </pre>
     *
     * <code>optional double deceleration = 9 [default = 0];</code>
     * @return Whether the deceleration field is set.
     */
    boolean hasDeceleration();
    /**
     * <pre>
     * target deceleration
     * </pre>
     *
     * <code>optional double deceleration = 9 [default = 0];</code>
     * @return The deceleration.
     */
    double getDeceleration();

    /**
     * <pre>
     * gear position
     * </pre>
     *
     * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
     * @return Whether the gearLocation field is set.
     */
    boolean hasGearLocation();
    /**
     * <pre>
     * gear position
     * </pre>
     *
     * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
     * @return The gearLocation.
     */
    if_proto_common.ChassisOuterClass.Chassis.GearPosition getGearLocation();

    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     * @return Whether the signal field is set.
     */
    boolean hasSignal();
    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     * @return The signal.
     */
    if_proto_common.ChassisOuterClass.Signal getSignal();
    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     */
    if_proto_common.ChassisOuterClass.SignalOrBuilder getSignalOrBuilder();

    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     * @return Whether the padMsg field is set.
     */
    boolean hasPadMsg();
    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     * @return The padMsg.
     */
    if_proto_common.PadMsg.PadMessage getPadMsg();
    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     */
    if_proto_common.PadMsg.PadMessageOrBuilder getPadMsgOrBuilder();

    /**
     * <pre>
     * if the brake signal is emergency
     * </pre>
     *
     * <code>optional bool emergency_brake = 13 [default = false];</code>
     * @return Whether the emergencyBrake field is set.
     */
    boolean hasEmergencyBrake();
    /**
     * <pre>
     * if the brake signal is emergency
     * </pre>
     *
     * <code>optional bool emergency_brake = 13 [default = false];</code>
     * @return The emergencyBrake.
     */
    boolean getEmergencyBrake();
  }
  /**
   * Protobuf type {@code if_proto_common.ControlCommand}
   */
  public static final class ControlCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:if_proto_common.ControlCommand)
      ControlCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControlCommand.newBuilder() to construct.
    private ControlCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlCommand() {
      steeringRate_ = 400D;
      parkingBrake_ = true;
      gearLocation_ = 2;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControlCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ControlCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if_proto_common.BxtCommonHeader.Header.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(if_proto_common.BxtCommonHeader.Header.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              throttle_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              brake_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              steeringRate_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              steeringTarget_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              parkingBrake_ = input.readBool();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              speed_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              acceleration_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              deceleration_ = input.readDouble();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.ChassisOuterClass.Chassis.GearPosition value = if_proto_common.ChassisOuterClass.Chassis.GearPosition.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                gearLocation_ = rawValue;
              }
              break;
            }
            case 90: {
              if_proto_common.ChassisOuterClass.Signal.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) != 0)) {
                subBuilder = signal_.toBuilder();
              }
              signal_ = input.readMessage(if_proto_common.ChassisOuterClass.Signal.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signal_);
                signal_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              if_proto_common.PadMsg.PadMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) != 0)) {
                subBuilder = padMsg_.toBuilder();
              }
              padMsg_ = input.readMessage(if_proto_common.PadMsg.PadMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(padMsg_);
                padMsg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              emergencyBrake_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return if_proto_common.ControlCommandOuterClass.internal_static_if_proto_common_ControlCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return if_proto_common.ControlCommandOuterClass.internal_static_if_proto_common_ControlCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              if_proto_common.ControlCommandOuterClass.ControlCommand.class, if_proto_common.ControlCommandOuterClass.ControlCommand.Builder.class);
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private if_proto_common.BxtCommonHeader.Header header_;
    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public if_proto_common.BxtCommonHeader.Header getHeader() {
      return header_ == null ? if_proto_common.BxtCommonHeader.Header.getDefaultInstance() : header_;
    }
    /**
     * <code>optional .if_proto_common.Header header = 1;</code>
     */
    @java.lang.Override
    public if_proto_common.BxtCommonHeader.HeaderOrBuilder getHeaderOrBuilder() {
      return header_ == null ? if_proto_common.BxtCommonHeader.Header.getDefaultInstance() : header_;
    }

    public static final int THROTTLE_FIELD_NUMBER = 2;
    private double throttle_;
    /**
     * <pre>
     * target throttle in percentage [0, 100]
     * </pre>
     *
     * <code>optional double throttle = 2 [default = 0];</code>
     * @return Whether the throttle field is set.
     */
    @java.lang.Override
    public boolean hasThrottle() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * target throttle in percentage [0, 100]
     * </pre>
     *
     * <code>optional double throttle = 2 [default = 0];</code>
     * @return The throttle.
     */
    @java.lang.Override
    public double getThrottle() {
      return throttle_;
    }

    public static final int BRAKE_FIELD_NUMBER = 3;
    private double brake_;
    /**
     * <pre>
     * unused, target brake in percentage [0, 100]
     * </pre>
     *
     * <code>optional double brake = 3 [default = 0];</code>
     * @return Whether the brake field is set.
     */
    @java.lang.Override
    public boolean hasBrake() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * unused, target brake in percentage [0, 100]
     * </pre>
     *
     * <code>optional double brake = 3 [default = 0];</code>
     * @return The brake.
     */
    @java.lang.Override
    public double getBrake() {
      return brake_;
    }

    public static final int STEERING_RATE_FIELD_NUMBER = 4;
    private double steeringRate_;
    /**
     * <pre>
     * target non-directional steering rate
     * </pre>
     *
     * <code>optional double steering_rate = 4 [default = 400];</code>
     * @return Whether the steeringRate field is set.
     */
    @java.lang.Override
    public boolean hasSteeringRate() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * target non-directional steering rate
     * </pre>
     *
     * <code>optional double steering_rate = 4 [default = 400];</code>
     * @return The steeringRate.
     */
    @java.lang.Override
    public double getSteeringRate() {
      return steeringRate_;
    }

    public static final int STEERING_TARGET_FIELD_NUMBER = 5;
    private double steeringTarget_;
    /**
     * <pre>
     * target steering angle
     * </pre>
     *
     * <code>optional double steering_target = 5 [default = 0];</code>
     * @return Whether the steeringTarget field is set.
     */
    @java.lang.Override
    public boolean hasSteeringTarget() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * target steering angle
     * </pre>
     *
     * <code>optional double steering_target = 5 [default = 0];</code>
     * @return The steeringTarget.
     */
    @java.lang.Override
    public double getSteeringTarget() {
      return steeringTarget_;
    }

    public static final int PARKING_BRAKE_FIELD_NUMBER = 6;
    private boolean parkingBrake_;
    /**
     * <pre>
     * parking brake engage. true: engaged
     * </pre>
     *
     * <code>optional bool parking_brake = 6 [default = true];</code>
     * @return Whether the parkingBrake field is set.
     */
    @java.lang.Override
    public boolean hasParkingBrake() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * parking brake engage. true: engaged
     * </pre>
     *
     * <code>optional bool parking_brake = 6 [default = true];</code>
     * @return The parkingBrake.
     */
    @java.lang.Override
    public boolean getParkingBrake() {
      return parkingBrake_;
    }

    public static final int SPEED_FIELD_NUMBER = 7;
    private double speed_;
    /**
     * <pre>
     * unused, target speed, in km/h
     * </pre>
     *
     * <code>optional double speed = 7 [default = 0];</code>
     * @return Whether the speed field is set.
     */
    @java.lang.Override
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * unused, target speed, in km/h
     * </pre>
     *
     * <code>optional double speed = 7 [default = 0];</code>
     * @return The speed.
     */
    @java.lang.Override
    public double getSpeed() {
      return speed_;
    }

    public static final int ACCELERATION_FIELD_NUMBER = 8;
    private double acceleration_;
    /**
     * <pre>
     * unused, target acceleration in m`s^-2
     * </pre>
     *
     * <code>optional double acceleration = 8 [default = 0];</code>
     * @return Whether the acceleration field is set.
     */
    @java.lang.Override
    public boolean hasAcceleration() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * unused, target acceleration in m`s^-2
     * </pre>
     *
     * <code>optional double acceleration = 8 [default = 0];</code>
     * @return The acceleration.
     */
    @java.lang.Override
    public double getAcceleration() {
      return acceleration_;
    }

    public static final int DECELERATION_FIELD_NUMBER = 9;
    private double deceleration_;
    /**
     * <pre>
     * target deceleration
     * </pre>
     *
     * <code>optional double deceleration = 9 [default = 0];</code>
     * @return Whether the deceleration field is set.
     */
    @java.lang.Override
    public boolean hasDeceleration() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * target deceleration
     * </pre>
     *
     * <code>optional double deceleration = 9 [default = 0];</code>
     * @return The deceleration.
     */
    @java.lang.Override
    public double getDeceleration() {
      return deceleration_;
    }

    public static final int GEAR_LOCATION_FIELD_NUMBER = 10;
    private int gearLocation_;
    /**
     * <pre>
     * gear position
     * </pre>
     *
     * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
     * @return Whether the gearLocation field is set.
     */
    @java.lang.Override public boolean hasGearLocation() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * gear position
     * </pre>
     *
     * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
     * @return The gearLocation.
     */
    @java.lang.Override public if_proto_common.ChassisOuterClass.Chassis.GearPosition getGearLocation() {
      @SuppressWarnings("deprecation")
      if_proto_common.ChassisOuterClass.Chassis.GearPosition result = if_proto_common.ChassisOuterClass.Chassis.GearPosition.valueOf(gearLocation_);
      return result == null ? if_proto_common.ChassisOuterClass.Chassis.GearPosition.GEAR_NEUTRAL : result;
    }

    public static final int SIGNAL_FIELD_NUMBER = 11;
    private if_proto_common.ChassisOuterClass.Signal signal_;
    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     * @return Whether the signal field is set.
     */
    @java.lang.Override
    public boolean hasSignal() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     * @return The signal.
     */
    @java.lang.Override
    public if_proto_common.ChassisOuterClass.Signal getSignal() {
      return signal_ == null ? if_proto_common.ChassisOuterClass.Signal.getDefaultInstance() : signal_;
    }
    /**
     * <pre>
     * ipc signal
     * </pre>
     *
     * <code>optional .if_proto_common.Signal signal = 11;</code>
     */
    @java.lang.Override
    public if_proto_common.ChassisOuterClass.SignalOrBuilder getSignalOrBuilder() {
      return signal_ == null ? if_proto_common.ChassisOuterClass.Signal.getDefaultInstance() : signal_;
    }

    public static final int PAD_MSG_FIELD_NUMBER = 12;
    private if_proto_common.PadMsg.PadMessage padMsg_;
    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     * @return Whether the padMsg field is set.
     */
    @java.lang.Override
    public boolean hasPadMsg() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     * @return The padMsg.
     */
    @java.lang.Override
    public if_proto_common.PadMsg.PadMessage getPadMsg() {
      return padMsg_ == null ? if_proto_common.PadMsg.PadMessage.getDefaultInstance() : padMsg_;
    }
    /**
     * <pre>
     * auto driving mode control
     * </pre>
     *
     * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
     */
    @java.lang.Override
    public if_proto_common.PadMsg.PadMessageOrBuilder getPadMsgOrBuilder() {
      return padMsg_ == null ? if_proto_common.PadMsg.PadMessage.getDefaultInstance() : padMsg_;
    }

    public static final int EMERGENCY_BRAKE_FIELD_NUMBER = 13;
    private boolean emergencyBrake_;
    /**
     * <pre>
     * if the brake signal is emergency
     * </pre>
     *
     * <code>optional bool emergency_brake = 13 [default = false];</code>
     * @return Whether the emergencyBrake field is set.
     */
    @java.lang.Override
    public boolean hasEmergencyBrake() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * if the brake signal is emergency
     * </pre>
     *
     * <code>optional bool emergency_brake = 13 [default = false];</code>
     * @return The emergencyBrake.
     */
    @java.lang.Override
    public boolean getEmergencyBrake() {
      return emergencyBrake_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getHeader());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, throttle_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, brake_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, steeringRate_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, steeringTarget_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(6, parkingBrake_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, speed_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, acceleration_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, deceleration_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeEnum(10, gearLocation_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(11, getSignal());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeMessage(12, getPadMsg());
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeBool(13, emergencyBrake_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHeader());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, throttle_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, brake_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, steeringRate_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, steeringTarget_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, parkingBrake_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, speed_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, acceleration_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, deceleration_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, gearLocation_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSignal());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getPadMsg());
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, emergencyBrake_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof if_proto_common.ControlCommandOuterClass.ControlCommand)) {
        return super.equals(obj);
      }
      if_proto_common.ControlCommandOuterClass.ControlCommand other = (if_proto_common.ControlCommandOuterClass.ControlCommand) obj;

      if (hasHeader() != other.hasHeader()) return false;
      if (hasHeader()) {
        if (!getHeader()
            .equals(other.getHeader())) return false;
      }
      if (hasThrottle() != other.hasThrottle()) return false;
      if (hasThrottle()) {
        if (java.lang.Double.doubleToLongBits(getThrottle())
            != java.lang.Double.doubleToLongBits(
                other.getThrottle())) return false;
      }
      if (hasBrake() != other.hasBrake()) return false;
      if (hasBrake()) {
        if (java.lang.Double.doubleToLongBits(getBrake())
            != java.lang.Double.doubleToLongBits(
                other.getBrake())) return false;
      }
      if (hasSteeringRate() != other.hasSteeringRate()) return false;
      if (hasSteeringRate()) {
        if (java.lang.Double.doubleToLongBits(getSteeringRate())
            != java.lang.Double.doubleToLongBits(
                other.getSteeringRate())) return false;
      }
      if (hasSteeringTarget() != other.hasSteeringTarget()) return false;
      if (hasSteeringTarget()) {
        if (java.lang.Double.doubleToLongBits(getSteeringTarget())
            != java.lang.Double.doubleToLongBits(
                other.getSteeringTarget())) return false;
      }
      if (hasParkingBrake() != other.hasParkingBrake()) return false;
      if (hasParkingBrake()) {
        if (getParkingBrake()
            != other.getParkingBrake()) return false;
      }
      if (hasSpeed() != other.hasSpeed()) return false;
      if (hasSpeed()) {
        if (java.lang.Double.doubleToLongBits(getSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getSpeed())) return false;
      }
      if (hasAcceleration() != other.hasAcceleration()) return false;
      if (hasAcceleration()) {
        if (java.lang.Double.doubleToLongBits(getAcceleration())
            != java.lang.Double.doubleToLongBits(
                other.getAcceleration())) return false;
      }
      if (hasDeceleration() != other.hasDeceleration()) return false;
      if (hasDeceleration()) {
        if (java.lang.Double.doubleToLongBits(getDeceleration())
            != java.lang.Double.doubleToLongBits(
                other.getDeceleration())) return false;
      }
      if (hasGearLocation() != other.hasGearLocation()) return false;
      if (hasGearLocation()) {
        if (gearLocation_ != other.gearLocation_) return false;
      }
      if (hasSignal() != other.hasSignal()) return false;
      if (hasSignal()) {
        if (!getSignal()
            .equals(other.getSignal())) return false;
      }
      if (hasPadMsg() != other.hasPadMsg()) return false;
      if (hasPadMsg()) {
        if (!getPadMsg()
            .equals(other.getPadMsg())) return false;
      }
      if (hasEmergencyBrake() != other.hasEmergencyBrake()) return false;
      if (hasEmergencyBrake()) {
        if (getEmergencyBrake()
            != other.getEmergencyBrake()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeader()) {
        hash = (37 * hash) + HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHeader().hashCode();
      }
      if (hasThrottle()) {
        hash = (37 * hash) + THROTTLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getThrottle()));
      }
      if (hasBrake()) {
        hash = (37 * hash) + BRAKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBrake()));
      }
      if (hasSteeringRate()) {
        hash = (37 * hash) + STEERING_RATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSteeringRate()));
      }
      if (hasSteeringTarget()) {
        hash = (37 * hash) + STEERING_TARGET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSteeringTarget()));
      }
      if (hasParkingBrake()) {
        hash = (37 * hash) + PARKING_BRAKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getParkingBrake());
      }
      if (hasSpeed()) {
        hash = (37 * hash) + SPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSpeed()));
      }
      if (hasAcceleration()) {
        hash = (37 * hash) + ACCELERATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAcceleration()));
      }
      if (hasDeceleration()) {
        hash = (37 * hash) + DECELERATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDeceleration()));
      }
      if (hasGearLocation()) {
        hash = (37 * hash) + GEAR_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + gearLocation_;
      }
      if (hasSignal()) {
        hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
        hash = (53 * hash) + getSignal().hashCode();
      }
      if (hasPadMsg()) {
        hash = (37 * hash) + PAD_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getPadMsg().hashCode();
      }
      if (hasEmergencyBrake()) {
        hash = (37 * hash) + EMERGENCY_BRAKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEmergencyBrake());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.ControlCommandOuterClass.ControlCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(if_proto_common.ControlCommandOuterClass.ControlCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code if_proto_common.ControlCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:if_proto_common.ControlCommand)
        if_proto_common.ControlCommandOuterClass.ControlCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return if_proto_common.ControlCommandOuterClass.internal_static_if_proto_common_ControlCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return if_proto_common.ControlCommandOuterClass.internal_static_if_proto_common_ControlCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                if_proto_common.ControlCommandOuterClass.ControlCommand.class, if_proto_common.ControlCommandOuterClass.ControlCommand.Builder.class);
      }

      // Construct using if_proto_common.ControlCommandOuterClass.ControlCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
          getSignalFieldBuilder();
          getPadMsgFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = null;
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        throttle_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        brake_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        steeringRate_ = 400D;
        bitField0_ = (bitField0_ & ~0x00000008);
        steeringTarget_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        parkingBrake_ = true;
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        acceleration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        deceleration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        gearLocation_ = 2;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (signalBuilder_ == null) {
          signal_ = null;
        } else {
          signalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (padMsgBuilder_ == null) {
          padMsg_ = null;
        } else {
          padMsgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        emergencyBrake_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return if_proto_common.ControlCommandOuterClass.internal_static_if_proto_common_ControlCommand_descriptor;
      }

      @java.lang.Override
      public if_proto_common.ControlCommandOuterClass.ControlCommand getDefaultInstanceForType() {
        return if_proto_common.ControlCommandOuterClass.ControlCommand.getDefaultInstance();
      }

      @java.lang.Override
      public if_proto_common.ControlCommandOuterClass.ControlCommand build() {
        if_proto_common.ControlCommandOuterClass.ControlCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public if_proto_common.ControlCommandOuterClass.ControlCommand buildPartial() {
        if_proto_common.ControlCommandOuterClass.ControlCommand result = new if_proto_common.ControlCommandOuterClass.ControlCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (headerBuilder_ == null) {
            result.header_ = header_;
          } else {
            result.header_ = headerBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.throttle_ = throttle_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.brake_ = brake_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.steeringRate_ = steeringRate_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.steeringTarget_ = steeringTarget_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.parkingBrake_ = parkingBrake_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.speed_ = speed_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.acceleration_ = acceleration_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.deceleration_ = deceleration_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          to_bitField0_ |= 0x00000200;
        }
        result.gearLocation_ = gearLocation_;
        if (((from_bitField0_ & 0x00000400) != 0)) {
          if (signalBuilder_ == null) {
            result.signal_ = signal_;
          } else {
            result.signal_ = signalBuilder_.build();
          }
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          if (padMsgBuilder_ == null) {
            result.padMsg_ = padMsg_;
          } else {
            result.padMsg_ = padMsgBuilder_.build();
          }
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.emergencyBrake_ = emergencyBrake_;
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof if_proto_common.ControlCommandOuterClass.ControlCommand) {
          return mergeFrom((if_proto_common.ControlCommandOuterClass.ControlCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(if_proto_common.ControlCommandOuterClass.ControlCommand other) {
        if (other == if_proto_common.ControlCommandOuterClass.ControlCommand.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasThrottle()) {
          setThrottle(other.getThrottle());
        }
        if (other.hasBrake()) {
          setBrake(other.getBrake());
        }
        if (other.hasSteeringRate()) {
          setSteeringRate(other.getSteeringRate());
        }
        if (other.hasSteeringTarget()) {
          setSteeringTarget(other.getSteeringTarget());
        }
        if (other.hasParkingBrake()) {
          setParkingBrake(other.getParkingBrake());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasAcceleration()) {
          setAcceleration(other.getAcceleration());
        }
        if (other.hasDeceleration()) {
          setDeceleration(other.getDeceleration());
        }
        if (other.hasGearLocation()) {
          setGearLocation(other.getGearLocation());
        }
        if (other.hasSignal()) {
          mergeSignal(other.getSignal());
        }
        if (other.hasPadMsg()) {
          mergePadMsg(other.getPadMsg());
        }
        if (other.hasEmergencyBrake()) {
          setEmergencyBrake(other.getEmergencyBrake());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if_proto_common.ControlCommandOuterClass.ControlCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (if_proto_common.ControlCommandOuterClass.ControlCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private if_proto_common.BxtCommonHeader.Header header_;
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.BxtCommonHeader.Header, if_proto_common.BxtCommonHeader.Header.Builder, if_proto_common.BxtCommonHeader.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       * @return The header.
       */
      public if_proto_common.BxtCommonHeader.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_ == null ? if_proto_common.BxtCommonHeader.Header.getDefaultInstance() : header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public Builder setHeader(if_proto_common.BxtCommonHeader.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public Builder setHeader(
          if_proto_common.BxtCommonHeader.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public Builder mergeHeader(if_proto_common.BxtCommonHeader.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              header_ != null &&
              header_ != if_proto_common.BxtCommonHeader.Header.getDefaultInstance()) {
            header_ =
              if_proto_common.BxtCommonHeader.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = null;
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public if_proto_common.BxtCommonHeader.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      public if_proto_common.BxtCommonHeader.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_ == null ?
              if_proto_common.BxtCommonHeader.Header.getDefaultInstance() : header_;
        }
      }
      /**
       * <code>optional .if_proto_common.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.BxtCommonHeader.Header, if_proto_common.BxtCommonHeader.Header.Builder, if_proto_common.BxtCommonHeader.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              if_proto_common.BxtCommonHeader.Header, if_proto_common.BxtCommonHeader.Header.Builder, if_proto_common.BxtCommonHeader.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private double throttle_ ;
      /**
       * <pre>
       * target throttle in percentage [0, 100]
       * </pre>
       *
       * <code>optional double throttle = 2 [default = 0];</code>
       * @return Whether the throttle field is set.
       */
      @java.lang.Override
      public boolean hasThrottle() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * target throttle in percentage [0, 100]
       * </pre>
       *
       * <code>optional double throttle = 2 [default = 0];</code>
       * @return The throttle.
       */
      @java.lang.Override
      public double getThrottle() {
        return throttle_;
      }
      /**
       * <pre>
       * target throttle in percentage [0, 100]
       * </pre>
       *
       * <code>optional double throttle = 2 [default = 0];</code>
       * @param value The throttle to set.
       * @return This builder for chaining.
       */
      public Builder setThrottle(double value) {
        bitField0_ |= 0x00000002;
        throttle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target throttle in percentage [0, 100]
       * </pre>
       *
       * <code>optional double throttle = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearThrottle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        throttle_ = 0D;
        onChanged();
        return this;
      }

      private double brake_ ;
      /**
       * <pre>
       * unused, target brake in percentage [0, 100]
       * </pre>
       *
       * <code>optional double brake = 3 [default = 0];</code>
       * @return Whether the brake field is set.
       */
      @java.lang.Override
      public boolean hasBrake() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * unused, target brake in percentage [0, 100]
       * </pre>
       *
       * <code>optional double brake = 3 [default = 0];</code>
       * @return The brake.
       */
      @java.lang.Override
      public double getBrake() {
        return brake_;
      }
      /**
       * <pre>
       * unused, target brake in percentage [0, 100]
       * </pre>
       *
       * <code>optional double brake = 3 [default = 0];</code>
       * @param value The brake to set.
       * @return This builder for chaining.
       */
      public Builder setBrake(double value) {
        bitField0_ |= 0x00000004;
        brake_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unused, target brake in percentage [0, 100]
       * </pre>
       *
       * <code>optional double brake = 3 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearBrake() {
        bitField0_ = (bitField0_ & ~0x00000004);
        brake_ = 0D;
        onChanged();
        return this;
      }

      private double steeringRate_ = 400D;
      /**
       * <pre>
       * target non-directional steering rate
       * </pre>
       *
       * <code>optional double steering_rate = 4 [default = 400];</code>
       * @return Whether the steeringRate field is set.
       */
      @java.lang.Override
      public boolean hasSteeringRate() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * target non-directional steering rate
       * </pre>
       *
       * <code>optional double steering_rate = 4 [default = 400];</code>
       * @return The steeringRate.
       */
      @java.lang.Override
      public double getSteeringRate() {
        return steeringRate_;
      }
      /**
       * <pre>
       * target non-directional steering rate
       * </pre>
       *
       * <code>optional double steering_rate = 4 [default = 400];</code>
       * @param value The steeringRate to set.
       * @return This builder for chaining.
       */
      public Builder setSteeringRate(double value) {
        bitField0_ |= 0x00000008;
        steeringRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target non-directional steering rate
       * </pre>
       *
       * <code>optional double steering_rate = 4 [default = 400];</code>
       * @return This builder for chaining.
       */
      public Builder clearSteeringRate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        steeringRate_ = 400D;
        onChanged();
        return this;
      }

      private double steeringTarget_ ;
      /**
       * <pre>
       * target steering angle
       * </pre>
       *
       * <code>optional double steering_target = 5 [default = 0];</code>
       * @return Whether the steeringTarget field is set.
       */
      @java.lang.Override
      public boolean hasSteeringTarget() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * target steering angle
       * </pre>
       *
       * <code>optional double steering_target = 5 [default = 0];</code>
       * @return The steeringTarget.
       */
      @java.lang.Override
      public double getSteeringTarget() {
        return steeringTarget_;
      }
      /**
       * <pre>
       * target steering angle
       * </pre>
       *
       * <code>optional double steering_target = 5 [default = 0];</code>
       * @param value The steeringTarget to set.
       * @return This builder for chaining.
       */
      public Builder setSteeringTarget(double value) {
        bitField0_ |= 0x00000010;
        steeringTarget_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target steering angle
       * </pre>
       *
       * <code>optional double steering_target = 5 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearSteeringTarget() {
        bitField0_ = (bitField0_ & ~0x00000010);
        steeringTarget_ = 0D;
        onChanged();
        return this;
      }

      private boolean parkingBrake_ = true;
      /**
       * <pre>
       * parking brake engage. true: engaged
       * </pre>
       *
       * <code>optional bool parking_brake = 6 [default = true];</code>
       * @return Whether the parkingBrake field is set.
       */
      @java.lang.Override
      public boolean hasParkingBrake() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * parking brake engage. true: engaged
       * </pre>
       *
       * <code>optional bool parking_brake = 6 [default = true];</code>
       * @return The parkingBrake.
       */
      @java.lang.Override
      public boolean getParkingBrake() {
        return parkingBrake_;
      }
      /**
       * <pre>
       * parking brake engage. true: engaged
       * </pre>
       *
       * <code>optional bool parking_brake = 6 [default = true];</code>
       * @param value The parkingBrake to set.
       * @return This builder for chaining.
       */
      public Builder setParkingBrake(boolean value) {
        bitField0_ |= 0x00000020;
        parkingBrake_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * parking brake engage. true: engaged
       * </pre>
       *
       * <code>optional bool parking_brake = 6 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearParkingBrake() {
        bitField0_ = (bitField0_ & ~0x00000020);
        parkingBrake_ = true;
        onChanged();
        return this;
      }

      private double speed_ ;
      /**
       * <pre>
       * unused, target speed, in km/h
       * </pre>
       *
       * <code>optional double speed = 7 [default = 0];</code>
       * @return Whether the speed field is set.
       */
      @java.lang.Override
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * unused, target speed, in km/h
       * </pre>
       *
       * <code>optional double speed = 7 [default = 0];</code>
       * @return The speed.
       */
      @java.lang.Override
      public double getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * unused, target speed, in km/h
       * </pre>
       *
       * <code>optional double speed = 7 [default = 0];</code>
       * @param value The speed to set.
       * @return This builder for chaining.
       */
      public Builder setSpeed(double value) {
        bitField0_ |= 0x00000040;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unused, target speed, in km/h
       * </pre>
       *
       * <code>optional double speed = 7 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        speed_ = 0D;
        onChanged();
        return this;
      }

      private double acceleration_ ;
      /**
       * <pre>
       * unused, target acceleration in m`s^-2
       * </pre>
       *
       * <code>optional double acceleration = 8 [default = 0];</code>
       * @return Whether the acceleration field is set.
       */
      @java.lang.Override
      public boolean hasAcceleration() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * unused, target acceleration in m`s^-2
       * </pre>
       *
       * <code>optional double acceleration = 8 [default = 0];</code>
       * @return The acceleration.
       */
      @java.lang.Override
      public double getAcceleration() {
        return acceleration_;
      }
      /**
       * <pre>
       * unused, target acceleration in m`s^-2
       * </pre>
       *
       * <code>optional double acceleration = 8 [default = 0];</code>
       * @param value The acceleration to set.
       * @return This builder for chaining.
       */
      public Builder setAcceleration(double value) {
        bitField0_ |= 0x00000080;
        acceleration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unused, target acceleration in m`s^-2
       * </pre>
       *
       * <code>optional double acceleration = 8 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceleration() {
        bitField0_ = (bitField0_ & ~0x00000080);
        acceleration_ = 0D;
        onChanged();
        return this;
      }

      private double deceleration_ ;
      /**
       * <pre>
       * target deceleration
       * </pre>
       *
       * <code>optional double deceleration = 9 [default = 0];</code>
       * @return Whether the deceleration field is set.
       */
      @java.lang.Override
      public boolean hasDeceleration() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * target deceleration
       * </pre>
       *
       * <code>optional double deceleration = 9 [default = 0];</code>
       * @return The deceleration.
       */
      @java.lang.Override
      public double getDeceleration() {
        return deceleration_;
      }
      /**
       * <pre>
       * target deceleration
       * </pre>
       *
       * <code>optional double deceleration = 9 [default = 0];</code>
       * @param value The deceleration to set.
       * @return This builder for chaining.
       */
      public Builder setDeceleration(double value) {
        bitField0_ |= 0x00000100;
        deceleration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target deceleration
       * </pre>
       *
       * <code>optional double deceleration = 9 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearDeceleration() {
        bitField0_ = (bitField0_ & ~0x00000100);
        deceleration_ = 0D;
        onChanged();
        return this;
      }

      private int gearLocation_ = 2;
      /**
       * <pre>
       * gear position
       * </pre>
       *
       * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
       * @return Whether the gearLocation field is set.
       */
      @java.lang.Override public boolean hasGearLocation() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * gear position
       * </pre>
       *
       * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
       * @return The gearLocation.
       */
      @java.lang.Override
      public if_proto_common.ChassisOuterClass.Chassis.GearPosition getGearLocation() {
        @SuppressWarnings("deprecation")
        if_proto_common.ChassisOuterClass.Chassis.GearPosition result = if_proto_common.ChassisOuterClass.Chassis.GearPosition.valueOf(gearLocation_);
        return result == null ? if_proto_common.ChassisOuterClass.Chassis.GearPosition.GEAR_NEUTRAL : result;
      }
      /**
       * <pre>
       * gear position
       * </pre>
       *
       * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
       * @param value The gearLocation to set.
       * @return This builder for chaining.
       */
      public Builder setGearLocation(if_proto_common.ChassisOuterClass.Chassis.GearPosition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        gearLocation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * gear position
       * </pre>
       *
       * <code>optional .if_proto_common.Chassis.GearPosition gear_location = 10 [default = GEAR_NEUTRAL];</code>
       * @return This builder for chaining.
       */
      public Builder clearGearLocation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gearLocation_ = 2;
        onChanged();
        return this;
      }

      private if_proto_common.ChassisOuterClass.Signal signal_;
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.ChassisOuterClass.Signal, if_proto_common.ChassisOuterClass.Signal.Builder, if_proto_common.ChassisOuterClass.SignalOrBuilder> signalBuilder_;
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       * @return Whether the signal field is set.
       */
      public boolean hasSignal() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       * @return The signal.
       */
      public if_proto_common.ChassisOuterClass.Signal getSignal() {
        if (signalBuilder_ == null) {
          return signal_ == null ? if_proto_common.ChassisOuterClass.Signal.getDefaultInstance() : signal_;
        } else {
          return signalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public Builder setSignal(if_proto_common.ChassisOuterClass.Signal value) {
        if (signalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signal_ = value;
          onChanged();
        } else {
          signalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public Builder setSignal(
          if_proto_common.ChassisOuterClass.Signal.Builder builderForValue) {
        if (signalBuilder_ == null) {
          signal_ = builderForValue.build();
          onChanged();
        } else {
          signalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public Builder mergeSignal(if_proto_common.ChassisOuterClass.Signal value) {
        if (signalBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
              signal_ != null &&
              signal_ != if_proto_common.ChassisOuterClass.Signal.getDefaultInstance()) {
            signal_ =
              if_proto_common.ChassisOuterClass.Signal.newBuilder(signal_).mergeFrom(value).buildPartial();
          } else {
            signal_ = value;
          }
          onChanged();
        } else {
          signalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public Builder clearSignal() {
        if (signalBuilder_ == null) {
          signal_ = null;
          onChanged();
        } else {
          signalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public if_proto_common.ChassisOuterClass.Signal.Builder getSignalBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getSignalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      public if_proto_common.ChassisOuterClass.SignalOrBuilder getSignalOrBuilder() {
        if (signalBuilder_ != null) {
          return signalBuilder_.getMessageOrBuilder();
        } else {
          return signal_ == null ?
              if_proto_common.ChassisOuterClass.Signal.getDefaultInstance() : signal_;
        }
      }
      /**
       * <pre>
       * ipc signal
       * </pre>
       *
       * <code>optional .if_proto_common.Signal signal = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.ChassisOuterClass.Signal, if_proto_common.ChassisOuterClass.Signal.Builder, if_proto_common.ChassisOuterClass.SignalOrBuilder> 
          getSignalFieldBuilder() {
        if (signalBuilder_ == null) {
          signalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              if_proto_common.ChassisOuterClass.Signal, if_proto_common.ChassisOuterClass.Signal.Builder, if_proto_common.ChassisOuterClass.SignalOrBuilder>(
                  getSignal(),
                  getParentForChildren(),
                  isClean());
          signal_ = null;
        }
        return signalBuilder_;
      }

      private if_proto_common.PadMsg.PadMessage padMsg_;
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.PadMsg.PadMessage, if_proto_common.PadMsg.PadMessage.Builder, if_proto_common.PadMsg.PadMessageOrBuilder> padMsgBuilder_;
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       * @return Whether the padMsg field is set.
       */
      public boolean hasPadMsg() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       * @return The padMsg.
       */
      public if_proto_common.PadMsg.PadMessage getPadMsg() {
        if (padMsgBuilder_ == null) {
          return padMsg_ == null ? if_proto_common.PadMsg.PadMessage.getDefaultInstance() : padMsg_;
        } else {
          return padMsgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public Builder setPadMsg(if_proto_common.PadMsg.PadMessage value) {
        if (padMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          padMsg_ = value;
          onChanged();
        } else {
          padMsgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public Builder setPadMsg(
          if_proto_common.PadMsg.PadMessage.Builder builderForValue) {
        if (padMsgBuilder_ == null) {
          padMsg_ = builderForValue.build();
          onChanged();
        } else {
          padMsgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public Builder mergePadMsg(if_proto_common.PadMsg.PadMessage value) {
        if (padMsgBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
              padMsg_ != null &&
              padMsg_ != if_proto_common.PadMsg.PadMessage.getDefaultInstance()) {
            padMsg_ =
              if_proto_common.PadMsg.PadMessage.newBuilder(padMsg_).mergeFrom(value).buildPartial();
          } else {
            padMsg_ = value;
          }
          onChanged();
        } else {
          padMsgBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public Builder clearPadMsg() {
        if (padMsgBuilder_ == null) {
          padMsg_ = null;
          onChanged();
        } else {
          padMsgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public if_proto_common.PadMsg.PadMessage.Builder getPadMsgBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getPadMsgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      public if_proto_common.PadMsg.PadMessageOrBuilder getPadMsgOrBuilder() {
        if (padMsgBuilder_ != null) {
          return padMsgBuilder_.getMessageOrBuilder();
        } else {
          return padMsg_ == null ?
              if_proto_common.PadMsg.PadMessage.getDefaultInstance() : padMsg_;
        }
      }
      /**
       * <pre>
       * auto driving mode control
       * </pre>
       *
       * <code>optional .if_proto_common.PadMessage pad_msg = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.PadMsg.PadMessage, if_proto_common.PadMsg.PadMessage.Builder, if_proto_common.PadMsg.PadMessageOrBuilder> 
          getPadMsgFieldBuilder() {
        if (padMsgBuilder_ == null) {
          padMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              if_proto_common.PadMsg.PadMessage, if_proto_common.PadMsg.PadMessage.Builder, if_proto_common.PadMsg.PadMessageOrBuilder>(
                  getPadMsg(),
                  getParentForChildren(),
                  isClean());
          padMsg_ = null;
        }
        return padMsgBuilder_;
      }

      private boolean emergencyBrake_ ;
      /**
       * <pre>
       * if the brake signal is emergency
       * </pre>
       *
       * <code>optional bool emergency_brake = 13 [default = false];</code>
       * @return Whether the emergencyBrake field is set.
       */
      @java.lang.Override
      public boolean hasEmergencyBrake() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * if the brake signal is emergency
       * </pre>
       *
       * <code>optional bool emergency_brake = 13 [default = false];</code>
       * @return The emergencyBrake.
       */
      @java.lang.Override
      public boolean getEmergencyBrake() {
        return emergencyBrake_;
      }
      /**
       * <pre>
       * if the brake signal is emergency
       * </pre>
       *
       * <code>optional bool emergency_brake = 13 [default = false];</code>
       * @param value The emergencyBrake to set.
       * @return This builder for chaining.
       */
      public Builder setEmergencyBrake(boolean value) {
        bitField0_ |= 0x00001000;
        emergencyBrake_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if the brake signal is emergency
       * </pre>
       *
       * <code>optional bool emergency_brake = 13 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearEmergencyBrake() {
        bitField0_ = (bitField0_ & ~0x00001000);
        emergencyBrake_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:if_proto_common.ControlCommand)
    }

    // @@protoc_insertion_point(class_scope:if_proto_common.ControlCommand)
    private static final if_proto_common.ControlCommandOuterClass.ControlCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new if_proto_common.ControlCommandOuterClass.ControlCommand();
    }

    public static if_proto_common.ControlCommandOuterClass.ControlCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ControlCommand>
        PARSER = new com.google.protobuf.AbstractParser<ControlCommand>() {
      @java.lang.Override
      public ControlCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControlCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public if_proto_common.ControlCommandOuterClass.ControlCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_if_proto_common_ControlCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_if_proto_common_ControlCommand_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025control_command.proto\022\017if_proto_common" +
      "\032\rchassis.proto\032\027bxt.common.Header.proto" +
      "\032\rpad_msg.proto\"\274\003\n\016ControlCommand\022\'\n\006he" +
      "ader\030\001 \001(\0132\027.if_proto_common.Header\022\023\n\010t" +
      "hrottle\030\002 \001(\001:\0010\022\020\n\005brake\030\003 \001(\001:\0010\022\032\n\rst" +
      "eering_rate\030\004 \001(\001:\003400\022\032\n\017steering_targe" +
      "t\030\005 \001(\001:\0010\022\033\n\rparking_brake\030\006 \001(\010:\004true\022" +
      "\020\n\005speed\030\007 \001(\001:\0010\022\027\n\014acceleration\030\010 \001(\001:" +
      "\0010\022\027\n\014deceleration\030\t \001(\001:\0010\022J\n\rgear_loca" +
      "tion\030\n \001(\0162%.if_proto_common.Chassis.Gea" +
      "rPosition:\014GEAR_NEUTRAL\022\'\n\006signal\030\013 \001(\0132" +
      "\027.if_proto_common.Signal\022,\n\007pad_msg\030\014 \001(" +
      "\0132\033.if_proto_common.PadMessage\022\036\n\017emerge" +
      "ncy_brake\030\r \001(\010:\005false"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          if_proto_common.ChassisOuterClass.getDescriptor(),
          if_proto_common.BxtCommonHeader.getDescriptor(),
          if_proto_common.PadMsg.getDescriptor(),
        });
    internal_static_if_proto_common_ControlCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_if_proto_common_ControlCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_if_proto_common_ControlCommand_descriptor,
        new java.lang.String[] { "Header", "Throttle", "Brake", "SteeringRate", "SteeringTarget", "ParkingBrake", "Speed", "Acceleration", "Deceleration", "GearLocation", "Signal", "PadMsg", "EmergencyBrake", });
    if_proto_common.ChassisOuterClass.getDescriptor();
    if_proto_common.BxtCommonHeader.getDescriptor();
    if_proto_common.PadMsg.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
