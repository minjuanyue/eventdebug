// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: drc_event_debug.proto

package event_debug;

public final class DrcEventDebug {
  private DrcEventDebug() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code event_debug.ABNORMAL_PARKING_STATE_E}
   */
  public enum ABNORMAL_PARKING_STATE_E
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ABNORMAL_PARKING_NULL_STATE = 0;</code>
     */
    ABNORMAL_PARKING_NULL_STATE(0),
    /**
     * <code>ABNORMAL_PARKING_INIT_STATE = 1;</code>
     */
    ABNORMAL_PARKING_INIT_STATE(1),
    /**
     * <code>ABNORMAL_PARKING_WATCH_STATE = 2;</code>
     */
    ABNORMAL_PARKING_WATCH_STATE(2),
    /**
     * <code>ABNORMAL_PARKING_ACTIVE_STATE = 3;</code>
     */
    ABNORMAL_PARKING_ACTIVE_STATE(3),
    /**
     * <code>ABNORMAL_PARKING_SUSPEND_STATE = 4;</code>
     */
    ABNORMAL_PARKING_SUSPEND_STATE(4),
    /**
     * <code>ABNORMAL_PARKING_WATCH_SUSPEND_STATE = 5;</code>
     */
    ABNORMAL_PARKING_WATCH_SUSPEND_STATE(5),
    /**
     * <code>TRAFFIC_ACCIDENT_NULL_STATE = 6;</code>
     */
    TRAFFIC_ACCIDENT_NULL_STATE(6),
    /**
     * <code>TRAFFIC_ACCIDENT_ACTIVE_STATE = 7;</code>
     */
    TRAFFIC_ACCIDENT_ACTIVE_STATE(7),
    /**
     * <code>TRAFFIC_ACCIDENT_SUSPEND_STATE = 8;</code>
     */
    TRAFFIC_ACCIDENT_SUSPEND_STATE(8),
    /**
     * <code>EVENT_LANE_TRAFFIC_JAM = 9;</code>
     */
    EVENT_LANE_TRAFFIC_JAM(9),
    /**
     * <code>EVENT_NOCONESL_LANE_CLOSED = 10;</code>
     */
    EVENT_NOCONESL_LANE_CLOSED(10),
    ;

    /**
     * <code>ABNORMAL_PARKING_NULL_STATE = 0;</code>
     */
    public static final int ABNORMAL_PARKING_NULL_STATE_VALUE = 0;
    /**
     * <code>ABNORMAL_PARKING_INIT_STATE = 1;</code>
     */
    public static final int ABNORMAL_PARKING_INIT_STATE_VALUE = 1;
    /**
     * <code>ABNORMAL_PARKING_WATCH_STATE = 2;</code>
     */
    public static final int ABNORMAL_PARKING_WATCH_STATE_VALUE = 2;
    /**
     * <code>ABNORMAL_PARKING_ACTIVE_STATE = 3;</code>
     */
    public static final int ABNORMAL_PARKING_ACTIVE_STATE_VALUE = 3;
    /**
     * <code>ABNORMAL_PARKING_SUSPEND_STATE = 4;</code>
     */
    public static final int ABNORMAL_PARKING_SUSPEND_STATE_VALUE = 4;
    /**
     * <code>ABNORMAL_PARKING_WATCH_SUSPEND_STATE = 5;</code>
     */
    public static final int ABNORMAL_PARKING_WATCH_SUSPEND_STATE_VALUE = 5;
    /**
     * <code>TRAFFIC_ACCIDENT_NULL_STATE = 6;</code>
     */
    public static final int TRAFFIC_ACCIDENT_NULL_STATE_VALUE = 6;
    /**
     * <code>TRAFFIC_ACCIDENT_ACTIVE_STATE = 7;</code>
     */
    public static final int TRAFFIC_ACCIDENT_ACTIVE_STATE_VALUE = 7;
    /**
     * <code>TRAFFIC_ACCIDENT_SUSPEND_STATE = 8;</code>
     */
    public static final int TRAFFIC_ACCIDENT_SUSPEND_STATE_VALUE = 8;
    /**
     * <code>EVENT_LANE_TRAFFIC_JAM = 9;</code>
     */
    public static final int EVENT_LANE_TRAFFIC_JAM_VALUE = 9;
    /**
     * <code>EVENT_NOCONESL_LANE_CLOSED = 10;</code>
     */
    public static final int EVENT_NOCONESL_LANE_CLOSED_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ABNORMAL_PARKING_STATE_E valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ABNORMAL_PARKING_STATE_E forNumber(int value) {
      switch (value) {
        case 0: return ABNORMAL_PARKING_NULL_STATE;
        case 1: return ABNORMAL_PARKING_INIT_STATE;
        case 2: return ABNORMAL_PARKING_WATCH_STATE;
        case 3: return ABNORMAL_PARKING_ACTIVE_STATE;
        case 4: return ABNORMAL_PARKING_SUSPEND_STATE;
        case 5: return ABNORMAL_PARKING_WATCH_SUSPEND_STATE;
        case 6: return TRAFFIC_ACCIDENT_NULL_STATE;
        case 7: return TRAFFIC_ACCIDENT_ACTIVE_STATE;
        case 8: return TRAFFIC_ACCIDENT_SUSPEND_STATE;
        case 9: return EVENT_LANE_TRAFFIC_JAM;
        case 10: return EVENT_NOCONESL_LANE_CLOSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ABNORMAL_PARKING_STATE_E>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ABNORMAL_PARKING_STATE_E> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ABNORMAL_PARKING_STATE_E>() {
            public ABNORMAL_PARKING_STATE_E findValueByNumber(int number) {
              return ABNORMAL_PARKING_STATE_E.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.getDescriptor().getEnumTypes().get(0);
    }

    private static final ABNORMAL_PARKING_STATE_E[] VALUES = values();

    public static ABNORMAL_PARKING_STATE_E valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ABNORMAL_PARKING_STATE_E(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:event_debug.ABNORMAL_PARKING_STATE_E)
  }

  /**
   * Protobuf enum {@code event_debug.EVENT_CHANGE_STATE_E}
   */
  public enum EVENT_CHANGE_STATE_E
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *障碍物在范围内
     * </pre>
     *
     * <code>OBS_WITHIN_RANGE = 1;</code>
     */
    OBS_WITHIN_RANGE(1),
    /**
     * <pre>
     *障碍物坐标不再范围
     * </pre>
     *
     * <code>OBS_OUT_OF_RANGE = 2;</code>
     */
    OBS_OUT_OF_RANGE(2),
    /**
     * <pre>
     *障碍物数据异常消失
     * </pre>
     *
     * <code>OBS_DATA_DISAPPEAR = 3;</code>
     */
    OBS_DATA_DISAPPEAR(3),
    /**
     * <pre>
     *异常停车转为交通事故
     * </pre>
     *
     * <code>OBS_TRAFFIC_ACCIDENT = 4;</code>
     */
    OBS_TRAFFIC_ACCIDENT(4),
    ;

    /**
     * <pre>
     *障碍物在范围内
     * </pre>
     *
     * <code>OBS_WITHIN_RANGE = 1;</code>
     */
    public static final int OBS_WITHIN_RANGE_VALUE = 1;
    /**
     * <pre>
     *障碍物坐标不再范围
     * </pre>
     *
     * <code>OBS_OUT_OF_RANGE = 2;</code>
     */
    public static final int OBS_OUT_OF_RANGE_VALUE = 2;
    /**
     * <pre>
     *障碍物数据异常消失
     * </pre>
     *
     * <code>OBS_DATA_DISAPPEAR = 3;</code>
     */
    public static final int OBS_DATA_DISAPPEAR_VALUE = 3;
    /**
     * <pre>
     *异常停车转为交通事故
     * </pre>
     *
     * <code>OBS_TRAFFIC_ACCIDENT = 4;</code>
     */
    public static final int OBS_TRAFFIC_ACCIDENT_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EVENT_CHANGE_STATE_E valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EVENT_CHANGE_STATE_E forNumber(int value) {
      switch (value) {
        case 1: return OBS_WITHIN_RANGE;
        case 2: return OBS_OUT_OF_RANGE;
        case 3: return OBS_DATA_DISAPPEAR;
        case 4: return OBS_TRAFFIC_ACCIDENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EVENT_CHANGE_STATE_E>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EVENT_CHANGE_STATE_E> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EVENT_CHANGE_STATE_E>() {
            public EVENT_CHANGE_STATE_E findValueByNumber(int number) {
              return EVENT_CHANGE_STATE_E.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.getDescriptor().getEnumTypes().get(1);
    }

    private static final EVENT_CHANGE_STATE_E[] VALUES = values();

    public static EVENT_CHANGE_STATE_E valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EVENT_CHANGE_STATE_E(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:event_debug.EVENT_CHANGE_STATE_E)
  }

  /**
   * Protobuf enum {@code event_debug.OBS_ABNORMAL_PARKING_STATE_E}
   */
  public enum OBS_ABNORMAL_PARKING_STATE_E
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OBS_ABNORMAL_PARKING_NULL_STATE = 0;</code>
     */
    OBS_ABNORMAL_PARKING_NULL_STATE(0),
    /**
     * <code>OBS_ABNORMAL_PARKING_INIT_STATE = 1;</code>
     */
    OBS_ABNORMAL_PARKING_INIT_STATE(1),
    /**
     * <code>OBS_ABNORMAL_PARKING_WATCH_STATE = 2;</code>
     */
    OBS_ABNORMAL_PARKING_WATCH_STATE(2),
    /**
     * <code>OBS_ABNORMAL_PARKING_ACCIDENT_STATE = 3;</code>
     */
    OBS_ABNORMAL_PARKING_ACCIDENT_STATE(3),
    /**
     * <pre>
     *障碍物数据断帧
     * </pre>
     *
     * <code>OBS_ABNORMAL_PARKING_DISAPPEAR_STATE = 99;</code>
     */
    OBS_ABNORMAL_PARKING_DISAPPEAR_STATE(99),
    ;

    /**
     * <code>OBS_ABNORMAL_PARKING_NULL_STATE = 0;</code>
     */
    public static final int OBS_ABNORMAL_PARKING_NULL_STATE_VALUE = 0;
    /**
     * <code>OBS_ABNORMAL_PARKING_INIT_STATE = 1;</code>
     */
    public static final int OBS_ABNORMAL_PARKING_INIT_STATE_VALUE = 1;
    /**
     * <code>OBS_ABNORMAL_PARKING_WATCH_STATE = 2;</code>
     */
    public static final int OBS_ABNORMAL_PARKING_WATCH_STATE_VALUE = 2;
    /**
     * <code>OBS_ABNORMAL_PARKING_ACCIDENT_STATE = 3;</code>
     */
    public static final int OBS_ABNORMAL_PARKING_ACCIDENT_STATE_VALUE = 3;
    /**
     * <pre>
     *障碍物数据断帧
     * </pre>
     *
     * <code>OBS_ABNORMAL_PARKING_DISAPPEAR_STATE = 99;</code>
     */
    public static final int OBS_ABNORMAL_PARKING_DISAPPEAR_STATE_VALUE = 99;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OBS_ABNORMAL_PARKING_STATE_E valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OBS_ABNORMAL_PARKING_STATE_E forNumber(int value) {
      switch (value) {
        case 0: return OBS_ABNORMAL_PARKING_NULL_STATE;
        case 1: return OBS_ABNORMAL_PARKING_INIT_STATE;
        case 2: return OBS_ABNORMAL_PARKING_WATCH_STATE;
        case 3: return OBS_ABNORMAL_PARKING_ACCIDENT_STATE;
        case 99: return OBS_ABNORMAL_PARKING_DISAPPEAR_STATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OBS_ABNORMAL_PARKING_STATE_E>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OBS_ABNORMAL_PARKING_STATE_E> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OBS_ABNORMAL_PARKING_STATE_E>() {
            public OBS_ABNORMAL_PARKING_STATE_E findValueByNumber(int number) {
              return OBS_ABNORMAL_PARKING_STATE_E.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.getDescriptor().getEnumTypes().get(2);
    }

    private static final OBS_ABNORMAL_PARKING_STATE_E[] VALUES = values();

    public static OBS_ABNORMAL_PARKING_STATE_E valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OBS_ABNORMAL_PARKING_STATE_E(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:event_debug.OBS_ABNORMAL_PARKING_STATE_E)
  }

  public interface DRC_EVENT_DEBUG_ABNORMAL_PARKINGOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    boolean hasFrame();
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    int getFrame();

    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    boolean hasSubframe();
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    int getSubframe();

    /**
     * <pre>
     *rctpid ulRCTPMoudleID
     * </pre>
     *
     * <code>optional uint32 rctpId = 3;</code>
     * @return Whether the rctpId field is set.
     */
    boolean hasRctpId();
    /**
     * <pre>
     *rctpid ulRCTPMoudleID
     * </pre>
     *
     * <code>optional uint32 rctpId = 3;</code>
     * @return The rctpId.
     */
    int getRctpId();

    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 4;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 4;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 6;</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 6;</code>
     * @return The state.
     */
    int getState();

    /**
     * <pre>
     *事件改变状态 ulCState enum
     * </pre>
     *
     * <code>optional uint32 cstate = 7;</code>
     * @return Whether the cstate field is set.
     */
    boolean hasCstate();
    /**
     * <pre>
     *事件改变状态 ulCState enum
     * </pre>
     *
     * <code>optional uint32 cstate = 7;</code>
     * @return The cstate.
     */
    int getCstate();

    /**
     * <pre>
     *障碍物状态 obsState
     * </pre>
     *
     * <code>optional uint32 obsState = 8;</code>
     * @return Whether the obsState field is set.
     */
    boolean hasObsState();
    /**
     * <pre>
     *障碍物状态 obsState
     * </pre>
     *
     * <code>optional uint32 obsState = 8;</code>
     * @return The obsState.
     */
    int getObsState();

    /**
     * <pre>
     *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
     * </pre>
     *
     * <code>optional double diffDistance = 9;</code>
     * @return Whether the diffDistance field is set.
     */
    boolean hasDiffDistance();
    /**
     * <pre>
     *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
     * </pre>
     *
     * <code>optional double diffDistance = 9;</code>
     * @return The diffDistance.
     */
    double getDiffDistance();

    /**
     * <pre>
     *最大等待时长 ulMaxWaitTime
     * </pre>
     *
     * <code>optional uint32 ulMaxWaitTime = 10;</code>
     * @return Whether the ulMaxWaitTime field is set.
     */
    boolean hasUlMaxWaitTime();
    /**
     * <pre>
     *最大等待时长 ulMaxWaitTime
     * </pre>
     *
     * <code>optional uint32 ulMaxWaitTime = 10;</code>
     * @return The ulMaxWaitTime.
     */
    int getUlMaxWaitTime();

    /**
     * <pre>
     *中心点坐标 CenterPostion.dbx
     * </pre>
     *
     * <code>optional double CenterPostion_x = 11;</code>
     * @return Whether the centerPostionX field is set.
     */
    boolean hasCenterPostionX();
    /**
     * <pre>
     *中心点坐标 CenterPostion.dbx
     * </pre>
     *
     * <code>optional double CenterPostion_x = 11;</code>
     * @return The centerPostionX.
     */
    double getCenterPostionX();

    /**
     * <pre>
     *中心点坐标 CenterPostion.dby
     * </pre>
     *
     * <code>optional double CenterPostion_y = 12;</code>
     * @return Whether the centerPostionY field is set.
     */
    boolean hasCenterPostionY();
    /**
     * <pre>
     *中心点坐标 CenterPostion.dby
     * </pre>
     *
     * <code>optional double CenterPostion_y = 12;</code>
     * @return The centerPostionY.
     */
    double getCenterPostionY();

    /**
     * <pre>
     *方向角 DirecRad
     * </pre>
     *
     * <code>optional double DirecRad = 13;</code>
     * @return Whether the direcRad field is set.
     */
    boolean hasDirecRad();
    /**
     * <pre>
     *方向角 DirecRad
     * </pre>
     *
     * <code>optional double DirecRad = 13;</code>
     * @return The direcRad.
     */
    double getDirecRad();

    /**
     * <pre>
     *椭圆长轴数值
     * </pre>
     *
     * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
     * @return Whether the largeMajorAxisRadius field is set.
     */
    boolean hasLargeMajorAxisRadius();
    /**
     * <pre>
     *椭圆长轴数值
     * </pre>
     *
     * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
     * @return The largeMajorAxisRadius.
     */
    int getLargeMajorAxisRadius();

    /**
     * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
     * @return Whether the largeMinorAxisRadius field is set.
     */
    boolean hasLargeMinorAxisRadius();
    /**
     * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
     * @return The largeMinorAxisRadius.
     */
    int getLargeMinorAxisRadius();

    /**
     * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
     * @return Whether the smallMajorAxisRadius field is set.
     */
    boolean hasSmallMajorAxisRadius();
    /**
     * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
     * @return The smallMajorAxisRadius.
     */
    int getSmallMajorAxisRadius();

    /**
     * <pre>
     *椭圆短轴数值
     * </pre>
     *
     * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
     * @return Whether the smallMinorAxisRadius field is set.
     */
    boolean hasSmallMinorAxisRadius();
    /**
     * <pre>
     *椭圆短轴数值
     * </pre>
     *
     * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
     * @return The smallMinorAxisRadius.
     */
    int getSmallMinorAxisRadius();

    /**
     * <pre>
     *uuid stLastestInfo.ulUUID
     * </pre>
     *
     * <code>optional uint64 newOBSUUID = 18;</code>
     * @return Whether the newOBSUUID field is set.
     */
    boolean hasNewOBSUUID();
    /**
     * <pre>
     *uuid stLastestInfo.ulUUID
     * </pre>
     *
     * <code>optional uint64 newOBSUUID = 18;</code>
     * @return The newOBSUUID.
     */
    long getNewOBSUUID();

    /**
     * <pre>
     *当前障碍物帧数 stLastestInfo.ulFrame.first
     * </pre>
     *
     * <code>optional uint32 newOBSframe = 19;</code>
     * @return Whether the newOBSframe field is set.
     */
    boolean hasNewOBSframe();
    /**
     * <pre>
     *当前障碍物帧数 stLastestInfo.ulFrame.first
     * </pre>
     *
     * <code>optional uint32 newOBSframe = 19;</code>
     * @return The newOBSframe.
     */
    int getNewOBSframe();

    /**
     * <pre>
     *当前障碍物子帧数 stLastestInfo.ulFrame.second
     * </pre>
     *
     * <code>optional uint32 newOBSsubframe = 20;</code>
     * @return Whether the newOBSsubframe field is set.
     */
    boolean hasNewOBSsubframe();
    /**
     * <pre>
     *当前障碍物子帧数 stLastestInfo.ulFrame.second
     * </pre>
     *
     * <code>optional uint32 newOBSsubframe = 20;</code>
     * @return The newOBSsubframe.
     */
    int getNewOBSsubframe();

    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double newOBSx = 21;</code>
     * @return Whether the newOBSx field is set.
     */
    boolean hasNewOBSx();
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double newOBSx = 21;</code>
     * @return The newOBSx.
     */
    double getNewOBSx();

    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double newOBSy = 22;</code>
     * @return Whether the newOBSy field is set.
     */
    boolean hasNewOBSy();
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double newOBSy = 22;</code>
     * @return The newOBSy.
     */
    double getNewOBSy();

    /**
     * <pre>
     *当前障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 newOBSdrsu = 23;</code>
     * @return Whether the newOBSdrsu field is set.
     */
    boolean hasNewOBSdrsu();
    /**
     * <pre>
     *当前障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 newOBSdrsu = 23;</code>
     * @return The newOBSdrsu.
     */
    int getNewOBSdrsu();

    /**
     * <pre>
     *当前障碍物车道
     * </pre>
     *
     * <code>optional uint32 newOBSlane = 24;</code>
     * @return Whether the newOBSlane field is set.
     */
    boolean hasNewOBSlane();
    /**
     * <pre>
     *当前障碍物车道
     * </pre>
     *
     * <code>optional uint32 newOBSlane = 24;</code>
     * @return The newOBSlane.
     */
    int getNewOBSlane();

    /**
     * <pre>
     *当前障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 newOBSHDlane = 25;</code>
     * @return Whether the newOBSHDlane field is set.
     */
    boolean hasNewOBSHDlane();
    /**
     * <pre>
     *当前障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 newOBSHDlane = 25;</code>
     * @return The newOBSHDlane.
     */
    int getNewOBSHDlane();

    /**
     * <pre>
     *当前障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 newOBSHDconnection = 26;</code>
     * @return Whether the newOBSHDconnection field is set.
     */
    boolean hasNewOBSHDconnection();
    /**
     * <pre>
     *当前障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 newOBSHDconnection = 26;</code>
     * @return The newOBSHDconnection.
     */
    int getNewOBSHDconnection();

    /**
     * <code>optional uint64 firstOBSUUID = 27;</code>
     * @return Whether the firstOBSUUID field is set.
     */
    boolean hasFirstOBSUUID();
    /**
     * <code>optional uint64 firstOBSUUID = 27;</code>
     * @return The firstOBSUUID.
     */
    long getFirstOBSUUID();

    /**
     * <pre>
     *初始障碍物帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSframe = 28;</code>
     * @return Whether the firstOBSframe field is set.
     */
    boolean hasFirstOBSframe();
    /**
     * <pre>
     *初始障碍物帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSframe = 28;</code>
     * @return The firstOBSframe.
     */
    int getFirstOBSframe();

    /**
     * <pre>
     *初始障碍物子帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSsubframe = 29;</code>
     * @return Whether the firstOBSsubframe field is set.
     */
    boolean hasFirstOBSsubframe();
    /**
     * <pre>
     *初始障碍物子帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSsubframe = 29;</code>
     * @return The firstOBSsubframe.
     */
    int getFirstOBSsubframe();

    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSx = 30;</code>
     * @return Whether the firstOBSx field is set.
     */
    boolean hasFirstOBSx();
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSx = 30;</code>
     * @return The firstOBSx.
     */
    double getFirstOBSx();

    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSy = 31;</code>
     * @return Whether the firstOBSy field is set.
     */
    boolean hasFirstOBSy();
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSy = 31;</code>
     * @return The firstOBSy.
     */
    double getFirstOBSy();

    /**
     * <pre>
     *初始障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 firstOBSdrsu = 32;</code>
     * @return Whether the firstOBSdrsu field is set.
     */
    boolean hasFirstOBSdrsu();
    /**
     * <pre>
     *初始障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 firstOBSdrsu = 32;</code>
     * @return The firstOBSdrsu.
     */
    int getFirstOBSdrsu();

    /**
     * <pre>
     *初始障碍物车道
     * </pre>
     *
     * <code>optional uint32 firstOBSlane = 33;</code>
     * @return Whether the firstOBSlane field is set.
     */
    boolean hasFirstOBSlane();
    /**
     * <pre>
     *初始障碍物车道
     * </pre>
     *
     * <code>optional uint32 firstOBSlane = 33;</code>
     * @return The firstOBSlane.
     */
    int getFirstOBSlane();

    /**
     * <pre>
     *初始障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDlane = 34;</code>
     * @return Whether the firstOBSHDlane field is set.
     */
    boolean hasFirstOBSHDlane();
    /**
     * <pre>
     *初始障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDlane = 34;</code>
     * @return The firstOBSHDlane.
     */
    int getFirstOBSHDlane();

    /**
     * <pre>
     *初始障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDconnection = 35;</code>
     * @return Whether the firstOBSHDconnection field is set.
     */
    boolean hasFirstOBSHDconnection();
    /**
     * <pre>
     *初始障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDconnection = 35;</code>
     * @return The firstOBSHDconnection.
     */
    int getFirstOBSHDconnection();

    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    boolean hasStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return The strDetectorInfo.
     */
    java.lang.String getStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return The bytes for strDetectorInfo.
     */
    com.google.protobuf.ByteString
        getStrDetectorInfoBytes();

    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return Whether the strExtParam field is set.
     */
    boolean hasStrExtParam();
    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return The strExtParam.
     */
    java.lang.String getStrExtParam();
    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return The bytes for strExtParam.
     */
    com.google.protobuf.ByteString
        getStrExtParamBytes();

    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 38;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 38;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();

    /**
     * <pre>
     * 0:普通车辆 ; 1: 警车; 2:工程车
     * </pre>
     *
     * <code>optional int32 vehicleType = 39;</code>
     * @return Whether the vehicleType field is set.
     */
    boolean hasVehicleType();
    /**
     * <pre>
     * 0:普通车辆 ; 1: 警车; 2:工程车
     * </pre>
     *
     * <code>optional int32 vehicleType = 39;</code>
     * @return The vehicleType.
     */
    int getVehicleType();

    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return Whether the strPlateNo field is set.
     */
    boolean hasStrPlateNo();
    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return The strPlateNo.
     */
    java.lang.String getStrPlateNo();
    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return The bytes for strPlateNo.
     */
    com.google.protobuf.ByteString
        getStrPlateNoBytes();
  }
  /**
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING}
   */
  public static final class DRC_EVENT_DEBUG_ABNORMAL_PARKING extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)
      DRC_EVENT_DEBUG_ABNORMAL_PARKINGOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_ABNORMAL_PARKING.newBuilder() to construct.
    private DRC_EVENT_DEBUG_ABNORMAL_PARKING(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_ABNORMAL_PARKING() {
      eventype_ = 1;
      strDetectorInfo_ = "";
      strExtParam_ = "";
      strPlateNo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_ABNORMAL_PARKING();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_ABNORMAL_PARKING(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              frame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subframe_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rctpId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eventId_ = input.readUInt64();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                eventype_ = rawValue;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              state_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              cstate_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              obsState_ = input.readUInt32();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              diffDistance_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              ulMaxWaitTime_ = input.readUInt32();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              centerPostionX_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              centerPostionY_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              direcRad_ = input.readDouble();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              largeMajorAxisRadius_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              largeMinorAxisRadius_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              smallMajorAxisRadius_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              smallMinorAxisRadius_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              newOBSUUID_ = input.readUInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              newOBSframe_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              newOBSsubframe_ = input.readUInt32();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              newOBSx_ = input.readDouble();
              break;
            }
            case 177: {
              bitField0_ |= 0x00200000;
              newOBSy_ = input.readDouble();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              newOBSdrsu_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              newOBSlane_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              newOBSHDlane_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              newOBSHDconnection_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              firstOBSUUID_ = input.readUInt64();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              firstOBSframe_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              firstOBSsubframe_ = input.readUInt32();
              break;
            }
            case 241: {
              bitField0_ |= 0x20000000;
              firstOBSx_ = input.readDouble();
              break;
            }
            case 249: {
              bitField0_ |= 0x40000000;
              firstOBSy_ = input.readDouble();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              firstOBSdrsu_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              firstOBSlane_ = input.readUInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              firstOBSHDlane_ = input.readUInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              firstOBSHDconnection_ = input.readUInt32();
              break;
            }
            case 290: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000008;
              strDetectorInfo_ = bs;
              break;
            }
            case 298: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000010;
              strExtParam_ = bs;
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              ulDrcId_ = input.readUInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              vehicleType_ = input.readInt32();
              break;
            }
            case 322: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000080;
              strPlateNo_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int FRAME_FIELD_NUMBER = 1;
    private int frame_;
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    @java.lang.Override
    public boolean hasFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    @java.lang.Override
    public int getFrame() {
      return frame_;
    }

    public static final int SUBFRAME_FIELD_NUMBER = 2;
    private int subframe_;
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    @java.lang.Override
    public boolean hasSubframe() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    @java.lang.Override
    public int getSubframe() {
      return subframe_;
    }

    public static final int RCTPID_FIELD_NUMBER = 3;
    private int rctpId_;
    /**
     * <pre>
     *rctpid ulRCTPMoudleID
     * </pre>
     *
     * <code>optional uint32 rctpId = 3;</code>
     * @return Whether the rctpId field is set.
     */
    @java.lang.Override
    public boolean hasRctpId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *rctpid ulRCTPMoudleID
     * </pre>
     *
     * <code>optional uint32 rctpId = 3;</code>
     * @return The rctpId.
     */
    @java.lang.Override
    public int getRctpId() {
      return rctpId_;
    }

    public static final int EVENTID_FIELD_NUMBER = 4;
    private long eventId_;
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 4;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 4;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 5;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int STATE_FIELD_NUMBER = 6;
    private int state_;
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 6;</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override
    public boolean hasState() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 6;</code>
     * @return The state.
     */
    @java.lang.Override
    public int getState() {
      return state_;
    }

    public static final int CSTATE_FIELD_NUMBER = 7;
    private int cstate_;
    /**
     * <pre>
     *事件改变状态 ulCState enum
     * </pre>
     *
     * <code>optional uint32 cstate = 7;</code>
     * @return Whether the cstate field is set.
     */
    @java.lang.Override
    public boolean hasCstate() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *事件改变状态 ulCState enum
     * </pre>
     *
     * <code>optional uint32 cstate = 7;</code>
     * @return The cstate.
     */
    @java.lang.Override
    public int getCstate() {
      return cstate_;
    }

    public static final int OBSSTATE_FIELD_NUMBER = 8;
    private int obsState_;
    /**
     * <pre>
     *障碍物状态 obsState
     * </pre>
     *
     * <code>optional uint32 obsState = 8;</code>
     * @return Whether the obsState field is set.
     */
    @java.lang.Override
    public boolean hasObsState() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *障碍物状态 obsState
     * </pre>
     *
     * <code>optional uint32 obsState = 8;</code>
     * @return The obsState.
     */
    @java.lang.Override
    public int getObsState() {
      return obsState_;
    }

    public static final int DIFFDISTANCE_FIELD_NUMBER = 9;
    private double diffDistance_;
    /**
     * <pre>
     *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
     * </pre>
     *
     * <code>optional double diffDistance = 9;</code>
     * @return Whether the diffDistance field is set.
     */
    @java.lang.Override
    public boolean hasDiffDistance() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
     * </pre>
     *
     * <code>optional double diffDistance = 9;</code>
     * @return The diffDistance.
     */
    @java.lang.Override
    public double getDiffDistance() {
      return diffDistance_;
    }

    public static final int ULMAXWAITTIME_FIELD_NUMBER = 10;
    private int ulMaxWaitTime_;
    /**
     * <pre>
     *最大等待时长 ulMaxWaitTime
     * </pre>
     *
     * <code>optional uint32 ulMaxWaitTime = 10;</code>
     * @return Whether the ulMaxWaitTime field is set.
     */
    @java.lang.Override
    public boolean hasUlMaxWaitTime() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *最大等待时长 ulMaxWaitTime
     * </pre>
     *
     * <code>optional uint32 ulMaxWaitTime = 10;</code>
     * @return The ulMaxWaitTime.
     */
    @java.lang.Override
    public int getUlMaxWaitTime() {
      return ulMaxWaitTime_;
    }

    public static final int CENTERPOSTION_X_FIELD_NUMBER = 11;
    private double centerPostionX_;
    /**
     * <pre>
     *中心点坐标 CenterPostion.dbx
     * </pre>
     *
     * <code>optional double CenterPostion_x = 11;</code>
     * @return Whether the centerPostionX field is set.
     */
    @java.lang.Override
    public boolean hasCenterPostionX() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *中心点坐标 CenterPostion.dbx
     * </pre>
     *
     * <code>optional double CenterPostion_x = 11;</code>
     * @return The centerPostionX.
     */
    @java.lang.Override
    public double getCenterPostionX() {
      return centerPostionX_;
    }

    public static final int CENTERPOSTION_Y_FIELD_NUMBER = 12;
    private double centerPostionY_;
    /**
     * <pre>
     *中心点坐标 CenterPostion.dby
     * </pre>
     *
     * <code>optional double CenterPostion_y = 12;</code>
     * @return Whether the centerPostionY field is set.
     */
    @java.lang.Override
    public boolean hasCenterPostionY() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *中心点坐标 CenterPostion.dby
     * </pre>
     *
     * <code>optional double CenterPostion_y = 12;</code>
     * @return The centerPostionY.
     */
    @java.lang.Override
    public double getCenterPostionY() {
      return centerPostionY_;
    }

    public static final int DIRECRAD_FIELD_NUMBER = 13;
    private double direcRad_;
    /**
     * <pre>
     *方向角 DirecRad
     * </pre>
     *
     * <code>optional double DirecRad = 13;</code>
     * @return Whether the direcRad field is set.
     */
    @java.lang.Override
    public boolean hasDirecRad() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     *方向角 DirecRad
     * </pre>
     *
     * <code>optional double DirecRad = 13;</code>
     * @return The direcRad.
     */
    @java.lang.Override
    public double getDirecRad() {
      return direcRad_;
    }

    public static final int LARGEMAJORAXISRADIUS_FIELD_NUMBER = 14;
    private int largeMajorAxisRadius_;
    /**
     * <pre>
     *椭圆长轴数值
     * </pre>
     *
     * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
     * @return Whether the largeMajorAxisRadius field is set.
     */
    @java.lang.Override
    public boolean hasLargeMajorAxisRadius() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     *椭圆长轴数值
     * </pre>
     *
     * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
     * @return The largeMajorAxisRadius.
     */
    @java.lang.Override
    public int getLargeMajorAxisRadius() {
      return largeMajorAxisRadius_;
    }

    public static final int LARGEMINORAXISRADIUS_FIELD_NUMBER = 15;
    private int largeMinorAxisRadius_;
    /**
     * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
     * @return Whether the largeMinorAxisRadius field is set.
     */
    @java.lang.Override
    public boolean hasLargeMinorAxisRadius() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
     * @return The largeMinorAxisRadius.
     */
    @java.lang.Override
    public int getLargeMinorAxisRadius() {
      return largeMinorAxisRadius_;
    }

    public static final int SMALLMAJORAXISRADIUS_FIELD_NUMBER = 16;
    private int smallMajorAxisRadius_;
    /**
     * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
     * @return Whether the smallMajorAxisRadius field is set.
     */
    @java.lang.Override
    public boolean hasSmallMajorAxisRadius() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
     * @return The smallMajorAxisRadius.
     */
    @java.lang.Override
    public int getSmallMajorAxisRadius() {
      return smallMajorAxisRadius_;
    }

    public static final int SMALLMINORAXISRADIUS_FIELD_NUMBER = 17;
    private int smallMinorAxisRadius_;
    /**
     * <pre>
     *椭圆短轴数值
     * </pre>
     *
     * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
     * @return Whether the smallMinorAxisRadius field is set.
     */
    @java.lang.Override
    public boolean hasSmallMinorAxisRadius() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     *椭圆短轴数值
     * </pre>
     *
     * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
     * @return The smallMinorAxisRadius.
     */
    @java.lang.Override
    public int getSmallMinorAxisRadius() {
      return smallMinorAxisRadius_;
    }

    public static final int NEWOBSUUID_FIELD_NUMBER = 18;
    private long newOBSUUID_;
    /**
     * <pre>
     *uuid stLastestInfo.ulUUID
     * </pre>
     *
     * <code>optional uint64 newOBSUUID = 18;</code>
     * @return Whether the newOBSUUID field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSUUID() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     *uuid stLastestInfo.ulUUID
     * </pre>
     *
     * <code>optional uint64 newOBSUUID = 18;</code>
     * @return The newOBSUUID.
     */
    @java.lang.Override
    public long getNewOBSUUID() {
      return newOBSUUID_;
    }

    public static final int NEWOBSFRAME_FIELD_NUMBER = 19;
    private int newOBSframe_;
    /**
     * <pre>
     *当前障碍物帧数 stLastestInfo.ulFrame.first
     * </pre>
     *
     * <code>optional uint32 newOBSframe = 19;</code>
     * @return Whether the newOBSframe field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSframe() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     *当前障碍物帧数 stLastestInfo.ulFrame.first
     * </pre>
     *
     * <code>optional uint32 newOBSframe = 19;</code>
     * @return The newOBSframe.
     */
    @java.lang.Override
    public int getNewOBSframe() {
      return newOBSframe_;
    }

    public static final int NEWOBSSUBFRAME_FIELD_NUMBER = 20;
    private int newOBSsubframe_;
    /**
     * <pre>
     *当前障碍物子帧数 stLastestInfo.ulFrame.second
     * </pre>
     *
     * <code>optional uint32 newOBSsubframe = 20;</code>
     * @return Whether the newOBSsubframe field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSsubframe() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     *当前障碍物子帧数 stLastestInfo.ulFrame.second
     * </pre>
     *
     * <code>optional uint32 newOBSsubframe = 20;</code>
     * @return The newOBSsubframe.
     */
    @java.lang.Override
    public int getNewOBSsubframe() {
      return newOBSsubframe_;
    }

    public static final int NEWOBSX_FIELD_NUMBER = 21;
    private double newOBSx_;
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double newOBSx = 21;</code>
     * @return Whether the newOBSx field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSx() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double newOBSx = 21;</code>
     * @return The newOBSx.
     */
    @java.lang.Override
    public double getNewOBSx() {
      return newOBSx_;
    }

    public static final int NEWOBSY_FIELD_NUMBER = 22;
    private double newOBSy_;
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double newOBSy = 22;</code>
     * @return Whether the newOBSy field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSy() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double newOBSy = 22;</code>
     * @return The newOBSy.
     */
    @java.lang.Override
    public double getNewOBSy() {
      return newOBSy_;
    }

    public static final int NEWOBSDRSU_FIELD_NUMBER = 23;
    private int newOBSdrsu_;
    /**
     * <pre>
     *当前障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 newOBSdrsu = 23;</code>
     * @return Whether the newOBSdrsu field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSdrsu() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     *当前障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 newOBSdrsu = 23;</code>
     * @return The newOBSdrsu.
     */
    @java.lang.Override
    public int getNewOBSdrsu() {
      return newOBSdrsu_;
    }

    public static final int NEWOBSLANE_FIELD_NUMBER = 24;
    private int newOBSlane_;
    /**
     * <pre>
     *当前障碍物车道
     * </pre>
     *
     * <code>optional uint32 newOBSlane = 24;</code>
     * @return Whether the newOBSlane field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSlane() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <pre>
     *当前障碍物车道
     * </pre>
     *
     * <code>optional uint32 newOBSlane = 24;</code>
     * @return The newOBSlane.
     */
    @java.lang.Override
    public int getNewOBSlane() {
      return newOBSlane_;
    }

    public static final int NEWOBSHDLANE_FIELD_NUMBER = 25;
    private int newOBSHDlane_;
    /**
     * <pre>
     *当前障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 newOBSHDlane = 25;</code>
     * @return Whether the newOBSHDlane field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSHDlane() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <pre>
     *当前障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 newOBSHDlane = 25;</code>
     * @return The newOBSHDlane.
     */
    @java.lang.Override
    public int getNewOBSHDlane() {
      return newOBSHDlane_;
    }

    public static final int NEWOBSHDCONNECTION_FIELD_NUMBER = 26;
    private int newOBSHDconnection_;
    /**
     * <pre>
     *当前障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 newOBSHDconnection = 26;</code>
     * @return Whether the newOBSHDconnection field is set.
     */
    @java.lang.Override
    public boolean hasNewOBSHDconnection() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     *当前障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 newOBSHDconnection = 26;</code>
     * @return The newOBSHDconnection.
     */
    @java.lang.Override
    public int getNewOBSHDconnection() {
      return newOBSHDconnection_;
    }

    public static final int FIRSTOBSUUID_FIELD_NUMBER = 27;
    private long firstOBSUUID_;
    /**
     * <code>optional uint64 firstOBSUUID = 27;</code>
     * @return Whether the firstOBSUUID field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSUUID() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>optional uint64 firstOBSUUID = 27;</code>
     * @return The firstOBSUUID.
     */
    @java.lang.Override
    public long getFirstOBSUUID() {
      return firstOBSUUID_;
    }

    public static final int FIRSTOBSFRAME_FIELD_NUMBER = 28;
    private int firstOBSframe_;
    /**
     * <pre>
     *初始障碍物帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSframe = 28;</code>
     * @return Whether the firstOBSframe field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSframe() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     *初始障碍物帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSframe = 28;</code>
     * @return The firstOBSframe.
     */
    @java.lang.Override
    public int getFirstOBSframe() {
      return firstOBSframe_;
    }

    public static final int FIRSTOBSSUBFRAME_FIELD_NUMBER = 29;
    private int firstOBSsubframe_;
    /**
     * <pre>
     *初始障碍物子帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSsubframe = 29;</code>
     * @return Whether the firstOBSsubframe field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSsubframe() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <pre>
     *初始障碍物子帧数
     * </pre>
     *
     * <code>optional uint32 firstOBSsubframe = 29;</code>
     * @return The firstOBSsubframe.
     */
    @java.lang.Override
    public int getFirstOBSsubframe() {
      return firstOBSsubframe_;
    }

    public static final int FIRSTOBSX_FIELD_NUMBER = 30;
    private double firstOBSx_;
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSx = 30;</code>
     * @return Whether the firstOBSx field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSx() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSx = 30;</code>
     * @return The firstOBSx.
     */
    @java.lang.Override
    public double getFirstOBSx() {
      return firstOBSx_;
    }

    public static final int FIRSTOBSY_FIELD_NUMBER = 31;
    private double firstOBSy_;
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSy = 31;</code>
     * @return Whether the firstOBSy field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSy() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <pre>
     *初始障碍物坐标
     * </pre>
     *
     * <code>optional double firstOBSy = 31;</code>
     * @return The firstOBSy.
     */
    @java.lang.Override
    public double getFirstOBSy() {
      return firstOBSy_;
    }

    public static final int FIRSTOBSDRSU_FIELD_NUMBER = 32;
    private int firstOBSdrsu_;
    /**
     * <pre>
     *初始障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 firstOBSdrsu = 32;</code>
     * @return Whether the firstOBSdrsu field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSdrsu() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     *初始障碍物检测drsu
     * </pre>
     *
     * <code>optional uint32 firstOBSdrsu = 32;</code>
     * @return The firstOBSdrsu.
     */
    @java.lang.Override
    public int getFirstOBSdrsu() {
      return firstOBSdrsu_;
    }

    public static final int FIRSTOBSLANE_FIELD_NUMBER = 33;
    private int firstOBSlane_;
    /**
     * <pre>
     *初始障碍物车道
     * </pre>
     *
     * <code>optional uint32 firstOBSlane = 33;</code>
     * @return Whether the firstOBSlane field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSlane() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *初始障碍物车道
     * </pre>
     *
     * <code>optional uint32 firstOBSlane = 33;</code>
     * @return The firstOBSlane.
     */
    @java.lang.Override
    public int getFirstOBSlane() {
      return firstOBSlane_;
    }

    public static final int FIRSTOBSHDLANE_FIELD_NUMBER = 34;
    private int firstOBSHDlane_;
    /**
     * <pre>
     *初始障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDlane = 34;</code>
     * @return Whether the firstOBSHDlane field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSHDlane() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *初始障碍物对应高精地图的laneid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDlane = 34;</code>
     * @return The firstOBSHDlane.
     */
    @java.lang.Override
    public int getFirstOBSHDlane() {
      return firstOBSHDlane_;
    }

    public static final int FIRSTOBSHDCONNECTION_FIELD_NUMBER = 35;
    private int firstOBSHDconnection_;
    /**
     * <pre>
     *初始障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDconnection = 35;</code>
     * @return Whether the firstOBSHDconnection field is set.
     */
    @java.lang.Override
    public boolean hasFirstOBSHDconnection() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *初始障碍物对应高精地图的connectionid
     * </pre>
     *
     * <code>optional uint32 firstOBSHDconnection = 35;</code>
     * @return The firstOBSHDconnection.
     */
    @java.lang.Override
    public int getFirstOBSHDconnection() {
      return firstOBSHDconnection_;
    }

    public static final int STRDETECTORINFO_FIELD_NUMBER = 36;
    private volatile java.lang.Object strDetectorInfo_;
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    @java.lang.Override
    public boolean hasStrDetectorInfo() {
      return ((bitField1_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return The strDetectorInfo.
     */
    @java.lang.Override
    public java.lang.String getStrDetectorInfo() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strDetectorInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 36;</code>
     * @return The bytes for strDetectorInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrDetectorInfoBytes() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strDetectorInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STREXTPARAM_FIELD_NUMBER = 37;
    private volatile java.lang.Object strExtParam_;
    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return Whether the strExtParam field is set.
     */
    @java.lang.Override
    public boolean hasStrExtParam() {
      return ((bitField1_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return The strExtParam.
     */
    @java.lang.Override
    public java.lang.String getStrExtParam() {
      java.lang.Object ref = strExtParam_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strExtParam_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *扩展参数，用于事件应急调试
     * </pre>
     *
     * <code>optional string strExtParam = 37;</code>
     * @return The bytes for strExtParam.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrExtParamBytes() {
      java.lang.Object ref = strExtParam_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strExtParam_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ULDRCID_FIELD_NUMBER = 38;
    private int ulDrcId_;
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 38;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField1_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 38;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    public static final int VEHICLETYPE_FIELD_NUMBER = 39;
    private int vehicleType_;
    /**
     * <pre>
     * 0:普通车辆 ; 1: 警车; 2:工程车
     * </pre>
     *
     * <code>optional int32 vehicleType = 39;</code>
     * @return Whether the vehicleType field is set.
     */
    @java.lang.Override
    public boolean hasVehicleType() {
      return ((bitField1_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * 0:普通车辆 ; 1: 警车; 2:工程车
     * </pre>
     *
     * <code>optional int32 vehicleType = 39;</code>
     * @return The vehicleType.
     */
    @java.lang.Override
    public int getVehicleType() {
      return vehicleType_;
    }

    public static final int STRPLATENO_FIELD_NUMBER = 40;
    private volatile java.lang.Object strPlateNo_;
    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return Whether the strPlateNo field is set.
     */
    @java.lang.Override
    public boolean hasStrPlateNo() {
      return ((bitField1_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return The strPlateNo.
     */
    @java.lang.Override
    public java.lang.String getStrPlateNo() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strPlateNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *当前障碍物车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 40;</code>
     * @return The bytes for strPlateNo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrPlateNoBytes() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strPlateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, rctpId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, eventId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeEnum(5, eventype_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, state_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, cstate_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, obsState_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, diffDistance_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(10, ulMaxWaitTime_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, centerPostionX_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeDouble(12, centerPostionY_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeDouble(13, direcRad_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(14, largeMajorAxisRadius_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(15, largeMinorAxisRadius_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeUInt32(16, smallMajorAxisRadius_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeUInt32(17, smallMinorAxisRadius_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt64(18, newOBSUUID_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeUInt32(19, newOBSframe_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeUInt32(20, newOBSsubframe_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeDouble(21, newOBSx_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeDouble(22, newOBSy_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeUInt32(23, newOBSdrsu_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeUInt32(24, newOBSlane_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeUInt32(25, newOBSHDlane_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeUInt32(26, newOBSHDconnection_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        output.writeUInt64(27, firstOBSUUID_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeUInt32(28, firstOBSframe_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeUInt32(29, firstOBSsubframe_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeDouble(30, firstOBSx_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        output.writeDouble(31, firstOBSy_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        output.writeUInt32(32, firstOBSdrsu_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        output.writeUInt32(33, firstOBSlane_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        output.writeUInt32(34, firstOBSHDlane_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        output.writeUInt32(35, firstOBSHDconnection_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 36, strDetectorInfo_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 37, strExtParam_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        output.writeUInt32(38, ulDrcId_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        output.writeInt32(39, vehicleType_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 40, strPlateNo_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rctpId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, eventId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, eventype_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, state_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, cstate_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, obsState_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, diffDistance_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, ulMaxWaitTime_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, centerPostionX_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, centerPostionY_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, direcRad_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, largeMajorAxisRadius_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, largeMinorAxisRadius_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, smallMajorAxisRadius_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, smallMinorAxisRadius_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(18, newOBSUUID_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, newOBSframe_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, newOBSsubframe_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, newOBSx_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, newOBSy_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, newOBSdrsu_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, newOBSlane_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, newOBSHDlane_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, newOBSHDconnection_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(27, firstOBSUUID_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, firstOBSframe_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, firstOBSsubframe_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(30, firstOBSx_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(31, firstOBSy_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, firstOBSdrsu_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, firstOBSlane_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, firstOBSHDlane_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, firstOBSHDconnection_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(36, strDetectorInfo_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(37, strExtParam_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, ulDrcId_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, vehicleType_);
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(40, strPlateNo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING) obj;

      if (hasFrame() != other.hasFrame()) return false;
      if (hasFrame()) {
        if (getFrame()
            != other.getFrame()) return false;
      }
      if (hasSubframe() != other.hasSubframe()) return false;
      if (hasSubframe()) {
        if (getSubframe()
            != other.getSubframe()) return false;
      }
      if (hasRctpId() != other.hasRctpId()) return false;
      if (hasRctpId()) {
        if (getRctpId()
            != other.getRctpId()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (getState()
            != other.getState()) return false;
      }
      if (hasCstate() != other.hasCstate()) return false;
      if (hasCstate()) {
        if (getCstate()
            != other.getCstate()) return false;
      }
      if (hasObsState() != other.hasObsState()) return false;
      if (hasObsState()) {
        if (getObsState()
            != other.getObsState()) return false;
      }
      if (hasDiffDistance() != other.hasDiffDistance()) return false;
      if (hasDiffDistance()) {
        if (java.lang.Double.doubleToLongBits(getDiffDistance())
            != java.lang.Double.doubleToLongBits(
                other.getDiffDistance())) return false;
      }
      if (hasUlMaxWaitTime() != other.hasUlMaxWaitTime()) return false;
      if (hasUlMaxWaitTime()) {
        if (getUlMaxWaitTime()
            != other.getUlMaxWaitTime()) return false;
      }
      if (hasCenterPostionX() != other.hasCenterPostionX()) return false;
      if (hasCenterPostionX()) {
        if (java.lang.Double.doubleToLongBits(getCenterPostionX())
            != java.lang.Double.doubleToLongBits(
                other.getCenterPostionX())) return false;
      }
      if (hasCenterPostionY() != other.hasCenterPostionY()) return false;
      if (hasCenterPostionY()) {
        if (java.lang.Double.doubleToLongBits(getCenterPostionY())
            != java.lang.Double.doubleToLongBits(
                other.getCenterPostionY())) return false;
      }
      if (hasDirecRad() != other.hasDirecRad()) return false;
      if (hasDirecRad()) {
        if (java.lang.Double.doubleToLongBits(getDirecRad())
            != java.lang.Double.doubleToLongBits(
                other.getDirecRad())) return false;
      }
      if (hasLargeMajorAxisRadius() != other.hasLargeMajorAxisRadius()) return false;
      if (hasLargeMajorAxisRadius()) {
        if (getLargeMajorAxisRadius()
            != other.getLargeMajorAxisRadius()) return false;
      }
      if (hasLargeMinorAxisRadius() != other.hasLargeMinorAxisRadius()) return false;
      if (hasLargeMinorAxisRadius()) {
        if (getLargeMinorAxisRadius()
            != other.getLargeMinorAxisRadius()) return false;
      }
      if (hasSmallMajorAxisRadius() != other.hasSmallMajorAxisRadius()) return false;
      if (hasSmallMajorAxisRadius()) {
        if (getSmallMajorAxisRadius()
            != other.getSmallMajorAxisRadius()) return false;
      }
      if (hasSmallMinorAxisRadius() != other.hasSmallMinorAxisRadius()) return false;
      if (hasSmallMinorAxisRadius()) {
        if (getSmallMinorAxisRadius()
            != other.getSmallMinorAxisRadius()) return false;
      }
      if (hasNewOBSUUID() != other.hasNewOBSUUID()) return false;
      if (hasNewOBSUUID()) {
        if (getNewOBSUUID()
            != other.getNewOBSUUID()) return false;
      }
      if (hasNewOBSframe() != other.hasNewOBSframe()) return false;
      if (hasNewOBSframe()) {
        if (getNewOBSframe()
            != other.getNewOBSframe()) return false;
      }
      if (hasNewOBSsubframe() != other.hasNewOBSsubframe()) return false;
      if (hasNewOBSsubframe()) {
        if (getNewOBSsubframe()
            != other.getNewOBSsubframe()) return false;
      }
      if (hasNewOBSx() != other.hasNewOBSx()) return false;
      if (hasNewOBSx()) {
        if (java.lang.Double.doubleToLongBits(getNewOBSx())
            != java.lang.Double.doubleToLongBits(
                other.getNewOBSx())) return false;
      }
      if (hasNewOBSy() != other.hasNewOBSy()) return false;
      if (hasNewOBSy()) {
        if (java.lang.Double.doubleToLongBits(getNewOBSy())
            != java.lang.Double.doubleToLongBits(
                other.getNewOBSy())) return false;
      }
      if (hasNewOBSdrsu() != other.hasNewOBSdrsu()) return false;
      if (hasNewOBSdrsu()) {
        if (getNewOBSdrsu()
            != other.getNewOBSdrsu()) return false;
      }
      if (hasNewOBSlane() != other.hasNewOBSlane()) return false;
      if (hasNewOBSlane()) {
        if (getNewOBSlane()
            != other.getNewOBSlane()) return false;
      }
      if (hasNewOBSHDlane() != other.hasNewOBSHDlane()) return false;
      if (hasNewOBSHDlane()) {
        if (getNewOBSHDlane()
            != other.getNewOBSHDlane()) return false;
      }
      if (hasNewOBSHDconnection() != other.hasNewOBSHDconnection()) return false;
      if (hasNewOBSHDconnection()) {
        if (getNewOBSHDconnection()
            != other.getNewOBSHDconnection()) return false;
      }
      if (hasFirstOBSUUID() != other.hasFirstOBSUUID()) return false;
      if (hasFirstOBSUUID()) {
        if (getFirstOBSUUID()
            != other.getFirstOBSUUID()) return false;
      }
      if (hasFirstOBSframe() != other.hasFirstOBSframe()) return false;
      if (hasFirstOBSframe()) {
        if (getFirstOBSframe()
            != other.getFirstOBSframe()) return false;
      }
      if (hasFirstOBSsubframe() != other.hasFirstOBSsubframe()) return false;
      if (hasFirstOBSsubframe()) {
        if (getFirstOBSsubframe()
            != other.getFirstOBSsubframe()) return false;
      }
      if (hasFirstOBSx() != other.hasFirstOBSx()) return false;
      if (hasFirstOBSx()) {
        if (java.lang.Double.doubleToLongBits(getFirstOBSx())
            != java.lang.Double.doubleToLongBits(
                other.getFirstOBSx())) return false;
      }
      if (hasFirstOBSy() != other.hasFirstOBSy()) return false;
      if (hasFirstOBSy()) {
        if (java.lang.Double.doubleToLongBits(getFirstOBSy())
            != java.lang.Double.doubleToLongBits(
                other.getFirstOBSy())) return false;
      }
      if (hasFirstOBSdrsu() != other.hasFirstOBSdrsu()) return false;
      if (hasFirstOBSdrsu()) {
        if (getFirstOBSdrsu()
            != other.getFirstOBSdrsu()) return false;
      }
      if (hasFirstOBSlane() != other.hasFirstOBSlane()) return false;
      if (hasFirstOBSlane()) {
        if (getFirstOBSlane()
            != other.getFirstOBSlane()) return false;
      }
      if (hasFirstOBSHDlane() != other.hasFirstOBSHDlane()) return false;
      if (hasFirstOBSHDlane()) {
        if (getFirstOBSHDlane()
            != other.getFirstOBSHDlane()) return false;
      }
      if (hasFirstOBSHDconnection() != other.hasFirstOBSHDconnection()) return false;
      if (hasFirstOBSHDconnection()) {
        if (getFirstOBSHDconnection()
            != other.getFirstOBSHDconnection()) return false;
      }
      if (hasStrDetectorInfo() != other.hasStrDetectorInfo()) return false;
      if (hasStrDetectorInfo()) {
        if (!getStrDetectorInfo()
            .equals(other.getStrDetectorInfo())) return false;
      }
      if (hasStrExtParam() != other.hasStrExtParam()) return false;
      if (hasStrExtParam()) {
        if (!getStrExtParam()
            .equals(other.getStrExtParam())) return false;
      }
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (hasVehicleType() != other.hasVehicleType()) return false;
      if (hasVehicleType()) {
        if (getVehicleType()
            != other.getVehicleType()) return false;
      }
      if (hasStrPlateNo() != other.hasStrPlateNo()) return false;
      if (hasStrPlateNo()) {
        if (!getStrPlateNo()
            .equals(other.getStrPlateNo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrame()) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrame();
      }
      if (hasSubframe()) {
        hash = (37 * hash) + SUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getSubframe();
      }
      if (hasRctpId()) {
        hash = (37 * hash) + RCTPID_FIELD_NUMBER;
        hash = (53 * hash) + getRctpId();
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState();
      }
      if (hasCstate()) {
        hash = (37 * hash) + CSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getCstate();
      }
      if (hasObsState()) {
        hash = (37 * hash) + OBSSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getObsState();
      }
      if (hasDiffDistance()) {
        hash = (37 * hash) + DIFFDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDiffDistance()));
      }
      if (hasUlMaxWaitTime()) {
        hash = (37 * hash) + ULMAXWAITTIME_FIELD_NUMBER;
        hash = (53 * hash) + getUlMaxWaitTime();
      }
      if (hasCenterPostionX()) {
        hash = (37 * hash) + CENTERPOSTION_X_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCenterPostionX()));
      }
      if (hasCenterPostionY()) {
        hash = (37 * hash) + CENTERPOSTION_Y_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCenterPostionY()));
      }
      if (hasDirecRad()) {
        hash = (37 * hash) + DIRECRAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDirecRad()));
      }
      if (hasLargeMajorAxisRadius()) {
        hash = (37 * hash) + LARGEMAJORAXISRADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getLargeMajorAxisRadius();
      }
      if (hasLargeMinorAxisRadius()) {
        hash = (37 * hash) + LARGEMINORAXISRADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getLargeMinorAxisRadius();
      }
      if (hasSmallMajorAxisRadius()) {
        hash = (37 * hash) + SMALLMAJORAXISRADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getSmallMajorAxisRadius();
      }
      if (hasSmallMinorAxisRadius()) {
        hash = (37 * hash) + SMALLMINORAXISRADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getSmallMinorAxisRadius();
      }
      if (hasNewOBSUUID()) {
        hash = (37 * hash) + NEWOBSUUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNewOBSUUID());
      }
      if (hasNewOBSframe()) {
        hash = (37 * hash) + NEWOBSFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSframe();
      }
      if (hasNewOBSsubframe()) {
        hash = (37 * hash) + NEWOBSSUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSsubframe();
      }
      if (hasNewOBSx()) {
        hash = (37 * hash) + NEWOBSX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNewOBSx()));
      }
      if (hasNewOBSy()) {
        hash = (37 * hash) + NEWOBSY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNewOBSy()));
      }
      if (hasNewOBSdrsu()) {
        hash = (37 * hash) + NEWOBSDRSU_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSdrsu();
      }
      if (hasNewOBSlane()) {
        hash = (37 * hash) + NEWOBSLANE_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSlane();
      }
      if (hasNewOBSHDlane()) {
        hash = (37 * hash) + NEWOBSHDLANE_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSHDlane();
      }
      if (hasNewOBSHDconnection()) {
        hash = (37 * hash) + NEWOBSHDCONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getNewOBSHDconnection();
      }
      if (hasFirstOBSUUID()) {
        hash = (37 * hash) + FIRSTOBSUUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFirstOBSUUID());
      }
      if (hasFirstOBSframe()) {
        hash = (37 * hash) + FIRSTOBSFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSframe();
      }
      if (hasFirstOBSsubframe()) {
        hash = (37 * hash) + FIRSTOBSSUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSsubframe();
      }
      if (hasFirstOBSx()) {
        hash = (37 * hash) + FIRSTOBSX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFirstOBSx()));
      }
      if (hasFirstOBSy()) {
        hash = (37 * hash) + FIRSTOBSY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFirstOBSy()));
      }
      if (hasFirstOBSdrsu()) {
        hash = (37 * hash) + FIRSTOBSDRSU_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSdrsu();
      }
      if (hasFirstOBSlane()) {
        hash = (37 * hash) + FIRSTOBSLANE_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSlane();
      }
      if (hasFirstOBSHDlane()) {
        hash = (37 * hash) + FIRSTOBSHDLANE_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSHDlane();
      }
      if (hasFirstOBSHDconnection()) {
        hash = (37 * hash) + FIRSTOBSHDCONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getFirstOBSHDconnection();
      }
      if (hasStrDetectorInfo()) {
        hash = (37 * hash) + STRDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStrDetectorInfo().hashCode();
      }
      if (hasStrExtParam()) {
        hash = (37 * hash) + STREXTPARAM_FIELD_NUMBER;
        hash = (53 * hash) + getStrExtParam().hashCode();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      if (hasVehicleType()) {
        hash = (37 * hash) + VEHICLETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getVehicleType();
      }
      if (hasStrPlateNo()) {
        hash = (37 * hash) + STRPLATENO_FIELD_NUMBER;
        hash = (53 * hash) + getStrPlateNo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKINGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rctpId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cstate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        obsState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        diffDistance_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        ulMaxWaitTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        centerPostionX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        centerPostionY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        direcRad_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        largeMajorAxisRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        largeMinorAxisRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        smallMajorAxisRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        smallMinorAxisRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        newOBSUUID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        newOBSframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        newOBSsubframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        newOBSx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        newOBSy_ = 0D;
        bitField0_ = (bitField0_ & ~0x00200000);
        newOBSdrsu_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        newOBSlane_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        newOBSHDlane_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        newOBSHDconnection_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        firstOBSUUID_ = 0L;
        bitField0_ = (bitField0_ & ~0x04000000);
        firstOBSframe_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        firstOBSsubframe_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        firstOBSx_ = 0D;
        bitField0_ = (bitField0_ & ~0x20000000);
        firstOBSy_ = 0D;
        bitField0_ = (bitField0_ & ~0x40000000);
        firstOBSdrsu_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        firstOBSlane_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        firstOBSHDlane_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        firstOBSHDconnection_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        strDetectorInfo_ = "";
        bitField1_ = (bitField1_ & ~0x00000008);
        strExtParam_ = "";
        bitField1_ = (bitField1_ & ~0x00000010);
        ulDrcId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        vehicleType_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        strPlateNo_ = "";
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frame_ = frame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.subframe_ = subframe_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rctpId_ = rctpId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventype_ = eventype_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.state_ = state_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cstate_ = cstate_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.obsState_ = obsState_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.diffDistance_ = diffDistance_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.ulMaxWaitTime_ = ulMaxWaitTime_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.centerPostionX_ = centerPostionX_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.centerPostionY_ = centerPostionY_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.direcRad_ = direcRad_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.largeMajorAxisRadius_ = largeMajorAxisRadius_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.largeMinorAxisRadius_ = largeMinorAxisRadius_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.smallMajorAxisRadius_ = smallMajorAxisRadius_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.smallMinorAxisRadius_ = smallMinorAxisRadius_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.newOBSUUID_ = newOBSUUID_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.newOBSframe_ = newOBSframe_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.newOBSsubframe_ = newOBSsubframe_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.newOBSx_ = newOBSx_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.newOBSy_ = newOBSy_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.newOBSdrsu_ = newOBSdrsu_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.newOBSlane_ = newOBSlane_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.newOBSHDlane_ = newOBSHDlane_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.newOBSHDconnection_ = newOBSHDconnection_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.firstOBSUUID_ = firstOBSUUID_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.firstOBSframe_ = firstOBSframe_;
          to_bitField0_ |= 0x08000000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.firstOBSsubframe_ = firstOBSsubframe_;
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.firstOBSx_ = firstOBSx_;
          to_bitField0_ |= 0x20000000;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.firstOBSy_ = firstOBSy_;
          to_bitField0_ |= 0x40000000;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.firstOBSdrsu_ = firstOBSdrsu_;
          to_bitField0_ |= 0x80000000;
        }
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.firstOBSlane_ = firstOBSlane_;
          to_bitField1_ |= 0x00000001;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.firstOBSHDlane_ = firstOBSHDlane_;
          to_bitField1_ |= 0x00000002;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.firstOBSHDconnection_ = firstOBSHDconnection_;
          to_bitField1_ |= 0x00000004;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          to_bitField1_ |= 0x00000008;
        }
        result.strDetectorInfo_ = strDetectorInfo_;
        if (((from_bitField1_ & 0x00000010) != 0)) {
          to_bitField1_ |= 0x00000010;
        }
        result.strExtParam_ = strExtParam_;
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField1_ |= 0x00000020;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.vehicleType_ = vehicleType_;
          to_bitField1_ |= 0x00000040;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          to_bitField1_ |= 0x00000080;
        }
        result.strPlateNo_ = strPlateNo_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING.getDefaultInstance()) return this;
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasSubframe()) {
          setSubframe(other.getSubframe());
        }
        if (other.hasRctpId()) {
          setRctpId(other.getRctpId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasCstate()) {
          setCstate(other.getCstate());
        }
        if (other.hasObsState()) {
          setObsState(other.getObsState());
        }
        if (other.hasDiffDistance()) {
          setDiffDistance(other.getDiffDistance());
        }
        if (other.hasUlMaxWaitTime()) {
          setUlMaxWaitTime(other.getUlMaxWaitTime());
        }
        if (other.hasCenterPostionX()) {
          setCenterPostionX(other.getCenterPostionX());
        }
        if (other.hasCenterPostionY()) {
          setCenterPostionY(other.getCenterPostionY());
        }
        if (other.hasDirecRad()) {
          setDirecRad(other.getDirecRad());
        }
        if (other.hasLargeMajorAxisRadius()) {
          setLargeMajorAxisRadius(other.getLargeMajorAxisRadius());
        }
        if (other.hasLargeMinorAxisRadius()) {
          setLargeMinorAxisRadius(other.getLargeMinorAxisRadius());
        }
        if (other.hasSmallMajorAxisRadius()) {
          setSmallMajorAxisRadius(other.getSmallMajorAxisRadius());
        }
        if (other.hasSmallMinorAxisRadius()) {
          setSmallMinorAxisRadius(other.getSmallMinorAxisRadius());
        }
        if (other.hasNewOBSUUID()) {
          setNewOBSUUID(other.getNewOBSUUID());
        }
        if (other.hasNewOBSframe()) {
          setNewOBSframe(other.getNewOBSframe());
        }
        if (other.hasNewOBSsubframe()) {
          setNewOBSsubframe(other.getNewOBSsubframe());
        }
        if (other.hasNewOBSx()) {
          setNewOBSx(other.getNewOBSx());
        }
        if (other.hasNewOBSy()) {
          setNewOBSy(other.getNewOBSy());
        }
        if (other.hasNewOBSdrsu()) {
          setNewOBSdrsu(other.getNewOBSdrsu());
        }
        if (other.hasNewOBSlane()) {
          setNewOBSlane(other.getNewOBSlane());
        }
        if (other.hasNewOBSHDlane()) {
          setNewOBSHDlane(other.getNewOBSHDlane());
        }
        if (other.hasNewOBSHDconnection()) {
          setNewOBSHDconnection(other.getNewOBSHDconnection());
        }
        if (other.hasFirstOBSUUID()) {
          setFirstOBSUUID(other.getFirstOBSUUID());
        }
        if (other.hasFirstOBSframe()) {
          setFirstOBSframe(other.getFirstOBSframe());
        }
        if (other.hasFirstOBSsubframe()) {
          setFirstOBSsubframe(other.getFirstOBSsubframe());
        }
        if (other.hasFirstOBSx()) {
          setFirstOBSx(other.getFirstOBSx());
        }
        if (other.hasFirstOBSy()) {
          setFirstOBSy(other.getFirstOBSy());
        }
        if (other.hasFirstOBSdrsu()) {
          setFirstOBSdrsu(other.getFirstOBSdrsu());
        }
        if (other.hasFirstOBSlane()) {
          setFirstOBSlane(other.getFirstOBSlane());
        }
        if (other.hasFirstOBSHDlane()) {
          setFirstOBSHDlane(other.getFirstOBSHDlane());
        }
        if (other.hasFirstOBSHDconnection()) {
          setFirstOBSHDconnection(other.getFirstOBSHDconnection());
        }
        if (other.hasStrDetectorInfo()) {
          bitField1_ |= 0x00000008;
          strDetectorInfo_ = other.strDetectorInfo_;
          onChanged();
        }
        if (other.hasStrExtParam()) {
          bitField1_ |= 0x00000010;
          strExtParam_ = other.strExtParam_;
          onChanged();
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        if (other.hasVehicleType()) {
          setVehicleType(other.getVehicleType());
        }
        if (other.hasStrPlateNo()) {
          bitField1_ |= 0x00000080;
          strPlateNo_ = other.strPlateNo_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int frame_ ;
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return Whether the frame field is set.
       */
      @java.lang.Override
      public boolean hasFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return The frame.
       */
      @java.lang.Override
      public int getFrame() {
        return frame_;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @param value The frame to set.
       * @return This builder for chaining.
       */
      public Builder setFrame(int value) {
        bitField0_ |= 0x00000001;
        frame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frame_ = 0;
        onChanged();
        return this;
      }

      private int subframe_ ;
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return Whether the subframe field is set.
       */
      @java.lang.Override
      public boolean hasSubframe() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return The subframe.
       */
      @java.lang.Override
      public int getSubframe() {
        return subframe_;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @param value The subframe to set.
       * @return This builder for chaining.
       */
      public Builder setSubframe(int value) {
        bitField0_ |= 0x00000002;
        subframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubframe() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subframe_ = 0;
        onChanged();
        return this;
      }

      private int rctpId_ ;
      /**
       * <pre>
       *rctpid ulRCTPMoudleID
       * </pre>
       *
       * <code>optional uint32 rctpId = 3;</code>
       * @return Whether the rctpId field is set.
       */
      @java.lang.Override
      public boolean hasRctpId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *rctpid ulRCTPMoudleID
       * </pre>
       *
       * <code>optional uint32 rctpId = 3;</code>
       * @return The rctpId.
       */
      @java.lang.Override
      public int getRctpId() {
        return rctpId_;
      }
      /**
       * <pre>
       *rctpid ulRCTPMoudleID
       * </pre>
       *
       * <code>optional uint32 rctpId = 3;</code>
       * @param value The rctpId to set.
       * @return This builder for chaining.
       */
      public Builder setRctpId(int value) {
        bitField0_ |= 0x00000004;
        rctpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rctpid ulRCTPMoudleID
       * </pre>
       *
       * <code>optional uint32 rctpId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRctpId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rctpId_ = 0;
        onChanged();
        return this;
      }

      private long eventId_ ;
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 4;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 4;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 4;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000008;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 6;</code>
       * @return Whether the state field is set.
       */
      @java.lang.Override
      public boolean hasState() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 6;</code>
       * @return The state.
       */
      @java.lang.Override
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 6;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000020;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        state_ = 0;
        onChanged();
        return this;
      }

      private int cstate_ ;
      /**
       * <pre>
       *事件改变状态 ulCState enum
       * </pre>
       *
       * <code>optional uint32 cstate = 7;</code>
       * @return Whether the cstate field is set.
       */
      @java.lang.Override
      public boolean hasCstate() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *事件改变状态 ulCState enum
       * </pre>
       *
       * <code>optional uint32 cstate = 7;</code>
       * @return The cstate.
       */
      @java.lang.Override
      public int getCstate() {
        return cstate_;
      }
      /**
       * <pre>
       *事件改变状态 ulCState enum
       * </pre>
       *
       * <code>optional uint32 cstate = 7;</code>
       * @param value The cstate to set.
       * @return This builder for chaining.
       */
      public Builder setCstate(int value) {
        bitField0_ |= 0x00000040;
        cstate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件改变状态 ulCState enum
       * </pre>
       *
       * <code>optional uint32 cstate = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCstate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cstate_ = 0;
        onChanged();
        return this;
      }

      private int obsState_ ;
      /**
       * <pre>
       *障碍物状态 obsState
       * </pre>
       *
       * <code>optional uint32 obsState = 8;</code>
       * @return Whether the obsState field is set.
       */
      @java.lang.Override
      public boolean hasObsState() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *障碍物状态 obsState
       * </pre>
       *
       * <code>optional uint32 obsState = 8;</code>
       * @return The obsState.
       */
      @java.lang.Override
      public int getObsState() {
        return obsState_;
      }
      /**
       * <pre>
       *障碍物状态 obsState
       * </pre>
       *
       * <code>optional uint32 obsState = 8;</code>
       * @param value The obsState to set.
       * @return This builder for chaining.
       */
      public Builder setObsState(int value) {
        bitField0_ |= 0x00000080;
        obsState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物状态 obsState
       * </pre>
       *
       * <code>optional uint32 obsState = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearObsState() {
        bitField0_ = (bitField0_ & ~0x00000080);
        obsState_ = 0;
        onChanged();
        return this;
      }

      private double diffDistance_ ;
      /**
       * <pre>
       *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
       * </pre>
       *
       * <code>optional double diffDistance = 9;</code>
       * @return Whether the diffDistance field is set.
       */
      @java.lang.Override
      public boolean hasDiffDistance() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
       * </pre>
       *
       * <code>optional double diffDistance = 9;</code>
       * @return The diffDistance.
       */
      @java.lang.Override
      public double getDiffDistance() {
        return diffDistance_;
      }
      /**
       * <pre>
       *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
       * </pre>
       *
       * <code>optional double diffDistance = 9;</code>
       * @param value The diffDistance to set.
       * @return This builder for chaining.
       */
      public Builder setDiffDistance(double value) {
        bitField0_ |= 0x00000100;
        diffDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物当前位置与椭圆中心点坐标之间的距离 diffDistance
       * </pre>
       *
       * <code>optional double diffDistance = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDiffDistance() {
        bitField0_ = (bitField0_ & ~0x00000100);
        diffDistance_ = 0D;
        onChanged();
        return this;
      }

      private int ulMaxWaitTime_ ;
      /**
       * <pre>
       *最大等待时长 ulMaxWaitTime
       * </pre>
       *
       * <code>optional uint32 ulMaxWaitTime = 10;</code>
       * @return Whether the ulMaxWaitTime field is set.
       */
      @java.lang.Override
      public boolean hasUlMaxWaitTime() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *最大等待时长 ulMaxWaitTime
       * </pre>
       *
       * <code>optional uint32 ulMaxWaitTime = 10;</code>
       * @return The ulMaxWaitTime.
       */
      @java.lang.Override
      public int getUlMaxWaitTime() {
        return ulMaxWaitTime_;
      }
      /**
       * <pre>
       *最大等待时长 ulMaxWaitTime
       * </pre>
       *
       * <code>optional uint32 ulMaxWaitTime = 10;</code>
       * @param value The ulMaxWaitTime to set.
       * @return This builder for chaining.
       */
      public Builder setUlMaxWaitTime(int value) {
        bitField0_ |= 0x00000200;
        ulMaxWaitTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大等待时长 ulMaxWaitTime
       * </pre>
       *
       * <code>optional uint32 ulMaxWaitTime = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlMaxWaitTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ulMaxWaitTime_ = 0;
        onChanged();
        return this;
      }

      private double centerPostionX_ ;
      /**
       * <pre>
       *中心点坐标 CenterPostion.dbx
       * </pre>
       *
       * <code>optional double CenterPostion_x = 11;</code>
       * @return Whether the centerPostionX field is set.
       */
      @java.lang.Override
      public boolean hasCenterPostionX() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dbx
       * </pre>
       *
       * <code>optional double CenterPostion_x = 11;</code>
       * @return The centerPostionX.
       */
      @java.lang.Override
      public double getCenterPostionX() {
        return centerPostionX_;
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dbx
       * </pre>
       *
       * <code>optional double CenterPostion_x = 11;</code>
       * @param value The centerPostionX to set.
       * @return This builder for chaining.
       */
      public Builder setCenterPostionX(double value) {
        bitField0_ |= 0x00000400;
        centerPostionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dbx
       * </pre>
       *
       * <code>optional double CenterPostion_x = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterPostionX() {
        bitField0_ = (bitField0_ & ~0x00000400);
        centerPostionX_ = 0D;
        onChanged();
        return this;
      }

      private double centerPostionY_ ;
      /**
       * <pre>
       *中心点坐标 CenterPostion.dby
       * </pre>
       *
       * <code>optional double CenterPostion_y = 12;</code>
       * @return Whether the centerPostionY field is set.
       */
      @java.lang.Override
      public boolean hasCenterPostionY() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dby
       * </pre>
       *
       * <code>optional double CenterPostion_y = 12;</code>
       * @return The centerPostionY.
       */
      @java.lang.Override
      public double getCenterPostionY() {
        return centerPostionY_;
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dby
       * </pre>
       *
       * <code>optional double CenterPostion_y = 12;</code>
       * @param value The centerPostionY to set.
       * @return This builder for chaining.
       */
      public Builder setCenterPostionY(double value) {
        bitField0_ |= 0x00000800;
        centerPostionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心点坐标 CenterPostion.dby
       * </pre>
       *
       * <code>optional double CenterPostion_y = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterPostionY() {
        bitField0_ = (bitField0_ & ~0x00000800);
        centerPostionY_ = 0D;
        onChanged();
        return this;
      }

      private double direcRad_ ;
      /**
       * <pre>
       *方向角 DirecRad
       * </pre>
       *
       * <code>optional double DirecRad = 13;</code>
       * @return Whether the direcRad field is set.
       */
      @java.lang.Override
      public boolean hasDirecRad() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *方向角 DirecRad
       * </pre>
       *
       * <code>optional double DirecRad = 13;</code>
       * @return The direcRad.
       */
      @java.lang.Override
      public double getDirecRad() {
        return direcRad_;
      }
      /**
       * <pre>
       *方向角 DirecRad
       * </pre>
       *
       * <code>optional double DirecRad = 13;</code>
       * @param value The direcRad to set.
       * @return This builder for chaining.
       */
      public Builder setDirecRad(double value) {
        bitField0_ |= 0x00001000;
        direcRad_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *方向角 DirecRad
       * </pre>
       *
       * <code>optional double DirecRad = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirecRad() {
        bitField0_ = (bitField0_ & ~0x00001000);
        direcRad_ = 0D;
        onChanged();
        return this;
      }

      private int largeMajorAxisRadius_ ;
      /**
       * <pre>
       *椭圆长轴数值
       * </pre>
       *
       * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
       * @return Whether the largeMajorAxisRadius field is set.
       */
      @java.lang.Override
      public boolean hasLargeMajorAxisRadius() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *椭圆长轴数值
       * </pre>
       *
       * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
       * @return The largeMajorAxisRadius.
       */
      @java.lang.Override
      public int getLargeMajorAxisRadius() {
        return largeMajorAxisRadius_;
      }
      /**
       * <pre>
       *椭圆长轴数值
       * </pre>
       *
       * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
       * @param value The largeMajorAxisRadius to set.
       * @return This builder for chaining.
       */
      public Builder setLargeMajorAxisRadius(int value) {
        bitField0_ |= 0x00002000;
        largeMajorAxisRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *椭圆长轴数值
       * </pre>
       *
       * <code>optional uint32 LargeMajorAxisRadius = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearLargeMajorAxisRadius() {
        bitField0_ = (bitField0_ & ~0x00002000);
        largeMajorAxisRadius_ = 0;
        onChanged();
        return this;
      }

      private int largeMinorAxisRadius_ ;
      /**
       * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
       * @return Whether the largeMinorAxisRadius field is set.
       */
      @java.lang.Override
      public boolean hasLargeMinorAxisRadius() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
       * @return The largeMinorAxisRadius.
       */
      @java.lang.Override
      public int getLargeMinorAxisRadius() {
        return largeMinorAxisRadius_;
      }
      /**
       * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
       * @param value The largeMinorAxisRadius to set.
       * @return This builder for chaining.
       */
      public Builder setLargeMinorAxisRadius(int value) {
        bitField0_ |= 0x00004000;
        largeMinorAxisRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 LargeMinorAxisRadius = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLargeMinorAxisRadius() {
        bitField0_ = (bitField0_ & ~0x00004000);
        largeMinorAxisRadius_ = 0;
        onChanged();
        return this;
      }

      private int smallMajorAxisRadius_ ;
      /**
       * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
       * @return Whether the smallMajorAxisRadius field is set.
       */
      @java.lang.Override
      public boolean hasSmallMajorAxisRadius() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
       * @return The smallMajorAxisRadius.
       */
      @java.lang.Override
      public int getSmallMajorAxisRadius() {
        return smallMajorAxisRadius_;
      }
      /**
       * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
       * @param value The smallMajorAxisRadius to set.
       * @return This builder for chaining.
       */
      public Builder setSmallMajorAxisRadius(int value) {
        bitField0_ |= 0x00008000;
        smallMajorAxisRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 SmallMajorAxisRadius = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSmallMajorAxisRadius() {
        bitField0_ = (bitField0_ & ~0x00008000);
        smallMajorAxisRadius_ = 0;
        onChanged();
        return this;
      }

      private int smallMinorAxisRadius_ ;
      /**
       * <pre>
       *椭圆短轴数值
       * </pre>
       *
       * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
       * @return Whether the smallMinorAxisRadius field is set.
       */
      @java.lang.Override
      public boolean hasSmallMinorAxisRadius() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *椭圆短轴数值
       * </pre>
       *
       * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
       * @return The smallMinorAxisRadius.
       */
      @java.lang.Override
      public int getSmallMinorAxisRadius() {
        return smallMinorAxisRadius_;
      }
      /**
       * <pre>
       *椭圆短轴数值
       * </pre>
       *
       * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
       * @param value The smallMinorAxisRadius to set.
       * @return This builder for chaining.
       */
      public Builder setSmallMinorAxisRadius(int value) {
        bitField0_ |= 0x00010000;
        smallMinorAxisRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *椭圆短轴数值
       * </pre>
       *
       * <code>optional uint32 SmallMinorAxisRadius = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSmallMinorAxisRadius() {
        bitField0_ = (bitField0_ & ~0x00010000);
        smallMinorAxisRadius_ = 0;
        onChanged();
        return this;
      }

      private long newOBSUUID_ ;
      /**
       * <pre>
       *uuid stLastestInfo.ulUUID
       * </pre>
       *
       * <code>optional uint64 newOBSUUID = 18;</code>
       * @return Whether the newOBSUUID field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSUUID() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       *uuid stLastestInfo.ulUUID
       * </pre>
       *
       * <code>optional uint64 newOBSUUID = 18;</code>
       * @return The newOBSUUID.
       */
      @java.lang.Override
      public long getNewOBSUUID() {
        return newOBSUUID_;
      }
      /**
       * <pre>
       *uuid stLastestInfo.ulUUID
       * </pre>
       *
       * <code>optional uint64 newOBSUUID = 18;</code>
       * @param value The newOBSUUID to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSUUID(long value) {
        bitField0_ |= 0x00020000;
        newOBSUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *uuid stLastestInfo.ulUUID
       * </pre>
       *
       * <code>optional uint64 newOBSUUID = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSUUID() {
        bitField0_ = (bitField0_ & ~0x00020000);
        newOBSUUID_ = 0L;
        onChanged();
        return this;
      }

      private int newOBSframe_ ;
      /**
       * <pre>
       *当前障碍物帧数 stLastestInfo.ulFrame.first
       * </pre>
       *
       * <code>optional uint32 newOBSframe = 19;</code>
       * @return Whether the newOBSframe field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSframe() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       *当前障碍物帧数 stLastestInfo.ulFrame.first
       * </pre>
       *
       * <code>optional uint32 newOBSframe = 19;</code>
       * @return The newOBSframe.
       */
      @java.lang.Override
      public int getNewOBSframe() {
        return newOBSframe_;
      }
      /**
       * <pre>
       *当前障碍物帧数 stLastestInfo.ulFrame.first
       * </pre>
       *
       * <code>optional uint32 newOBSframe = 19;</code>
       * @param value The newOBSframe to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSframe(int value) {
        bitField0_ |= 0x00040000;
        newOBSframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物帧数 stLastestInfo.ulFrame.first
       * </pre>
       *
       * <code>optional uint32 newOBSframe = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSframe() {
        bitField0_ = (bitField0_ & ~0x00040000);
        newOBSframe_ = 0;
        onChanged();
        return this;
      }

      private int newOBSsubframe_ ;
      /**
       * <pre>
       *当前障碍物子帧数 stLastestInfo.ulFrame.second
       * </pre>
       *
       * <code>optional uint32 newOBSsubframe = 20;</code>
       * @return Whether the newOBSsubframe field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSsubframe() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <pre>
       *当前障碍物子帧数 stLastestInfo.ulFrame.second
       * </pre>
       *
       * <code>optional uint32 newOBSsubframe = 20;</code>
       * @return The newOBSsubframe.
       */
      @java.lang.Override
      public int getNewOBSsubframe() {
        return newOBSsubframe_;
      }
      /**
       * <pre>
       *当前障碍物子帧数 stLastestInfo.ulFrame.second
       * </pre>
       *
       * <code>optional uint32 newOBSsubframe = 20;</code>
       * @param value The newOBSsubframe to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSsubframe(int value) {
        bitField0_ |= 0x00080000;
        newOBSsubframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物子帧数 stLastestInfo.ulFrame.second
       * </pre>
       *
       * <code>optional uint32 newOBSsubframe = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSsubframe() {
        bitField0_ = (bitField0_ & ~0x00080000);
        newOBSsubframe_ = 0;
        onChanged();
        return this;
      }

      private double newOBSx_ ;
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double newOBSx = 21;</code>
       * @return Whether the newOBSx field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSx() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double newOBSx = 21;</code>
       * @return The newOBSx.
       */
      @java.lang.Override
      public double getNewOBSx() {
        return newOBSx_;
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double newOBSx = 21;</code>
       * @param value The newOBSx to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSx(double value) {
        bitField0_ |= 0x00100000;
        newOBSx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double newOBSx = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSx() {
        bitField0_ = (bitField0_ & ~0x00100000);
        newOBSx_ = 0D;
        onChanged();
        return this;
      }

      private double newOBSy_ ;
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double newOBSy = 22;</code>
       * @return Whether the newOBSy field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSy() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double newOBSy = 22;</code>
       * @return The newOBSy.
       */
      @java.lang.Override
      public double getNewOBSy() {
        return newOBSy_;
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double newOBSy = 22;</code>
       * @param value The newOBSy to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSy(double value) {
        bitField0_ |= 0x00200000;
        newOBSy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double newOBSy = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSy() {
        bitField0_ = (bitField0_ & ~0x00200000);
        newOBSy_ = 0D;
        onChanged();
        return this;
      }

      private int newOBSdrsu_ ;
      /**
       * <pre>
       *当前障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 newOBSdrsu = 23;</code>
       * @return Whether the newOBSdrsu field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSdrsu() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       *当前障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 newOBSdrsu = 23;</code>
       * @return The newOBSdrsu.
       */
      @java.lang.Override
      public int getNewOBSdrsu() {
        return newOBSdrsu_;
      }
      /**
       * <pre>
       *当前障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 newOBSdrsu = 23;</code>
       * @param value The newOBSdrsu to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSdrsu(int value) {
        bitField0_ |= 0x00400000;
        newOBSdrsu_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 newOBSdrsu = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSdrsu() {
        bitField0_ = (bitField0_ & ~0x00400000);
        newOBSdrsu_ = 0;
        onChanged();
        return this;
      }

      private int newOBSlane_ ;
      /**
       * <pre>
       *当前障碍物车道
       * </pre>
       *
       * <code>optional uint32 newOBSlane = 24;</code>
       * @return Whether the newOBSlane field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSlane() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <pre>
       *当前障碍物车道
       * </pre>
       *
       * <code>optional uint32 newOBSlane = 24;</code>
       * @return The newOBSlane.
       */
      @java.lang.Override
      public int getNewOBSlane() {
        return newOBSlane_;
      }
      /**
       * <pre>
       *当前障碍物车道
       * </pre>
       *
       * <code>optional uint32 newOBSlane = 24;</code>
       * @param value The newOBSlane to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSlane(int value) {
        bitField0_ |= 0x00800000;
        newOBSlane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物车道
       * </pre>
       *
       * <code>optional uint32 newOBSlane = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSlane() {
        bitField0_ = (bitField0_ & ~0x00800000);
        newOBSlane_ = 0;
        onChanged();
        return this;
      }

      private int newOBSHDlane_ ;
      /**
       * <pre>
       *当前障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 newOBSHDlane = 25;</code>
       * @return Whether the newOBSHDlane field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSHDlane() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 newOBSHDlane = 25;</code>
       * @return The newOBSHDlane.
       */
      @java.lang.Override
      public int getNewOBSHDlane() {
        return newOBSHDlane_;
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 newOBSHDlane = 25;</code>
       * @param value The newOBSHDlane to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSHDlane(int value) {
        bitField0_ |= 0x01000000;
        newOBSHDlane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 newOBSHDlane = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSHDlane() {
        bitField0_ = (bitField0_ & ~0x01000000);
        newOBSHDlane_ = 0;
        onChanged();
        return this;
      }

      private int newOBSHDconnection_ ;
      /**
       * <pre>
       *当前障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 newOBSHDconnection = 26;</code>
       * @return Whether the newOBSHDconnection field is set.
       */
      @java.lang.Override
      public boolean hasNewOBSHDconnection() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 newOBSHDconnection = 26;</code>
       * @return The newOBSHDconnection.
       */
      @java.lang.Override
      public int getNewOBSHDconnection() {
        return newOBSHDconnection_;
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 newOBSHDconnection = 26;</code>
       * @param value The newOBSHDconnection to set.
       * @return This builder for chaining.
       */
      public Builder setNewOBSHDconnection(int value) {
        bitField0_ |= 0x02000000;
        newOBSHDconnection_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 newOBSHDconnection = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewOBSHDconnection() {
        bitField0_ = (bitField0_ & ~0x02000000);
        newOBSHDconnection_ = 0;
        onChanged();
        return this;
      }

      private long firstOBSUUID_ ;
      /**
       * <code>optional uint64 firstOBSUUID = 27;</code>
       * @return Whether the firstOBSUUID field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSUUID() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional uint64 firstOBSUUID = 27;</code>
       * @return The firstOBSUUID.
       */
      @java.lang.Override
      public long getFirstOBSUUID() {
        return firstOBSUUID_;
      }
      /**
       * <code>optional uint64 firstOBSUUID = 27;</code>
       * @param value The firstOBSUUID to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSUUID(long value) {
        bitField0_ |= 0x04000000;
        firstOBSUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 firstOBSUUID = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSUUID() {
        bitField0_ = (bitField0_ & ~0x04000000);
        firstOBSUUID_ = 0L;
        onChanged();
        return this;
      }

      private int firstOBSframe_ ;
      /**
       * <pre>
       *初始障碍物帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSframe = 28;</code>
       * @return Whether the firstOBSframe field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSframe() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <pre>
       *初始障碍物帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSframe = 28;</code>
       * @return The firstOBSframe.
       */
      @java.lang.Override
      public int getFirstOBSframe() {
        return firstOBSframe_;
      }
      /**
       * <pre>
       *初始障碍物帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSframe = 28;</code>
       * @param value The firstOBSframe to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSframe(int value) {
        bitField0_ |= 0x08000000;
        firstOBSframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSframe = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSframe() {
        bitField0_ = (bitField0_ & ~0x08000000);
        firstOBSframe_ = 0;
        onChanged();
        return this;
      }

      private int firstOBSsubframe_ ;
      /**
       * <pre>
       *初始障碍物子帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSsubframe = 29;</code>
       * @return Whether the firstOBSsubframe field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSsubframe() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <pre>
       *初始障碍物子帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSsubframe = 29;</code>
       * @return The firstOBSsubframe.
       */
      @java.lang.Override
      public int getFirstOBSsubframe() {
        return firstOBSsubframe_;
      }
      /**
       * <pre>
       *初始障碍物子帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSsubframe = 29;</code>
       * @param value The firstOBSsubframe to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSsubframe(int value) {
        bitField0_ |= 0x10000000;
        firstOBSsubframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物子帧数
       * </pre>
       *
       * <code>optional uint32 firstOBSsubframe = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSsubframe() {
        bitField0_ = (bitField0_ & ~0x10000000);
        firstOBSsubframe_ = 0;
        onChanged();
        return this;
      }

      private double firstOBSx_ ;
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSx = 30;</code>
       * @return Whether the firstOBSx field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSx() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSx = 30;</code>
       * @return The firstOBSx.
       */
      @java.lang.Override
      public double getFirstOBSx() {
        return firstOBSx_;
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSx = 30;</code>
       * @param value The firstOBSx to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSx(double value) {
        bitField0_ |= 0x20000000;
        firstOBSx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSx = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSx() {
        bitField0_ = (bitField0_ & ~0x20000000);
        firstOBSx_ = 0D;
        onChanged();
        return this;
      }

      private double firstOBSy_ ;
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSy = 31;</code>
       * @return Whether the firstOBSy field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSy() {
        return ((bitField0_ & 0x40000000) != 0);
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSy = 31;</code>
       * @return The firstOBSy.
       */
      @java.lang.Override
      public double getFirstOBSy() {
        return firstOBSy_;
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSy = 31;</code>
       * @param value The firstOBSy to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSy(double value) {
        bitField0_ |= 0x40000000;
        firstOBSy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物坐标
       * </pre>
       *
       * <code>optional double firstOBSy = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSy() {
        bitField0_ = (bitField0_ & ~0x40000000);
        firstOBSy_ = 0D;
        onChanged();
        return this;
      }

      private int firstOBSdrsu_ ;
      /**
       * <pre>
       *初始障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 firstOBSdrsu = 32;</code>
       * @return Whether the firstOBSdrsu field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSdrsu() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <pre>
       *初始障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 firstOBSdrsu = 32;</code>
       * @return The firstOBSdrsu.
       */
      @java.lang.Override
      public int getFirstOBSdrsu() {
        return firstOBSdrsu_;
      }
      /**
       * <pre>
       *初始障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 firstOBSdrsu = 32;</code>
       * @param value The firstOBSdrsu to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSdrsu(int value) {
        bitField0_ |= 0x80000000;
        firstOBSdrsu_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物检测drsu
       * </pre>
       *
       * <code>optional uint32 firstOBSdrsu = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSdrsu() {
        bitField0_ = (bitField0_ & ~0x80000000);
        firstOBSdrsu_ = 0;
        onChanged();
        return this;
      }

      private int firstOBSlane_ ;
      /**
       * <pre>
       *初始障碍物车道
       * </pre>
       *
       * <code>optional uint32 firstOBSlane = 33;</code>
       * @return Whether the firstOBSlane field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSlane() {
        return ((bitField1_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *初始障碍物车道
       * </pre>
       *
       * <code>optional uint32 firstOBSlane = 33;</code>
       * @return The firstOBSlane.
       */
      @java.lang.Override
      public int getFirstOBSlane() {
        return firstOBSlane_;
      }
      /**
       * <pre>
       *初始障碍物车道
       * </pre>
       *
       * <code>optional uint32 firstOBSlane = 33;</code>
       * @param value The firstOBSlane to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSlane(int value) {
        bitField1_ |= 0x00000001;
        firstOBSlane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物车道
       * </pre>
       *
       * <code>optional uint32 firstOBSlane = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSlane() {
        bitField1_ = (bitField1_ & ~0x00000001);
        firstOBSlane_ = 0;
        onChanged();
        return this;
      }

      private int firstOBSHDlane_ ;
      /**
       * <pre>
       *初始障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDlane = 34;</code>
       * @return Whether the firstOBSHDlane field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSHDlane() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDlane = 34;</code>
       * @return The firstOBSHDlane.
       */
      @java.lang.Override
      public int getFirstOBSHDlane() {
        return firstOBSHDlane_;
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDlane = 34;</code>
       * @param value The firstOBSHDlane to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSHDlane(int value) {
        bitField1_ |= 0x00000002;
        firstOBSHDlane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的laneid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDlane = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSHDlane() {
        bitField1_ = (bitField1_ & ~0x00000002);
        firstOBSHDlane_ = 0;
        onChanged();
        return this;
      }

      private int firstOBSHDconnection_ ;
      /**
       * <pre>
       *初始障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDconnection = 35;</code>
       * @return Whether the firstOBSHDconnection field is set.
       */
      @java.lang.Override
      public boolean hasFirstOBSHDconnection() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDconnection = 35;</code>
       * @return The firstOBSHDconnection.
       */
      @java.lang.Override
      public int getFirstOBSHDconnection() {
        return firstOBSHDconnection_;
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDconnection = 35;</code>
       * @param value The firstOBSHDconnection to set.
       * @return This builder for chaining.
       */
      public Builder setFirstOBSHDconnection(int value) {
        bitField1_ |= 0x00000004;
        firstOBSHDconnection_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始障碍物对应高精地图的connectionid
       * </pre>
       *
       * <code>optional uint32 firstOBSHDconnection = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstOBSHDconnection() {
        bitField1_ = (bitField1_ & ~0x00000004);
        firstOBSHDconnection_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object strDetectorInfo_ = "";
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @return Whether the strDetectorInfo field is set.
       */
      public boolean hasStrDetectorInfo() {
        return ((bitField1_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @return The strDetectorInfo.
       */
      public java.lang.String getStrDetectorInfo() {
        java.lang.Object ref = strDetectorInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strDetectorInfo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @return The bytes for strDetectorInfo.
       */
      public com.google.protobuf.ByteString
          getStrDetectorInfoBytes() {
        java.lang.Object ref = strDetectorInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strDetectorInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @param value The strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrDetectorInfo() {
        bitField1_ = (bitField1_ & ~0x00000008);
        strDetectorInfo_ = getDefaultInstance().getStrDetectorInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 36;</code>
       * @param value The bytes for strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object strExtParam_ = "";
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @return Whether the strExtParam field is set.
       */
      public boolean hasStrExtParam() {
        return ((bitField1_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @return The strExtParam.
       */
      public java.lang.String getStrExtParam() {
        java.lang.Object ref = strExtParam_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strExtParam_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @return The bytes for strExtParam.
       */
      public com.google.protobuf.ByteString
          getStrExtParamBytes() {
        java.lang.Object ref = strExtParam_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strExtParam_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @param value The strExtParam to set.
       * @return This builder for chaining.
       */
      public Builder setStrExtParam(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        strExtParam_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrExtParam() {
        bitField1_ = (bitField1_ & ~0x00000010);
        strExtParam_ = getDefaultInstance().getStrExtParam();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试
       * </pre>
       *
       * <code>optional string strExtParam = 37;</code>
       * @param value The bytes for strExtParam to set.
       * @return This builder for chaining.
       */
      public Builder setStrExtParamBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        strExtParam_ = value;
        onChanged();
        return this;
      }

      private int ulDrcId_ ;
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 38;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField1_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 38;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 38;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField1_ |= 0x00000020;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField1_ = (bitField1_ & ~0x00000020);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }

      private int vehicleType_ ;
      /**
       * <pre>
       * 0:普通车辆 ; 1: 警车; 2:工程车
       * </pre>
       *
       * <code>optional int32 vehicleType = 39;</code>
       * @return Whether the vehicleType field is set.
       */
      @java.lang.Override
      public boolean hasVehicleType() {
        return ((bitField1_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * 0:普通车辆 ; 1: 警车; 2:工程车
       * </pre>
       *
       * <code>optional int32 vehicleType = 39;</code>
       * @return The vehicleType.
       */
      @java.lang.Override
      public int getVehicleType() {
        return vehicleType_;
      }
      /**
       * <pre>
       * 0:普通车辆 ; 1: 警车; 2:工程车
       * </pre>
       *
       * <code>optional int32 vehicleType = 39;</code>
       * @param value The vehicleType to set.
       * @return This builder for chaining.
       */
      public Builder setVehicleType(int value) {
        bitField1_ |= 0x00000040;
        vehicleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0:普通车辆 ; 1: 警车; 2:工程车
       * </pre>
       *
       * <code>optional int32 vehicleType = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearVehicleType() {
        bitField1_ = (bitField1_ & ~0x00000040);
        vehicleType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object strPlateNo_ = "";
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @return Whether the strPlateNo field is set.
       */
      public boolean hasStrPlateNo() {
        return ((bitField1_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @return The strPlateNo.
       */
      public java.lang.String getStrPlateNo() {
        java.lang.Object ref = strPlateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strPlateNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @return The bytes for strPlateNo.
       */
      public com.google.protobuf.ByteString
          getStrPlateNoBytes() {
        java.lang.Object ref = strPlateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strPlateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @param value The strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000080;
        strPlateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrPlateNo() {
        bitField1_ = (bitField1_ & ~0x00000080);
        strPlateNo_ = getDefaultInstance().getStrPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 40;</code>
       * @param value The bytes for strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000080;
        strPlateNo_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_ABNORMAL_PARKING)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_ABNORMAL_PARKING>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_ABNORMAL_PARKING>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_ABNORMAL_PARKING parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_ABNORMAL_PARKING(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_ABNORMAL_PARKING> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_ABNORMAL_PARKING> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ABNORMAL_PARKING getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TRAFFIC_ACCIDENT_OBSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.TRAFFIC_ACCIDENT_OBS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 1;</code>
     * @return Whether the ulUUID field is set.
     */
    boolean hasUlUUID();
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 1;</code>
     * @return The ulUUID.
     */
    long getUlUUID();

    /**
     * <pre>
     *当前障碍物的帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_first = 2;</code>
     * @return Whether the ulFrameFirst field is set.
     */
    boolean hasUlFrameFirst();
    /**
     * <pre>
     *当前障碍物的帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_first = 2;</code>
     * @return The ulFrameFirst.
     */
    int getUlFrameFirst();

    /**
     * <pre>
     *当前障碍物的子帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_second = 3;</code>
     * @return Whether the ulFrameSecond field is set.
     */
    boolean hasUlFrameSecond();
    /**
     * <pre>
     *当前障碍物的子帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_second = 3;</code>
     * @return The ulFrameSecond.
     */
    int getUlFrameSecond();

    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double dbVehicle_position_x = 4;</code>
     * @return Whether the dbVehiclePositionX field is set.
     */
    boolean hasDbVehiclePositionX();
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double dbVehicle_position_x = 4;</code>
     * @return The dbVehiclePositionX.
     */
    double getDbVehiclePositionX();

    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double dbVehicle_position_y = 5;</code>
     * @return Whether the dbVehiclePositionY field is set.
     */
    boolean hasDbVehiclePositionY();
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double dbVehicle_position_y = 5;</code>
     * @return The dbVehiclePositionY.
     */
    double getDbVehiclePositionY();

    /**
     * <pre>
     *master drsu id
     * </pre>
     *
     * <code>optional uint32 ulMaster_drsuid = 6;</code>
     * @return Whether the ulMasterDrsuid field is set.
     */
    boolean hasUlMasterDrsuid();
    /**
     * <pre>
     *master drsu id
     * </pre>
     *
     * <code>optional uint32 ulMaster_drsuid = 6;</code>
     * @return The ulMasterDrsuid.
     */
    int getUlMasterDrsuid();

    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulMaster_landid = 7;</code>
     * @return Whether the ulMasterLandid field is set.
     */
    boolean hasUlMasterLandid();
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulMaster_landid = 7;</code>
     * @return The ulMasterLandid.
     */
    int getUlMasterLandid();

    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHD_laneid = 8;</code>
     * @return Whether the ulHDLaneid field is set.
     */
    boolean hasUlHDLaneid();
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHD_laneid = 8;</code>
     * @return The ulHDLaneid.
     */
    int getUlHDLaneid();

    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHD_ConnectionId = 9;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    boolean hasUlHDConnectionId();
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHD_ConnectionId = 9;</code>
     * @return The ulHDConnectionId.
     */
    int getUlHDConnectionId();

    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return Whether the strPlateNo field is set.
     */
    boolean hasStrPlateNo();
    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return The strPlateNo.
     */
    java.lang.String getStrPlateNo();
    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return The bytes for strPlateNo.
     */
    com.google.protobuf.ByteString
        getStrPlateNoBytes();

    /**
     * <pre>
     *是否是高流量区 1，高流量区  0，不是高流量区
     * </pre>
     *
     * <code>optional int32 isHighFlow = 11;</code>
     * @return Whether the isHighFlow field is set.
     */
    boolean hasIsHighFlow();
    /**
     * <pre>
     *是否是高流量区 1，高流量区  0，不是高流量区
     * </pre>
     *
     * <code>optional int32 isHighFlow = 11;</code>
     * @return The isHighFlow.
     */
    int getIsHighFlow();

    /**
     * <pre>
     *关联的异常停车的事件id
     * </pre>
     *
     * <code>optional uint64 ulAb_parking_eventId = 12;</code>
     * @return Whether the ulAbParkingEventId field is set.
     */
    boolean hasUlAbParkingEventId();
    /**
     * <pre>
     *关联的异常停车的事件id
     * </pre>
     *
     * <code>optional uint64 ulAb_parking_eventId = 12;</code>
     * @return The ulAbParkingEventId.
     */
    long getUlAbParkingEventId();
  }
  /**
   * Protobuf type {@code event_debug.TRAFFIC_ACCIDENT_OBS}
   */
  public static final class TRAFFIC_ACCIDENT_OBS extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.TRAFFIC_ACCIDENT_OBS)
      TRAFFIC_ACCIDENT_OBSOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TRAFFIC_ACCIDENT_OBS.newBuilder() to construct.
    private TRAFFIC_ACCIDENT_OBS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TRAFFIC_ACCIDENT_OBS() {
      strPlateNo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TRAFFIC_ACCIDENT_OBS();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TRAFFIC_ACCIDENT_OBS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ulUUID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ulFrameFirst_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ulFrameSecond_ = input.readUInt32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              dbVehiclePositionX_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              dbVehiclePositionY_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ulMasterDrsuid_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              ulMasterLandid_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              ulHDLaneid_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ulHDConnectionId_ = input.readUInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              strPlateNo_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              isHighFlow_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              ulAbParkingEventId_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.class, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder.class);
    }

    private int bitField0_;
    public static final int ULUUID_FIELD_NUMBER = 1;
    private long ulUUID_;
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 1;</code>
     * @return Whether the ulUUID field is set.
     */
    @java.lang.Override
    public boolean hasUlUUID() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 1;</code>
     * @return The ulUUID.
     */
    @java.lang.Override
    public long getUlUUID() {
      return ulUUID_;
    }

    public static final int ULFRAME_FIRST_FIELD_NUMBER = 2;
    private int ulFrameFirst_;
    /**
     * <pre>
     *当前障碍物的帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_first = 2;</code>
     * @return Whether the ulFrameFirst field is set.
     */
    @java.lang.Override
    public boolean hasUlFrameFirst() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *当前障碍物的帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_first = 2;</code>
     * @return The ulFrameFirst.
     */
    @java.lang.Override
    public int getUlFrameFirst() {
      return ulFrameFirst_;
    }

    public static final int ULFRAME_SECOND_FIELD_NUMBER = 3;
    private int ulFrameSecond_;
    /**
     * <pre>
     *当前障碍物的子帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_second = 3;</code>
     * @return Whether the ulFrameSecond field is set.
     */
    @java.lang.Override
    public boolean hasUlFrameSecond() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *当前障碍物的子帧数
     * </pre>
     *
     * <code>optional uint32 ulFrame_second = 3;</code>
     * @return The ulFrameSecond.
     */
    @java.lang.Override
    public int getUlFrameSecond() {
      return ulFrameSecond_;
    }

    public static final int DBVEHICLE_POSITION_X_FIELD_NUMBER = 4;
    private double dbVehiclePositionX_;
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double dbVehicle_position_x = 4;</code>
     * @return Whether the dbVehiclePositionX field is set.
     */
    @java.lang.Override
    public boolean hasDbVehiclePositionX() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *当前障碍物坐标 
     * </pre>
     *
     * <code>optional double dbVehicle_position_x = 4;</code>
     * @return The dbVehiclePositionX.
     */
    @java.lang.Override
    public double getDbVehiclePositionX() {
      return dbVehiclePositionX_;
    }

    public static final int DBVEHICLE_POSITION_Y_FIELD_NUMBER = 5;
    private double dbVehiclePositionY_;
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double dbVehicle_position_y = 5;</code>
     * @return Whether the dbVehiclePositionY field is set.
     */
    @java.lang.Override
    public boolean hasDbVehiclePositionY() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *当前障碍物坐标
     * </pre>
     *
     * <code>optional double dbVehicle_position_y = 5;</code>
     * @return The dbVehiclePositionY.
     */
    @java.lang.Override
    public double getDbVehiclePositionY() {
      return dbVehiclePositionY_;
    }

    public static final int ULMASTER_DRSUID_FIELD_NUMBER = 6;
    private int ulMasterDrsuid_;
    /**
     * <pre>
     *master drsu id
     * </pre>
     *
     * <code>optional uint32 ulMaster_drsuid = 6;</code>
     * @return Whether the ulMasterDrsuid field is set.
     */
    @java.lang.Override
    public boolean hasUlMasterDrsuid() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *master drsu id
     * </pre>
     *
     * <code>optional uint32 ulMaster_drsuid = 6;</code>
     * @return The ulMasterDrsuid.
     */
    @java.lang.Override
    public int getUlMasterDrsuid() {
      return ulMasterDrsuid_;
    }

    public static final int ULMASTER_LANDID_FIELD_NUMBER = 7;
    private int ulMasterLandid_;
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulMaster_landid = 7;</code>
     * @return Whether the ulMasterLandid field is set.
     */
    @java.lang.Override
    public boolean hasUlMasterLandid() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulMaster_landid = 7;</code>
     * @return The ulMasterLandid.
     */
    @java.lang.Override
    public int getUlMasterLandid() {
      return ulMasterLandid_;
    }

    public static final int ULHD_LANEID_FIELD_NUMBER = 8;
    private int ulHDLaneid_;
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHD_laneid = 8;</code>
     * @return Whether the ulHDLaneid field is set.
     */
    @java.lang.Override
    public boolean hasUlHDLaneid() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHD_laneid = 8;</code>
     * @return The ulHDLaneid.
     */
    @java.lang.Override
    public int getUlHDLaneid() {
      return ulHDLaneid_;
    }

    public static final int ULHD_CONNECTIONID_FIELD_NUMBER = 9;
    private int ulHDConnectionId_;
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHD_ConnectionId = 9;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    @java.lang.Override
    public boolean hasUlHDConnectionId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHD_ConnectionId = 9;</code>
     * @return The ulHDConnectionId.
     */
    @java.lang.Override
    public int getUlHDConnectionId() {
      return ulHDConnectionId_;
    }

    public static final int STRPLATENO_FIELD_NUMBER = 10;
    private volatile java.lang.Object strPlateNo_;
    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return Whether the strPlateNo field is set.
     */
    @java.lang.Override
    public boolean hasStrPlateNo() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return The strPlateNo.
     */
    @java.lang.Override
    public java.lang.String getStrPlateNo() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strPlateNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌
     * </pre>
     *
     * <code>optional string strPlateNo = 10;</code>
     * @return The bytes for strPlateNo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrPlateNoBytes() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strPlateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISHIGHFLOW_FIELD_NUMBER = 11;
    private int isHighFlow_;
    /**
     * <pre>
     *是否是高流量区 1，高流量区  0，不是高流量区
     * </pre>
     *
     * <code>optional int32 isHighFlow = 11;</code>
     * @return Whether the isHighFlow field is set.
     */
    @java.lang.Override
    public boolean hasIsHighFlow() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *是否是高流量区 1，高流量区  0，不是高流量区
     * </pre>
     *
     * <code>optional int32 isHighFlow = 11;</code>
     * @return The isHighFlow.
     */
    @java.lang.Override
    public int getIsHighFlow() {
      return isHighFlow_;
    }

    public static final int ULAB_PARKING_EVENTID_FIELD_NUMBER = 12;
    private long ulAbParkingEventId_;
    /**
     * <pre>
     *关联的异常停车的事件id
     * </pre>
     *
     * <code>optional uint64 ulAb_parking_eventId = 12;</code>
     * @return Whether the ulAbParkingEventId field is set.
     */
    @java.lang.Override
    public boolean hasUlAbParkingEventId() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *关联的异常停车的事件id
     * </pre>
     *
     * <code>optional uint64 ulAb_parking_eventId = 12;</code>
     * @return The ulAbParkingEventId.
     */
    @java.lang.Override
    public long getUlAbParkingEventId() {
      return ulAbParkingEventId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, ulUUID_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, ulFrameFirst_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ulFrameSecond_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, dbVehiclePositionX_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, dbVehiclePositionY_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, ulMasterDrsuid_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, ulMasterLandid_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, ulHDLaneid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, strPlateNo_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, isHighFlow_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt64(12, ulAbParkingEventId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, ulUUID_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ulFrameFirst_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ulFrameSecond_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, dbVehiclePositionX_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, dbVehiclePositionY_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ulMasterDrsuid_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, ulMasterLandid_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, ulHDLaneid_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, strPlateNo_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, isHighFlow_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, ulAbParkingEventId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS other = (event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS) obj;

      if (hasUlUUID() != other.hasUlUUID()) return false;
      if (hasUlUUID()) {
        if (getUlUUID()
            != other.getUlUUID()) return false;
      }
      if (hasUlFrameFirst() != other.hasUlFrameFirst()) return false;
      if (hasUlFrameFirst()) {
        if (getUlFrameFirst()
            != other.getUlFrameFirst()) return false;
      }
      if (hasUlFrameSecond() != other.hasUlFrameSecond()) return false;
      if (hasUlFrameSecond()) {
        if (getUlFrameSecond()
            != other.getUlFrameSecond()) return false;
      }
      if (hasDbVehiclePositionX() != other.hasDbVehiclePositionX()) return false;
      if (hasDbVehiclePositionX()) {
        if (java.lang.Double.doubleToLongBits(getDbVehiclePositionX())
            != java.lang.Double.doubleToLongBits(
                other.getDbVehiclePositionX())) return false;
      }
      if (hasDbVehiclePositionY() != other.hasDbVehiclePositionY()) return false;
      if (hasDbVehiclePositionY()) {
        if (java.lang.Double.doubleToLongBits(getDbVehiclePositionY())
            != java.lang.Double.doubleToLongBits(
                other.getDbVehiclePositionY())) return false;
      }
      if (hasUlMasterDrsuid() != other.hasUlMasterDrsuid()) return false;
      if (hasUlMasterDrsuid()) {
        if (getUlMasterDrsuid()
            != other.getUlMasterDrsuid()) return false;
      }
      if (hasUlMasterLandid() != other.hasUlMasterLandid()) return false;
      if (hasUlMasterLandid()) {
        if (getUlMasterLandid()
            != other.getUlMasterLandid()) return false;
      }
      if (hasUlHDLaneid() != other.hasUlHDLaneid()) return false;
      if (hasUlHDLaneid()) {
        if (getUlHDLaneid()
            != other.getUlHDLaneid()) return false;
      }
      if (hasUlHDConnectionId() != other.hasUlHDConnectionId()) return false;
      if (hasUlHDConnectionId()) {
        if (getUlHDConnectionId()
            != other.getUlHDConnectionId()) return false;
      }
      if (hasStrPlateNo() != other.hasStrPlateNo()) return false;
      if (hasStrPlateNo()) {
        if (!getStrPlateNo()
            .equals(other.getStrPlateNo())) return false;
      }
      if (hasIsHighFlow() != other.hasIsHighFlow()) return false;
      if (hasIsHighFlow()) {
        if (getIsHighFlow()
            != other.getIsHighFlow()) return false;
      }
      if (hasUlAbParkingEventId() != other.hasUlAbParkingEventId()) return false;
      if (hasUlAbParkingEventId()) {
        if (getUlAbParkingEventId()
            != other.getUlAbParkingEventId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUlUUID()) {
        hash = (37 * hash) + ULUUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUlUUID());
      }
      if (hasUlFrameFirst()) {
        hash = (37 * hash) + ULFRAME_FIRST_FIELD_NUMBER;
        hash = (53 * hash) + getUlFrameFirst();
      }
      if (hasUlFrameSecond()) {
        hash = (37 * hash) + ULFRAME_SECOND_FIELD_NUMBER;
        hash = (53 * hash) + getUlFrameSecond();
      }
      if (hasDbVehiclePositionX()) {
        hash = (37 * hash) + DBVEHICLE_POSITION_X_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbVehiclePositionX()));
      }
      if (hasDbVehiclePositionY()) {
        hash = (37 * hash) + DBVEHICLE_POSITION_Y_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbVehiclePositionY()));
      }
      if (hasUlMasterDrsuid()) {
        hash = (37 * hash) + ULMASTER_DRSUID_FIELD_NUMBER;
        hash = (53 * hash) + getUlMasterDrsuid();
      }
      if (hasUlMasterLandid()) {
        hash = (37 * hash) + ULMASTER_LANDID_FIELD_NUMBER;
        hash = (53 * hash) + getUlMasterLandid();
      }
      if (hasUlHDLaneid()) {
        hash = (37 * hash) + ULHD_LANEID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDLaneid();
      }
      if (hasUlHDConnectionId()) {
        hash = (37 * hash) + ULHD_CONNECTIONID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDConnectionId();
      }
      if (hasStrPlateNo()) {
        hash = (37 * hash) + STRPLATENO_FIELD_NUMBER;
        hash = (53 * hash) + getStrPlateNo().hashCode();
      }
      if (hasIsHighFlow()) {
        hash = (37 * hash) + ISHIGHFLOW_FIELD_NUMBER;
        hash = (53 * hash) + getIsHighFlow();
      }
      if (hasUlAbParkingEventId()) {
        hash = (37 * hash) + ULAB_PARKING_EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUlAbParkingEventId());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.TRAFFIC_ACCIDENT_OBS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.TRAFFIC_ACCIDENT_OBS)
        event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.class, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ulUUID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        ulFrameFirst_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ulFrameSecond_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dbVehiclePositionX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        dbVehiclePositionY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        ulMasterDrsuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ulMasterLandid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        ulHDLaneid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        ulHDConnectionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        strPlateNo_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        isHighFlow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        ulAbParkingEventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS build() {
        event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS buildPartial() {
        event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS result = new event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ulUUID_ = ulUUID_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ulFrameFirst_ = ulFrameFirst_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ulFrameSecond_ = ulFrameSecond_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.dbVehiclePositionX_ = dbVehiclePositionX_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dbVehiclePositionY_ = dbVehiclePositionY_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulMasterDrsuid_ = ulMasterDrsuid_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ulMasterLandid_ = ulMasterLandid_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.ulHDLaneid_ = ulHDLaneid_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.ulHDConnectionId_ = ulHDConnectionId_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          to_bitField0_ |= 0x00000200;
        }
        result.strPlateNo_ = strPlateNo_;
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.isHighFlow_ = isHighFlow_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.ulAbParkingEventId_ = ulAbParkingEventId_;
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS) {
          return mergeFrom((event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS other) {
        if (other == event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.getDefaultInstance()) return this;
        if (other.hasUlUUID()) {
          setUlUUID(other.getUlUUID());
        }
        if (other.hasUlFrameFirst()) {
          setUlFrameFirst(other.getUlFrameFirst());
        }
        if (other.hasUlFrameSecond()) {
          setUlFrameSecond(other.getUlFrameSecond());
        }
        if (other.hasDbVehiclePositionX()) {
          setDbVehiclePositionX(other.getDbVehiclePositionX());
        }
        if (other.hasDbVehiclePositionY()) {
          setDbVehiclePositionY(other.getDbVehiclePositionY());
        }
        if (other.hasUlMasterDrsuid()) {
          setUlMasterDrsuid(other.getUlMasterDrsuid());
        }
        if (other.hasUlMasterLandid()) {
          setUlMasterLandid(other.getUlMasterLandid());
        }
        if (other.hasUlHDLaneid()) {
          setUlHDLaneid(other.getUlHDLaneid());
        }
        if (other.hasUlHDConnectionId()) {
          setUlHDConnectionId(other.getUlHDConnectionId());
        }
        if (other.hasStrPlateNo()) {
          bitField0_ |= 0x00000200;
          strPlateNo_ = other.strPlateNo_;
          onChanged();
        }
        if (other.hasIsHighFlow()) {
          setIsHighFlow(other.getIsHighFlow());
        }
        if (other.hasUlAbParkingEventId()) {
          setUlAbParkingEventId(other.getUlAbParkingEventId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long ulUUID_ ;
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 1;</code>
       * @return Whether the ulUUID field is set.
       */
      @java.lang.Override
      public boolean hasUlUUID() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 1;</code>
       * @return The ulUUID.
       */
      @java.lang.Override
      public long getUlUUID() {
        return ulUUID_;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 1;</code>
       * @param value The ulUUID to set.
       * @return This builder for chaining.
       */
      public Builder setUlUUID(long value) {
        bitField0_ |= 0x00000001;
        ulUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlUUID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ulUUID_ = 0L;
        onChanged();
        return this;
      }

      private int ulFrameFirst_ ;
      /**
       * <pre>
       *当前障碍物的帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_first = 2;</code>
       * @return Whether the ulFrameFirst field is set.
       */
      @java.lang.Override
      public boolean hasUlFrameFirst() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *当前障碍物的帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_first = 2;</code>
       * @return The ulFrameFirst.
       */
      @java.lang.Override
      public int getUlFrameFirst() {
        return ulFrameFirst_;
      }
      /**
       * <pre>
       *当前障碍物的帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_first = 2;</code>
       * @param value The ulFrameFirst to set.
       * @return This builder for chaining.
       */
      public Builder setUlFrameFirst(int value) {
        bitField0_ |= 0x00000002;
        ulFrameFirst_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物的帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_first = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlFrameFirst() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ulFrameFirst_ = 0;
        onChanged();
        return this;
      }

      private int ulFrameSecond_ ;
      /**
       * <pre>
       *当前障碍物的子帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_second = 3;</code>
       * @return Whether the ulFrameSecond field is set.
       */
      @java.lang.Override
      public boolean hasUlFrameSecond() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *当前障碍物的子帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_second = 3;</code>
       * @return The ulFrameSecond.
       */
      @java.lang.Override
      public int getUlFrameSecond() {
        return ulFrameSecond_;
      }
      /**
       * <pre>
       *当前障碍物的子帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_second = 3;</code>
       * @param value The ulFrameSecond to set.
       * @return This builder for chaining.
       */
      public Builder setUlFrameSecond(int value) {
        bitField0_ |= 0x00000004;
        ulFrameSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物的子帧数
       * </pre>
       *
       * <code>optional uint32 ulFrame_second = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlFrameSecond() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ulFrameSecond_ = 0;
        onChanged();
        return this;
      }

      private double dbVehiclePositionX_ ;
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double dbVehicle_position_x = 4;</code>
       * @return Whether the dbVehiclePositionX field is set.
       */
      @java.lang.Override
      public boolean hasDbVehiclePositionX() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double dbVehicle_position_x = 4;</code>
       * @return The dbVehiclePositionX.
       */
      @java.lang.Override
      public double getDbVehiclePositionX() {
        return dbVehiclePositionX_;
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double dbVehicle_position_x = 4;</code>
       * @param value The dbVehiclePositionX to set.
       * @return This builder for chaining.
       */
      public Builder setDbVehiclePositionX(double value) {
        bitField0_ |= 0x00000008;
        dbVehiclePositionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物坐标 
       * </pre>
       *
       * <code>optional double dbVehicle_position_x = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbVehiclePositionX() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dbVehiclePositionX_ = 0D;
        onChanged();
        return this;
      }

      private double dbVehiclePositionY_ ;
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double dbVehicle_position_y = 5;</code>
       * @return Whether the dbVehiclePositionY field is set.
       */
      @java.lang.Override
      public boolean hasDbVehiclePositionY() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double dbVehicle_position_y = 5;</code>
       * @return The dbVehiclePositionY.
       */
      @java.lang.Override
      public double getDbVehiclePositionY() {
        return dbVehiclePositionY_;
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double dbVehicle_position_y = 5;</code>
       * @param value The dbVehiclePositionY to set.
       * @return This builder for chaining.
       */
      public Builder setDbVehiclePositionY(double value) {
        bitField0_ |= 0x00000010;
        dbVehiclePositionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物坐标
       * </pre>
       *
       * <code>optional double dbVehicle_position_y = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbVehiclePositionY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dbVehiclePositionY_ = 0D;
        onChanged();
        return this;
      }

      private int ulMasterDrsuid_ ;
      /**
       * <pre>
       *master drsu id
       * </pre>
       *
       * <code>optional uint32 ulMaster_drsuid = 6;</code>
       * @return Whether the ulMasterDrsuid field is set.
       */
      @java.lang.Override
      public boolean hasUlMasterDrsuid() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *master drsu id
       * </pre>
       *
       * <code>optional uint32 ulMaster_drsuid = 6;</code>
       * @return The ulMasterDrsuid.
       */
      @java.lang.Override
      public int getUlMasterDrsuid() {
        return ulMasterDrsuid_;
      }
      /**
       * <pre>
       *master drsu id
       * </pre>
       *
       * <code>optional uint32 ulMaster_drsuid = 6;</code>
       * @param value The ulMasterDrsuid to set.
       * @return This builder for chaining.
       */
      public Builder setUlMasterDrsuid(int value) {
        bitField0_ |= 0x00000020;
        ulMasterDrsuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *master drsu id
       * </pre>
       *
       * <code>optional uint32 ulMaster_drsuid = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlMasterDrsuid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulMasterDrsuid_ = 0;
        onChanged();
        return this;
      }

      private int ulMasterLandid_ ;
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulMaster_landid = 7;</code>
       * @return Whether the ulMasterLandid field is set.
       */
      @java.lang.Override
      public boolean hasUlMasterLandid() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulMaster_landid = 7;</code>
       * @return The ulMasterLandid.
       */
      @java.lang.Override
      public int getUlMasterLandid() {
        return ulMasterLandid_;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulMaster_landid = 7;</code>
       * @param value The ulMasterLandid to set.
       * @return This builder for chaining.
       */
      public Builder setUlMasterLandid(int value) {
        bitField0_ |= 0x00000040;
        ulMasterLandid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulMaster_landid = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlMasterLandid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ulMasterLandid_ = 0;
        onChanged();
        return this;
      }

      private int ulHDLaneid_ ;
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHD_laneid = 8;</code>
       * @return Whether the ulHDLaneid field is set.
       */
      @java.lang.Override
      public boolean hasUlHDLaneid() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHD_laneid = 8;</code>
       * @return The ulHDLaneid.
       */
      @java.lang.Override
      public int getUlHDLaneid() {
        return ulHDLaneid_;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHD_laneid = 8;</code>
       * @param value The ulHDLaneid to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDLaneid(int value) {
        bitField0_ |= 0x00000080;
        ulHDLaneid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHD_laneid = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDLaneid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ulHDLaneid_ = 0;
        onChanged();
        return this;
      }

      private int ulHDConnectionId_ ;
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHD_ConnectionId = 9;</code>
       * @return Whether the ulHDConnectionId field is set.
       */
      @java.lang.Override
      public boolean hasUlHDConnectionId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHD_ConnectionId = 9;</code>
       * @return The ulHDConnectionId.
       */
      @java.lang.Override
      public int getUlHDConnectionId() {
        return ulHDConnectionId_;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHD_ConnectionId = 9;</code>
       * @param value The ulHDConnectionId to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDConnectionId(int value) {
        bitField0_ |= 0x00000100;
        ulHDConnectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHD_ConnectionId = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDConnectionId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ulHDConnectionId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object strPlateNo_ = "";
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @return Whether the strPlateNo field is set.
       */
      public boolean hasStrPlateNo() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @return The strPlateNo.
       */
      public java.lang.String getStrPlateNo() {
        java.lang.Object ref = strPlateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strPlateNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @return The bytes for strPlateNo.
       */
      public com.google.protobuf.ByteString
          getStrPlateNoBytes() {
        java.lang.Object ref = strPlateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strPlateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @param value The strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        strPlateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrPlateNo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        strPlateNo_ = getDefaultInstance().getStrPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌
       * </pre>
       *
       * <code>optional string strPlateNo = 10;</code>
       * @param value The bytes for strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        strPlateNo_ = value;
        onChanged();
        return this;
      }

      private int isHighFlow_ ;
      /**
       * <pre>
       *是否是高流量区 1，高流量区  0，不是高流量区
       * </pre>
       *
       * <code>optional int32 isHighFlow = 11;</code>
       * @return Whether the isHighFlow field is set.
       */
      @java.lang.Override
      public boolean hasIsHighFlow() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *是否是高流量区 1，高流量区  0，不是高流量区
       * </pre>
       *
       * <code>optional int32 isHighFlow = 11;</code>
       * @return The isHighFlow.
       */
      @java.lang.Override
      public int getIsHighFlow() {
        return isHighFlow_;
      }
      /**
       * <pre>
       *是否是高流量区 1，高流量区  0，不是高流量区
       * </pre>
       *
       * <code>optional int32 isHighFlow = 11;</code>
       * @param value The isHighFlow to set.
       * @return This builder for chaining.
       */
      public Builder setIsHighFlow(int value) {
        bitField0_ |= 0x00000400;
        isHighFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否是高流量区 1，高流量区  0，不是高流量区
       * </pre>
       *
       * <code>optional int32 isHighFlow = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsHighFlow() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isHighFlow_ = 0;
        onChanged();
        return this;
      }

      private long ulAbParkingEventId_ ;
      /**
       * <pre>
       *关联的异常停车的事件id
       * </pre>
       *
       * <code>optional uint64 ulAb_parking_eventId = 12;</code>
       * @return Whether the ulAbParkingEventId field is set.
       */
      @java.lang.Override
      public boolean hasUlAbParkingEventId() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *关联的异常停车的事件id
       * </pre>
       *
       * <code>optional uint64 ulAb_parking_eventId = 12;</code>
       * @return The ulAbParkingEventId.
       */
      @java.lang.Override
      public long getUlAbParkingEventId() {
        return ulAbParkingEventId_;
      }
      /**
       * <pre>
       *关联的异常停车的事件id
       * </pre>
       *
       * <code>optional uint64 ulAb_parking_eventId = 12;</code>
       * @param value The ulAbParkingEventId to set.
       * @return This builder for chaining.
       */
      public Builder setUlAbParkingEventId(long value) {
        bitField0_ |= 0x00000800;
        ulAbParkingEventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *关联的异常停车的事件id
       * </pre>
       *
       * <code>optional uint64 ulAb_parking_eventId = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlAbParkingEventId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        ulAbParkingEventId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.TRAFFIC_ACCIDENT_OBS)
    }

    // @@protoc_insertion_point(class_scope:event_debug.TRAFFIC_ACCIDENT_OBS)
    private static final event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS();
    }

    public static event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TRAFFIC_ACCIDENT_OBS>
        PARSER = new com.google.protobuf.AbstractParser<TRAFFIC_ACCIDENT_OBS>() {
      @java.lang.Override
      public TRAFFIC_ACCIDENT_OBS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TRAFFIC_ACCIDENT_OBS(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TRAFFIC_ACCIDENT_OBS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TRAFFIC_ACCIDENT_OBS> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_TRAFFIC_ACCIDENTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    boolean hasFrame();
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    int getFrame();

    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    boolean hasSubframe();
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    int getSubframe();

    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 5;</code>
     * @return Whether the state field is set.
     */
    boolean hasState();
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 5;</code>
     * @return The state.
     */
    int getState();

    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> 
        getStVehicleInfosList();
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getStVehicleInfos(int index);
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    int getStVehicleInfosCount();
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder> 
        getStVehicleInfosOrBuilderList();
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder getStVehicleInfosOrBuilder(
        int index);

    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    boolean hasStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return The strDetectorInfo.
     */
    java.lang.String getStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return The bytes for strDetectorInfo.
     */
    com.google.protobuf.ByteString
        getStrDetectorInfoBytes();

    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return Whether the strExtParam field is set.
     */
    boolean hasStrExtParam();
    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return The strExtParam.
     */
    java.lang.String getStrExtParam();
    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return The bytes for strExtParam.
     */
    com.google.protobuf.ByteString
        getStrExtParamBytes();

    /**
     * <pre>
     *中心点坐标UTM_X 
     * </pre>
     *
     * <code>optional double CenterPostion_x = 9;</code>
     * @return Whether the centerPostionX field is set.
     */
    boolean hasCenterPostionX();
    /**
     * <pre>
     *中心点坐标UTM_X 
     * </pre>
     *
     * <code>optional double CenterPostion_x = 9;</code>
     * @return The centerPostionX.
     */
    double getCenterPostionX();

    /**
     * <pre>
     *中心点坐标UTM_Y
     * </pre>
     *
     * <code>optional double CenterPostion_y = 10;</code>
     * @return Whether the centerPostionY field is set.
     */
    boolean hasCenterPostionY();
    /**
     * <pre>
     *中心点坐标UTM_Y
     * </pre>
     *
     * <code>optional double CenterPostion_y = 10;</code>
     * @return The centerPostionY.
     */
    double getCenterPostionY();

    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 11;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 11;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT}
   */
  public static final class DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)
      DRC_EVENT_DEBUG_TRAFFIC_ACCIDENTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.newBuilder() to construct.
    private DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT() {
      eventype_ = 1;
      stVehicleInfos_ = java.util.Collections.emptyList();
      strDetectorInfo_ = "";
      strExtParam_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              frame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subframe_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventId_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                eventype_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              state_ = input.readUInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                stVehicleInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS>();
                mutable_bitField0_ |= 0x00000020;
              }
              stVehicleInfos_.add(
                  input.readMessage(event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              strDetectorInfo_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              strExtParam_ = bs;
              break;
            }
            case 73: {
              bitField0_ |= 0x00000080;
              centerPostionX_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000100;
              centerPostionY_ = input.readDouble();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          stVehicleInfos_ = java.util.Collections.unmodifiableList(stVehicleInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.Builder.class);
    }

    private int bitField0_;
    public static final int FRAME_FIELD_NUMBER = 1;
    private int frame_;
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    @java.lang.Override
    public boolean hasFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    @java.lang.Override
    public int getFrame() {
      return frame_;
    }

    public static final int SUBFRAME_FIELD_NUMBER = 2;
    private int subframe_;
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    @java.lang.Override
    public boolean hasSubframe() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    @java.lang.Override
    public int getSubframe() {
      return subframe_;
    }

    public static final int EVENTID_FIELD_NUMBER = 3;
    private long eventId_;
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 4;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int STATE_FIELD_NUMBER = 5;
    private int state_;
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 5;</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override
    public boolean hasState() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *事件状态 ulState enum
     * </pre>
     *
     * <code>optional uint32 state = 5;</code>
     * @return The state.
     */
    @java.lang.Override
    public int getState() {
      return state_;
    }

    public static final int STVEHICLEINFOS_FIELD_NUMBER = 6;
    private java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> stVehicleInfos_;
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> getStVehicleInfosList() {
      return stVehicleInfos_;
    }
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder> 
        getStVehicleInfosOrBuilderList() {
      return stVehicleInfos_;
    }
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    @java.lang.Override
    public int getStVehicleInfosCount() {
      return stVehicleInfos_.size();
    }
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getStVehicleInfos(int index) {
      return stVehicleInfos_.get(index);
    }
    /**
     * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder getStVehicleInfosOrBuilder(
        int index) {
      return stVehicleInfos_.get(index);
    }

    public static final int STRDETECTORINFO_FIELD_NUMBER = 7;
    private volatile java.lang.Object strDetectorInfo_;
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    @java.lang.Override
    public boolean hasStrDetectorInfo() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return The strDetectorInfo.
     */
    @java.lang.Override
    public java.lang.String getStrDetectorInfo() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strDetectorInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 7;</code>
     * @return The bytes for strDetectorInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrDetectorInfoBytes() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strDetectorInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STREXTPARAM_FIELD_NUMBER = 8;
    private volatile java.lang.Object strExtParam_;
    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return Whether the strExtParam field is set.
     */
    @java.lang.Override
    public boolean hasStrExtParam() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return The strExtParam.
     */
    @java.lang.Override
    public java.lang.String getStrExtParam() {
      java.lang.Object ref = strExtParam_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strExtParam_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *扩展参数，用于事件应急调试    
     * </pre>
     *
     * <code>optional string strExtParam = 8;</code>
     * @return The bytes for strExtParam.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrExtParamBytes() {
      java.lang.Object ref = strExtParam_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strExtParam_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CENTERPOSTION_X_FIELD_NUMBER = 9;
    private double centerPostionX_;
    /**
     * <pre>
     *中心点坐标UTM_X 
     * </pre>
     *
     * <code>optional double CenterPostion_x = 9;</code>
     * @return Whether the centerPostionX field is set.
     */
    @java.lang.Override
    public boolean hasCenterPostionX() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *中心点坐标UTM_X 
     * </pre>
     *
     * <code>optional double CenterPostion_x = 9;</code>
     * @return The centerPostionX.
     */
    @java.lang.Override
    public double getCenterPostionX() {
      return centerPostionX_;
    }

    public static final int CENTERPOSTION_Y_FIELD_NUMBER = 10;
    private double centerPostionY_;
    /**
     * <pre>
     *中心点坐标UTM_Y
     * </pre>
     *
     * <code>optional double CenterPostion_y = 10;</code>
     * @return Whether the centerPostionY field is set.
     */
    @java.lang.Override
    public boolean hasCenterPostionY() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *中心点坐标UTM_Y
     * </pre>
     *
     * <code>optional double CenterPostion_y = 10;</code>
     * @return The centerPostionY.
     */
    @java.lang.Override
    public double getCenterPostionY() {
      return centerPostionY_;
    }

    public static final int ULDRCID_FIELD_NUMBER = 11;
    private int ulDrcId_;
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 11;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *Drc ID
     * </pre>
     *
     * <code>optional uint32 ulDrcId = 11;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, state_);
      }
      for (int i = 0; i < stVehicleInfos_.size(); i++) {
        output.writeMessage(6, stVehicleInfos_.get(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, strExtParam_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(9, centerPostionX_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(10, centerPostionY_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(11, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, state_);
      }
      for (int i = 0; i < stVehicleInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stVehicleInfos_.get(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, strExtParam_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, centerPostionX_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, centerPostionY_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT) obj;

      if (hasFrame() != other.hasFrame()) return false;
      if (hasFrame()) {
        if (getFrame()
            != other.getFrame()) return false;
      }
      if (hasSubframe() != other.hasSubframe()) return false;
      if (hasSubframe()) {
        if (getSubframe()
            != other.getSubframe()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (hasState() != other.hasState()) return false;
      if (hasState()) {
        if (getState()
            != other.getState()) return false;
      }
      if (!getStVehicleInfosList()
          .equals(other.getStVehicleInfosList())) return false;
      if (hasStrDetectorInfo() != other.hasStrDetectorInfo()) return false;
      if (hasStrDetectorInfo()) {
        if (!getStrDetectorInfo()
            .equals(other.getStrDetectorInfo())) return false;
      }
      if (hasStrExtParam() != other.hasStrExtParam()) return false;
      if (hasStrExtParam()) {
        if (!getStrExtParam()
            .equals(other.getStrExtParam())) return false;
      }
      if (hasCenterPostionX() != other.hasCenterPostionX()) return false;
      if (hasCenterPostionX()) {
        if (java.lang.Double.doubleToLongBits(getCenterPostionX())
            != java.lang.Double.doubleToLongBits(
                other.getCenterPostionX())) return false;
      }
      if (hasCenterPostionY() != other.hasCenterPostionY()) return false;
      if (hasCenterPostionY()) {
        if (java.lang.Double.doubleToLongBits(getCenterPostionY())
            != java.lang.Double.doubleToLongBits(
                other.getCenterPostionY())) return false;
      }
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrame()) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrame();
      }
      if (hasSubframe()) {
        hash = (37 * hash) + SUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getSubframe();
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState();
      }
      if (getStVehicleInfosCount() > 0) {
        hash = (37 * hash) + STVEHICLEINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getStVehicleInfosList().hashCode();
      }
      if (hasStrDetectorInfo()) {
        hash = (37 * hash) + STRDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStrDetectorInfo().hashCode();
      }
      if (hasStrExtParam()) {
        hash = (37 * hash) + STREXTPARAM_FIELD_NUMBER;
        hash = (53 * hash) + getStrExtParam().hashCode();
      }
      if (hasCenterPostionX()) {
        hash = (37 * hash) + CENTERPOSTION_X_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCenterPostionX()));
      }
      if (hasCenterPostionY()) {
        hash = (37 * hash) + CENTERPOSTION_Y_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCenterPostionY()));
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStVehicleInfosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stVehicleInfosBuilder_ == null) {
          stVehicleInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          stVehicleInfosBuilder_.clear();
        }
        strDetectorInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        strExtParam_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        centerPostionX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        centerPostionY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frame_ = frame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.subframe_ = subframe_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventype_ = eventype_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.state_ = state_;
          to_bitField0_ |= 0x00000010;
        }
        if (stVehicleInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            stVehicleInfos_ = java.util.Collections.unmodifiableList(stVehicleInfos_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.stVehicleInfos_ = stVehicleInfos_;
        } else {
          result.stVehicleInfos_ = stVehicleInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.strDetectorInfo_ = strDetectorInfo_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.strExtParam_ = strExtParam_;
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.centerPostionX_ = centerPostionX_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.centerPostionY_ = centerPostionY_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT.getDefaultInstance()) return this;
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasSubframe()) {
          setSubframe(other.getSubframe());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (stVehicleInfosBuilder_ == null) {
          if (!other.stVehicleInfos_.isEmpty()) {
            if (stVehicleInfos_.isEmpty()) {
              stVehicleInfos_ = other.stVehicleInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureStVehicleInfosIsMutable();
              stVehicleInfos_.addAll(other.stVehicleInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.stVehicleInfos_.isEmpty()) {
            if (stVehicleInfosBuilder_.isEmpty()) {
              stVehicleInfosBuilder_.dispose();
              stVehicleInfosBuilder_ = null;
              stVehicleInfos_ = other.stVehicleInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
              stVehicleInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStVehicleInfosFieldBuilder() : null;
            } else {
              stVehicleInfosBuilder_.addAllMessages(other.stVehicleInfos_);
            }
          }
        }
        if (other.hasStrDetectorInfo()) {
          bitField0_ |= 0x00000040;
          strDetectorInfo_ = other.strDetectorInfo_;
          onChanged();
        }
        if (other.hasStrExtParam()) {
          bitField0_ |= 0x00000080;
          strExtParam_ = other.strExtParam_;
          onChanged();
        }
        if (other.hasCenterPostionX()) {
          setCenterPostionX(other.getCenterPostionX());
        }
        if (other.hasCenterPostionY()) {
          setCenterPostionY(other.getCenterPostionY());
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frame_ ;
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return Whether the frame field is set.
       */
      @java.lang.Override
      public boolean hasFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return The frame.
       */
      @java.lang.Override
      public int getFrame() {
        return frame_;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @param value The frame to set.
       * @return This builder for chaining.
       */
      public Builder setFrame(int value) {
        bitField0_ |= 0x00000001;
        frame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frame_ = 0;
        onChanged();
        return this;
      }

      private int subframe_ ;
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return Whether the subframe field is set.
       */
      @java.lang.Override
      public boolean hasSubframe() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return The subframe.
       */
      @java.lang.Override
      public int getSubframe() {
        return subframe_;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @param value The subframe to set.
       * @return This builder for chaining.
       */
      public Builder setSubframe(int value) {
        bitField0_ |= 0x00000002;
        subframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubframe() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subframe_ = 0;
        onChanged();
        return this;
      }

      private long eventId_ ;
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000004;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 5;</code>
       * @return Whether the state field is set.
       */
      @java.lang.Override
      public boolean hasState() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 5;</code>
       * @return The state.
       */
      @java.lang.Override
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 5;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000010;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件状态 ulState enum
       * </pre>
       *
       * <code>optional uint32 state = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> stVehicleInfos_ =
        java.util.Collections.emptyList();
      private void ensureStVehicleInfosIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          stVehicleInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS>(stVehicleInfos_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder> stVehicleInfosBuilder_;

      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> getStVehicleInfosList() {
        if (stVehicleInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stVehicleInfos_);
        } else {
          return stVehicleInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public int getStVehicleInfosCount() {
        if (stVehicleInfosBuilder_ == null) {
          return stVehicleInfos_.size();
        } else {
          return stVehicleInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS getStVehicleInfos(int index) {
        if (stVehicleInfosBuilder_ == null) {
          return stVehicleInfos_.get(index);
        } else {
          return stVehicleInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder setStVehicleInfos(
          int index, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS value) {
        if (stVehicleInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.set(index, value);
          onChanged();
        } else {
          stVehicleInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder setStVehicleInfos(
          int index, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder builderForValue) {
        if (stVehicleInfosBuilder_ == null) {
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          stVehicleInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder addStVehicleInfos(event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS value) {
        if (stVehicleInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.add(value);
          onChanged();
        } else {
          stVehicleInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder addStVehicleInfos(
          int index, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS value) {
        if (stVehicleInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.add(index, value);
          onChanged();
        } else {
          stVehicleInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder addStVehicleInfos(
          event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder builderForValue) {
        if (stVehicleInfosBuilder_ == null) {
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.add(builderForValue.build());
          onChanged();
        } else {
          stVehicleInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder addStVehicleInfos(
          int index, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder builderForValue) {
        if (stVehicleInfosBuilder_ == null) {
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          stVehicleInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder addAllStVehicleInfos(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS> values) {
        if (stVehicleInfosBuilder_ == null) {
          ensureStVehicleInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stVehicleInfos_);
          onChanged();
        } else {
          stVehicleInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder clearStVehicleInfos() {
        if (stVehicleInfosBuilder_ == null) {
          stVehicleInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          stVehicleInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public Builder removeStVehicleInfos(int index) {
        if (stVehicleInfosBuilder_ == null) {
          ensureStVehicleInfosIsMutable();
          stVehicleInfos_.remove(index);
          onChanged();
        } else {
          stVehicleInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder getStVehicleInfosBuilder(
          int index) {
        return getStVehicleInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder getStVehicleInfosOrBuilder(
          int index) {
        if (stVehicleInfosBuilder_ == null) {
          return stVehicleInfos_.get(index);  } else {
          return stVehicleInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder> 
           getStVehicleInfosOrBuilderList() {
        if (stVehicleInfosBuilder_ != null) {
          return stVehicleInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stVehicleInfos_);
        }
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder addStVehicleInfosBuilder() {
        return getStVehicleInfosFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.getDefaultInstance());
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder addStVehicleInfosBuilder(
          int index) {
        return getStVehicleInfosFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.getDefaultInstance());
      }
      /**
       * <code>repeated .event_debug.TRAFFIC_ACCIDENT_OBS stVehicleInfos = 6;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder> 
           getStVehicleInfosBuilderList() {
        return getStVehicleInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder> 
          getStVehicleInfosFieldBuilder() {
        if (stVehicleInfosBuilder_ == null) {
          stVehicleInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBS.Builder, event_debug.DrcEventDebug.TRAFFIC_ACCIDENT_OBSOrBuilder>(
                  stVehicleInfos_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          stVehicleInfos_ = null;
        }
        return stVehicleInfosBuilder_;
      }

      private java.lang.Object strDetectorInfo_ = "";
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @return Whether the strDetectorInfo field is set.
       */
      public boolean hasStrDetectorInfo() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @return The strDetectorInfo.
       */
      public java.lang.String getStrDetectorInfo() {
        java.lang.Object ref = strDetectorInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strDetectorInfo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @return The bytes for strDetectorInfo.
       */
      public com.google.protobuf.ByteString
          getStrDetectorInfoBytes() {
        java.lang.Object ref = strDetectorInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strDetectorInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @param value The strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrDetectorInfo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        strDetectorInfo_ = getDefaultInstance().getStrDetectorInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 7;</code>
       * @param value The bytes for strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object strExtParam_ = "";
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @return Whether the strExtParam field is set.
       */
      public boolean hasStrExtParam() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @return The strExtParam.
       */
      public java.lang.String getStrExtParam() {
        java.lang.Object ref = strExtParam_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strExtParam_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @return The bytes for strExtParam.
       */
      public com.google.protobuf.ByteString
          getStrExtParamBytes() {
        java.lang.Object ref = strExtParam_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strExtParam_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @param value The strExtParam to set.
       * @return This builder for chaining.
       */
      public Builder setStrExtParam(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        strExtParam_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrExtParam() {
        bitField0_ = (bitField0_ & ~0x00000080);
        strExtParam_ = getDefaultInstance().getStrExtParam();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展参数，用于事件应急调试    
       * </pre>
       *
       * <code>optional string strExtParam = 8;</code>
       * @param value The bytes for strExtParam to set.
       * @return This builder for chaining.
       */
      public Builder setStrExtParamBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        strExtParam_ = value;
        onChanged();
        return this;
      }

      private double centerPostionX_ ;
      /**
       * <pre>
       *中心点坐标UTM_X 
       * </pre>
       *
       * <code>optional double CenterPostion_x = 9;</code>
       * @return Whether the centerPostionX field is set.
       */
      @java.lang.Override
      public boolean hasCenterPostionX() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *中心点坐标UTM_X 
       * </pre>
       *
       * <code>optional double CenterPostion_x = 9;</code>
       * @return The centerPostionX.
       */
      @java.lang.Override
      public double getCenterPostionX() {
        return centerPostionX_;
      }
      /**
       * <pre>
       *中心点坐标UTM_X 
       * </pre>
       *
       * <code>optional double CenterPostion_x = 9;</code>
       * @param value The centerPostionX to set.
       * @return This builder for chaining.
       */
      public Builder setCenterPostionX(double value) {
        bitField0_ |= 0x00000100;
        centerPostionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心点坐标UTM_X 
       * </pre>
       *
       * <code>optional double CenterPostion_x = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterPostionX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        centerPostionX_ = 0D;
        onChanged();
        return this;
      }

      private double centerPostionY_ ;
      /**
       * <pre>
       *中心点坐标UTM_Y
       * </pre>
       *
       * <code>optional double CenterPostion_y = 10;</code>
       * @return Whether the centerPostionY field is set.
       */
      @java.lang.Override
      public boolean hasCenterPostionY() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *中心点坐标UTM_Y
       * </pre>
       *
       * <code>optional double CenterPostion_y = 10;</code>
       * @return The centerPostionY.
       */
      @java.lang.Override
      public double getCenterPostionY() {
        return centerPostionY_;
      }
      /**
       * <pre>
       *中心点坐标UTM_Y
       * </pre>
       *
       * <code>optional double CenterPostion_y = 10;</code>
       * @param value The centerPostionY to set.
       * @return This builder for chaining.
       */
      public Builder setCenterPostionY(double value) {
        bitField0_ |= 0x00000200;
        centerPostionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心点坐标UTM_Y
       * </pre>
       *
       * <code>optional double CenterPostion_y = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterPostionY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        centerPostionY_ = 0D;
        onChanged();
        return this;
      }

      private int ulDrcId_ ;
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 11;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 11;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 11;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00000400;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Drc ID
       * </pre>
       *
       * <code>optional uint32 ulDrcId = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NoConesEventInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.NoConesEventInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return A list containing the mergeEventId.
     */
    java.util.List<java.lang.Long> getMergeEventIdList();
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return The count of mergeEventId.
     */
    int getMergeEventIdCount();
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @param index The index of the element to return.
     * @return The mergeEventId at the given index.
     */
    long getMergeEventId(int index);

    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return A list containing the slDetectorId.
     */
    java.util.List<java.lang.Integer> getSlDetectorIdList();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return The count of slDetectorId.
     */
    int getSlDetectorIdCount();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @param index The index of the element to return.
     * @return The slDetectorId at the given index.
     */
    int getSlDetectorId(int index);

    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    boolean hasDbUtmx();
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    double getDbUtmx();

    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    boolean hasDbUtmY();
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    double getDbUtmY();

    /**
     * <pre>
     *低速车数量
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleSize = 7;</code>
     * @return Whether the ulLowVehicleSize field is set.
     */
    boolean hasUlLowVehicleSize();
    /**
     * <pre>
     *低速车数量
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleSize = 7;</code>
     * @return The ulLowVehicleSize.
     */
    int getUlLowVehicleSize();

    /**
     * <pre>
     *低速车数量阈值
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
     * @return Whether the ulLowVehicleThreshold field is set.
     */
    boolean hasUlLowVehicleThreshold();
    /**
     * <pre>
     *低速车数量阈值
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
     * @return The ulLowVehicleThreshold.
     */
    int getUlLowVehicleThreshold();

    /**
     * <pre>
     *事件解除计数器
     * </pre>
     *
     * <code>optional uint32 ulRelieveCount = 9;</code>
     * @return Whether the ulRelieveCount field is set.
     */
    boolean hasUlRelieveCount();
    /**
     * <pre>
     *事件解除计数器
     * </pre>
     *
     * <code>optional uint32 ulRelieveCount = 9;</code>
     * @return The ulRelieveCount.
     */
    int getUlRelieveCount();
  }
  /**
   * Protobuf type {@code event_debug.NoConesEventInfo}
   */
  public static final class NoConesEventInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.NoConesEventInfo)
      NoConesEventInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NoConesEventInfo.newBuilder() to construct.
    private NoConesEventInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NoConesEventInfo() {
      eventype_ = 1;
      mergeEventId_ = emptyLongList();
      slDetectorId_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NoConesEventInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NoConesEventInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                eventype_ = rawValue;
              }
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mergeEventId_ = newLongList();
                mutable_bitField0_ |= 0x00000004;
              }
              mergeEventId_.addLong(input.readUInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                mergeEventId_ = newLongList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                mergeEventId_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                slDetectorId_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              slDetectorId_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                slDetectorId_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                slDetectorId_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 41: {
              bitField0_ |= 0x00000004;
              dbUtmx_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000008;
              dbUtmY_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              ulLowVehicleSize_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              ulLowVehicleThreshold_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              ulRelieveCount_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          mergeEventId_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          slDetectorId_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesEventInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesEventInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.NoConesEventInfo.class, event_debug.DrcEventDebug.NoConesEventInfo.Builder.class);
    }

    private int bitField0_;
    public static final int EVENTID_FIELD_NUMBER = 1;
    private long eventId_;
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 2;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int MERGEEVENTID_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.LongList mergeEventId_;
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return A list containing the mergeEventId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMergeEventIdList() {
      return mergeEventId_;
    }
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return The count of mergeEventId.
     */
    public int getMergeEventIdCount() {
      return mergeEventId_.size();
    }
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @param index The index of the element to return.
     * @return The mergeEventId at the given index.
     */
    public long getMergeEventId(int index) {
      return mergeEventId_.getLong(index);
    }

    public static final int SLDETECTORID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList slDetectorId_;
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return A list containing the slDetectorId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSlDetectorIdList() {
      return slDetectorId_;
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return The count of slDetectorId.
     */
    public int getSlDetectorIdCount() {
      return slDetectorId_.size();
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated int32 slDetectorId = 4;</code>
     * @param index The index of the element to return.
     * @return The slDetectorId at the given index.
     */
    public int getSlDetectorId(int index) {
      return slDetectorId_.getInt(index);
    }

    public static final int DBUTMX_FIELD_NUMBER = 5;
    private double dbUtmx_;
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmx() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    @java.lang.Override
    public double getDbUtmx() {
      return dbUtmx_;
    }

    public static final int DBUTMY_FIELD_NUMBER = 6;
    private double dbUtmY_;
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmY() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    @java.lang.Override
    public double getDbUtmY() {
      return dbUtmY_;
    }

    public static final int ULLOWVEHICLESIZE_FIELD_NUMBER = 7;
    private int ulLowVehicleSize_;
    /**
     * <pre>
     *低速车数量
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleSize = 7;</code>
     * @return Whether the ulLowVehicleSize field is set.
     */
    @java.lang.Override
    public boolean hasUlLowVehicleSize() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *低速车数量
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleSize = 7;</code>
     * @return The ulLowVehicleSize.
     */
    @java.lang.Override
    public int getUlLowVehicleSize() {
      return ulLowVehicleSize_;
    }

    public static final int ULLOWVEHICLETHRESHOLD_FIELD_NUMBER = 8;
    private int ulLowVehicleThreshold_;
    /**
     * <pre>
     *低速车数量阈值
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
     * @return Whether the ulLowVehicleThreshold field is set.
     */
    @java.lang.Override
    public boolean hasUlLowVehicleThreshold() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *低速车数量阈值
     * </pre>
     *
     * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
     * @return The ulLowVehicleThreshold.
     */
    @java.lang.Override
    public int getUlLowVehicleThreshold() {
      return ulLowVehicleThreshold_;
    }

    public static final int ULRELIEVECOUNT_FIELD_NUMBER = 9;
    private int ulRelieveCount_;
    /**
     * <pre>
     *事件解除计数器
     * </pre>
     *
     * <code>optional uint32 ulRelieveCount = 9;</code>
     * @return Whether the ulRelieveCount field is set.
     */
    @java.lang.Override
    public boolean hasUlRelieveCount() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *事件解除计数器
     * </pre>
     *
     * <code>optional uint32 ulRelieveCount = 9;</code>
     * @return The ulRelieveCount.
     */
    @java.lang.Override
    public int getUlRelieveCount() {
      return ulRelieveCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, eventype_);
      }
      for (int i = 0; i < mergeEventId_.size(); i++) {
        output.writeUInt64(3, mergeEventId_.getLong(i));
      }
      for (int i = 0; i < slDetectorId_.size(); i++) {
        output.writeInt32(4, slDetectorId_.getInt(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(6, dbUtmY_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(7, ulLowVehicleSize_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(8, ulLowVehicleThreshold_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(9, ulRelieveCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, eventype_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mergeEventId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(mergeEventId_.getLong(i));
        }
        size += dataSize;
        size += 1 * getMergeEventIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < slDetectorId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(slDetectorId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSlDetectorIdList().size();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, dbUtmY_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, ulLowVehicleSize_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, ulLowVehicleThreshold_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, ulRelieveCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.NoConesEventInfo)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.NoConesEventInfo other = (event_debug.DrcEventDebug.NoConesEventInfo) obj;

      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (!getMergeEventIdList()
          .equals(other.getMergeEventIdList())) return false;
      if (!getSlDetectorIdList()
          .equals(other.getSlDetectorIdList())) return false;
      if (hasDbUtmx() != other.hasDbUtmx()) return false;
      if (hasDbUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmx())) return false;
      }
      if (hasDbUtmY() != other.hasDbUtmY()) return false;
      if (hasDbUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmY())) return false;
      }
      if (hasUlLowVehicleSize() != other.hasUlLowVehicleSize()) return false;
      if (hasUlLowVehicleSize()) {
        if (getUlLowVehicleSize()
            != other.getUlLowVehicleSize()) return false;
      }
      if (hasUlLowVehicleThreshold() != other.hasUlLowVehicleThreshold()) return false;
      if (hasUlLowVehicleThreshold()) {
        if (getUlLowVehicleThreshold()
            != other.getUlLowVehicleThreshold()) return false;
      }
      if (hasUlRelieveCount() != other.hasUlRelieveCount()) return false;
      if (hasUlRelieveCount()) {
        if (getUlRelieveCount()
            != other.getUlRelieveCount()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (getMergeEventIdCount() > 0) {
        hash = (37 * hash) + MERGEEVENTID_FIELD_NUMBER;
        hash = (53 * hash) + getMergeEventIdList().hashCode();
      }
      if (getSlDetectorIdCount() > 0) {
        hash = (37 * hash) + SLDETECTORID_FIELD_NUMBER;
        hash = (53 * hash) + getSlDetectorIdList().hashCode();
      }
      if (hasDbUtmx()) {
        hash = (37 * hash) + DBUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmx()));
      }
      if (hasDbUtmY()) {
        hash = (37 * hash) + DBUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmY()));
      }
      if (hasUlLowVehicleSize()) {
        hash = (37 * hash) + ULLOWVEHICLESIZE_FIELD_NUMBER;
        hash = (53 * hash) + getUlLowVehicleSize();
      }
      if (hasUlLowVehicleThreshold()) {
        hash = (37 * hash) + ULLOWVEHICLETHRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getUlLowVehicleThreshold();
      }
      if (hasUlRelieveCount()) {
        hash = (37 * hash) + ULRELIEVECOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getUlRelieveCount();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesEventInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.NoConesEventInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.NoConesEventInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.NoConesEventInfo)
        event_debug.DrcEventDebug.NoConesEventInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesEventInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesEventInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.NoConesEventInfo.class, event_debug.DrcEventDebug.NoConesEventInfo.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.NoConesEventInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        mergeEventId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        slDetectorId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        dbUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        ulLowVehicleSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        ulLowVehicleThreshold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        ulRelieveCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesEventInfo_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesEventInfo getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.NoConesEventInfo.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesEventInfo build() {
        event_debug.DrcEventDebug.NoConesEventInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesEventInfo buildPartial() {
        event_debug.DrcEventDebug.NoConesEventInfo result = new event_debug.DrcEventDebug.NoConesEventInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventype_ = eventype_;
        if (((bitField0_ & 0x00000004) != 0)) {
          mergeEventId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.mergeEventId_ = mergeEventId_;
        if (((bitField0_ & 0x00000008) != 0)) {
          slDetectorId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.slDetectorId_ = slDetectorId_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dbUtmx_ = dbUtmx_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.dbUtmY_ = dbUtmY_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ulLowVehicleSize_ = ulLowVehicleSize_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.ulLowVehicleThreshold_ = ulLowVehicleThreshold_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.ulRelieveCount_ = ulRelieveCount_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.NoConesEventInfo) {
          return mergeFrom((event_debug.DrcEventDebug.NoConesEventInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.NoConesEventInfo other) {
        if (other == event_debug.DrcEventDebug.NoConesEventInfo.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (!other.mergeEventId_.isEmpty()) {
          if (mergeEventId_.isEmpty()) {
            mergeEventId_ = other.mergeEventId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMergeEventIdIsMutable();
            mergeEventId_.addAll(other.mergeEventId_);
          }
          onChanged();
        }
        if (!other.slDetectorId_.isEmpty()) {
          if (slDetectorId_.isEmpty()) {
            slDetectorId_ = other.slDetectorId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSlDetectorIdIsMutable();
            slDetectorId_.addAll(other.slDetectorId_);
          }
          onChanged();
        }
        if (other.hasDbUtmx()) {
          setDbUtmx(other.getDbUtmx());
        }
        if (other.hasDbUtmY()) {
          setDbUtmY(other.getDbUtmY());
        }
        if (other.hasUlLowVehicleSize()) {
          setUlLowVehicleSize(other.getUlLowVehicleSize());
        }
        if (other.hasUlLowVehicleThreshold()) {
          setUlLowVehicleThreshold(other.getUlLowVehicleThreshold());
        }
        if (other.hasUlRelieveCount()) {
          setUlRelieveCount(other.getUlRelieveCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.NoConesEventInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.NoConesEventInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long eventId_ ;
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList mergeEventId_ = emptyLongList();
      private void ensureMergeEventIdIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          mergeEventId_ = mutableCopy(mergeEventId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return A list containing the mergeEventId.
       */
      public java.util.List<java.lang.Long>
          getMergeEventIdList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(mergeEventId_) : mergeEventId_;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return The count of mergeEventId.
       */
      public int getMergeEventIdCount() {
        return mergeEventId_.size();
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param index The index of the element to return.
       * @return The mergeEventId at the given index.
       */
      public long getMergeEventId(int index) {
        return mergeEventId_.getLong(index);
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param index The index to set the value at.
       * @param value The mergeEventId to set.
       * @return This builder for chaining.
       */
      public Builder setMergeEventId(
          int index, long value) {
        ensureMergeEventIdIsMutable();
        mergeEventId_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param value The mergeEventId to add.
       * @return This builder for chaining.
       */
      public Builder addMergeEventId(long value) {
        ensureMergeEventIdIsMutable();
        mergeEventId_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param values The mergeEventId to add.
       * @return This builder for chaining.
       */
      public Builder addAllMergeEventId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMergeEventIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mergeEventId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeEventId() {
        mergeEventId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList slDetectorId_ = emptyIntList();
      private void ensureSlDetectorIdIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          slDetectorId_ = mutableCopy(slDetectorId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return A list containing the slDetectorId.
       */
      public java.util.List<java.lang.Integer>
          getSlDetectorIdList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(slDetectorId_) : slDetectorId_;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return The count of slDetectorId.
       */
      public int getSlDetectorIdCount() {
        return slDetectorId_.size();
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param index The index of the element to return.
       * @return The slDetectorId at the given index.
       */
      public int getSlDetectorId(int index) {
        return slDetectorId_.getInt(index);
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param index The index to set the value at.
       * @param value The slDetectorId to set.
       * @return This builder for chaining.
       */
      public Builder setSlDetectorId(
          int index, int value) {
        ensureSlDetectorIdIsMutable();
        slDetectorId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param value The slDetectorId to add.
       * @return This builder for chaining.
       */
      public Builder addSlDetectorId(int value) {
        ensureSlDetectorIdIsMutable();
        slDetectorId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param values The slDetectorId to add.
       * @return This builder for chaining.
       */
      public Builder addAllSlDetectorId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSlDetectorIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, slDetectorId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlDetectorId() {
        slDetectorId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private double dbUtmx_ ;
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return Whether the dbUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmx() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return The dbUtmx.
       */
      @java.lang.Override
      public double getDbUtmx() {
        return dbUtmx_;
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @param value The dbUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmx(double value) {
        bitField0_ |= 0x00000010;
        dbUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbUtmY_ ;
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return Whether the dbUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmY() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return The dbUtmY.
       */
      @java.lang.Override
      public double getDbUtmY() {
        return dbUtmY_;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @param value The dbUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmY(double value) {
        bitField0_ |= 0x00000020;
        dbUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dbUtmY_ = 0D;
        onChanged();
        return this;
      }

      private int ulLowVehicleSize_ ;
      /**
       * <pre>
       *低速车数量
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleSize = 7;</code>
       * @return Whether the ulLowVehicleSize field is set.
       */
      @java.lang.Override
      public boolean hasUlLowVehicleSize() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *低速车数量
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleSize = 7;</code>
       * @return The ulLowVehicleSize.
       */
      @java.lang.Override
      public int getUlLowVehicleSize() {
        return ulLowVehicleSize_;
      }
      /**
       * <pre>
       *低速车数量
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleSize = 7;</code>
       * @param value The ulLowVehicleSize to set.
       * @return This builder for chaining.
       */
      public Builder setUlLowVehicleSize(int value) {
        bitField0_ |= 0x00000040;
        ulLowVehicleSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *低速车数量
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleSize = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlLowVehicleSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ulLowVehicleSize_ = 0;
        onChanged();
        return this;
      }

      private int ulLowVehicleThreshold_ ;
      /**
       * <pre>
       *低速车数量阈值
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
       * @return Whether the ulLowVehicleThreshold field is set.
       */
      @java.lang.Override
      public boolean hasUlLowVehicleThreshold() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *低速车数量阈值
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
       * @return The ulLowVehicleThreshold.
       */
      @java.lang.Override
      public int getUlLowVehicleThreshold() {
        return ulLowVehicleThreshold_;
      }
      /**
       * <pre>
       *低速车数量阈值
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
       * @param value The ulLowVehicleThreshold to set.
       * @return This builder for chaining.
       */
      public Builder setUlLowVehicleThreshold(int value) {
        bitField0_ |= 0x00000080;
        ulLowVehicleThreshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *低速车数量阈值
       * </pre>
       *
       * <code>optional uint32 ulLowVehicleThreshold = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlLowVehicleThreshold() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ulLowVehicleThreshold_ = 0;
        onChanged();
        return this;
      }

      private int ulRelieveCount_ ;
      /**
       * <pre>
       *事件解除计数器
       * </pre>
       *
       * <code>optional uint32 ulRelieveCount = 9;</code>
       * @return Whether the ulRelieveCount field is set.
       */
      @java.lang.Override
      public boolean hasUlRelieveCount() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *事件解除计数器
       * </pre>
       *
       * <code>optional uint32 ulRelieveCount = 9;</code>
       * @return The ulRelieveCount.
       */
      @java.lang.Override
      public int getUlRelieveCount() {
        return ulRelieveCount_;
      }
      /**
       * <pre>
       *事件解除计数器
       * </pre>
       *
       * <code>optional uint32 ulRelieveCount = 9;</code>
       * @param value The ulRelieveCount to set.
       * @return This builder for chaining.
       */
      public Builder setUlRelieveCount(int value) {
        bitField0_ |= 0x00000100;
        ulRelieveCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件解除计数器
       * </pre>
       *
       * <code>optional uint32 ulRelieveCount = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlRelieveCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ulRelieveCount_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.NoConesEventInfo)
    }

    // @@protoc_insertion_point(class_scope:event_debug.NoConesEventInfo)
    private static final event_debug.DrcEventDebug.NoConesEventInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.NoConesEventInfo();
    }

    public static event_debug.DrcEventDebug.NoConesEventInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NoConesEventInfo>
        PARSER = new com.google.protobuf.AbstractParser<NoConesEventInfo>() {
      @java.lang.Override
      public NoConesEventInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NoConesEventInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NoConesEventInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NoConesEventInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesEventInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NoConesAdjDetectorInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.NoConesAdjDetectorInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 slDetectorId = 1;</code>
     * @return Whether the slDetectorId field is set.
     */
    boolean hasSlDetectorId();
    /**
     * <code>optional int32 slDetectorId = 1;</code>
     * @return The slDetectorId.
     */
    int getSlDetectorId();

    /**
     * <code>optional double dbCoeff = 2;</code>
     * @return Whether the dbCoeff field is set.
     */
    boolean hasDbCoeff();
    /**
     * <code>optional double dbCoeff = 2;</code>
     * @return The dbCoeff.
     */
    double getDbCoeff();
  }
  /**
   * Protobuf type {@code event_debug.NoConesAdjDetectorInfo}
   */
  public static final class NoConesAdjDetectorInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.NoConesAdjDetectorInfo)
      NoConesAdjDetectorInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NoConesAdjDetectorInfo.newBuilder() to construct.
    private NoConesAdjDetectorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NoConesAdjDetectorInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NoConesAdjDetectorInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NoConesAdjDetectorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              slDetectorId_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              dbCoeff_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesAdjDetectorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesAdjDetectorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.NoConesAdjDetectorInfo.class, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SLDETECTORID_FIELD_NUMBER = 1;
    private int slDetectorId_;
    /**
     * <code>optional int32 slDetectorId = 1;</code>
     * @return Whether the slDetectorId field is set.
     */
    @java.lang.Override
    public boolean hasSlDetectorId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 slDetectorId = 1;</code>
     * @return The slDetectorId.
     */
    @java.lang.Override
    public int getSlDetectorId() {
      return slDetectorId_;
    }

    public static final int DBCOEFF_FIELD_NUMBER = 2;
    private double dbCoeff_;
    /**
     * <code>optional double dbCoeff = 2;</code>
     * @return Whether the dbCoeff field is set.
     */
    @java.lang.Override
    public boolean hasDbCoeff() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double dbCoeff = 2;</code>
     * @return The dbCoeff.
     */
    @java.lang.Override
    public double getDbCoeff() {
      return dbCoeff_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, slDetectorId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, dbCoeff_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, slDetectorId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, dbCoeff_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.NoConesAdjDetectorInfo)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.NoConesAdjDetectorInfo other = (event_debug.DrcEventDebug.NoConesAdjDetectorInfo) obj;

      if (hasSlDetectorId() != other.hasSlDetectorId()) return false;
      if (hasSlDetectorId()) {
        if (getSlDetectorId()
            != other.getSlDetectorId()) return false;
      }
      if (hasDbCoeff() != other.hasDbCoeff()) return false;
      if (hasDbCoeff()) {
        if (java.lang.Double.doubleToLongBits(getDbCoeff())
            != java.lang.Double.doubleToLongBits(
                other.getDbCoeff())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSlDetectorId()) {
        hash = (37 * hash) + SLDETECTORID_FIELD_NUMBER;
        hash = (53 * hash) + getSlDetectorId();
      }
      if (hasDbCoeff()) {
        hash = (37 * hash) + DBCOEFF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbCoeff()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.NoConesAdjDetectorInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.NoConesAdjDetectorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.NoConesAdjDetectorInfo)
        event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesAdjDetectorInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesAdjDetectorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.NoConesAdjDetectorInfo.class, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.NoConesAdjDetectorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        slDetectorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dbCoeff_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesAdjDetectorInfo_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.NoConesAdjDetectorInfo.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo build() {
        event_debug.DrcEventDebug.NoConesAdjDetectorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo buildPartial() {
        event_debug.DrcEventDebug.NoConesAdjDetectorInfo result = new event_debug.DrcEventDebug.NoConesAdjDetectorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.slDetectorId_ = slDetectorId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.dbCoeff_ = dbCoeff_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.NoConesAdjDetectorInfo) {
          return mergeFrom((event_debug.DrcEventDebug.NoConesAdjDetectorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.NoConesAdjDetectorInfo other) {
        if (other == event_debug.DrcEventDebug.NoConesAdjDetectorInfo.getDefaultInstance()) return this;
        if (other.hasSlDetectorId()) {
          setSlDetectorId(other.getSlDetectorId());
        }
        if (other.hasDbCoeff()) {
          setDbCoeff(other.getDbCoeff());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.NoConesAdjDetectorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.NoConesAdjDetectorInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int slDetectorId_ ;
      /**
       * <code>optional int32 slDetectorId = 1;</code>
       * @return Whether the slDetectorId field is set.
       */
      @java.lang.Override
      public boolean hasSlDetectorId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 slDetectorId = 1;</code>
       * @return The slDetectorId.
       */
      @java.lang.Override
      public int getSlDetectorId() {
        return slDetectorId_;
      }
      /**
       * <code>optional int32 slDetectorId = 1;</code>
       * @param value The slDetectorId to set.
       * @return This builder for chaining.
       */
      public Builder setSlDetectorId(int value) {
        bitField0_ |= 0x00000001;
        slDetectorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slDetectorId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlDetectorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slDetectorId_ = 0;
        onChanged();
        return this;
      }

      private double dbCoeff_ ;
      /**
       * <code>optional double dbCoeff = 2;</code>
       * @return Whether the dbCoeff field is set.
       */
      @java.lang.Override
      public boolean hasDbCoeff() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double dbCoeff = 2;</code>
       * @return The dbCoeff.
       */
      @java.lang.Override
      public double getDbCoeff() {
        return dbCoeff_;
      }
      /**
       * <code>optional double dbCoeff = 2;</code>
       * @param value The dbCoeff to set.
       * @return This builder for chaining.
       */
      public Builder setDbCoeff(double value) {
        bitField0_ |= 0x00000002;
        dbCoeff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbCoeff = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbCoeff() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dbCoeff_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.NoConesAdjDetectorInfo)
    }

    // @@protoc_insertion_point(class_scope:event_debug.NoConesAdjDetectorInfo)
    private static final event_debug.DrcEventDebug.NoConesAdjDetectorInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.NoConesAdjDetectorInfo();
    }

    public static event_debug.DrcEventDebug.NoConesAdjDetectorInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NoConesAdjDetectorInfo>
        PARSER = new com.google.protobuf.AbstractParser<NoConesAdjDetectorInfo>() {
      @java.lang.Override
      public NoConesAdjDetectorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NoConesAdjDetectorInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NoConesAdjDetectorInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NoConesAdjDetectorInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesAdjDetectorInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NoConesDetectorInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.NoConesDetectorInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return Whether the slId field is set.
     */
    boolean hasSlId();
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return The slId.
     */
    int getSlId();

    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return Whether the slState field is set.
     */
    boolean hasSlState();
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return The slState.
     */
    int getSlState();

    /**
     * <pre>
     *本周期到车数量
     * </pre>
     *
     * <code>optional uint32 ulVehiclesOfReach = 3;</code>
     * @return Whether the ulVehiclesOfReach field is set.
     */
    boolean hasUlVehiclesOfReach();
    /**
     * <pre>
     *本周期到车数量
     * </pre>
     *
     * <code>optional uint32 ulVehiclesOfReach = 3;</code>
     * @return The ulVehiclesOfReach.
     */
    int getUlVehiclesOfReach();

    /**
     * <pre>
     *历史到车数量
     * </pre>
     *
     * <code>optional uint32 ulHistoryVehicles = 4;</code>
     * @return Whether the ulHistoryVehicles field is set.
     */
    boolean hasUlHistoryVehicles();
    /**
     * <pre>
     *历史到车数量
     * </pre>
     *
     * <code>optional uint32 ulHistoryVehicles = 4;</code>
     * @return The ulHistoryVehicles.
     */
    int getUlHistoryVehicles();

    /**
     * <pre>
     *未到车的周期数
     * </pre>
     *
     * <code>optional uint32 ulCycleOfNonReach = 5;</code>
     * @return Whether the ulCycleOfNonReach field is set.
     */
    boolean hasUlCycleOfNonReach();
    /**
     * <pre>
     *未到车的周期数
     * </pre>
     *
     * <code>optional uint32 ulCycleOfNonReach = 5;</code>
     * @return The ulCycleOfNonReach.
     */
    int getUlCycleOfNonReach();

    /**
     * <pre>
     *平均DT
     * </pre>
     *
     * <code>optional uint32 ulMeanDt = 6;</code>
     * @return Whether the ulMeanDt field is set.
     */
    boolean hasUlMeanDt();
    /**
     * <pre>
     *平均DT
     * </pre>
     *
     * <code>optional uint32 ulMeanDt = 6;</code>
     * @return The ulMeanDt.
     */
    int getUlMeanDt();

    /**
     * <pre>
     *最大DT
     * </pre>
     *
     * <code>optional uint32 ulMaxDt = 7;</code>
     * @return Whether the ulMaxDt field is set.
     */
    boolean hasUlMaxDt();
    /**
     * <pre>
     *最大DT
     * </pre>
     *
     * <code>optional uint32 ulMaxDt = 7;</code>
     * @return The ulMaxDt.
     */
    int getUlMaxDt();

    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo> 
        getStAdjInfosList();
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    event_debug.DrcEventDebug.NoConesAdjDetectorInfo getStAdjInfos(int index);
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    int getStAdjInfosCount();
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder> 
        getStAdjInfosOrBuilderList();
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder getStAdjInfosOrBuilder(
        int index);

    /**
     * <pre>
     *计算出的概率
     * </pre>
     *
     * <code>optional double dbP = 9;</code>
     * @return Whether the dbP field is set.
     */
    boolean hasDbP();
    /**
     * <pre>
     *计算出的概率
     * </pre>
     *
     * <code>optional double dbP = 9;</code>
     * @return The dbP.
     */
    double getDbP();

    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbM = 10;</code>
     * @return Whether the dbM field is set.
     */
    boolean hasDbM();
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbM = 10;</code>
     * @return The dbM.
     */
    double getDbM();

    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbS2 = 11;</code>
     * @return Whether the dbS2 field is set.
     */
    boolean hasDbS2();
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbS2 = 11;</code>
     * @return The dbS2.
     */
    double getDbS2();

    /**
     * <pre>
     *通过slAdjDetectorId检测器将系数算出
     * </pre>
     *
     * <code>optional int32 slAdjDetectorId = 12;</code>
     * @return Whether the slAdjDetectorId field is set.
     */
    boolean hasSlAdjDetectorId();
    /**
     * <pre>
     *通过slAdjDetectorId检测器将系数算出
     * </pre>
     *
     * <code>optional int32 slAdjDetectorId = 12;</code>
     * @return The slAdjDetectorId.
     */
    int getSlAdjDetectorId();

    /**
     * <code>optional double dbUtmx = 13;</code>
     * @return Whether the dbUtmx field is set.
     */
    boolean hasDbUtmx();
    /**
     * <code>optional double dbUtmx = 13;</code>
     * @return The dbUtmx.
     */
    double getDbUtmx();

    /**
     * <code>optional double dbUtmY = 14;</code>
     * @return Whether the dbUtmY field is set.
     */
    boolean hasDbUtmY();
    /**
     * <code>optional double dbUtmY = 14;</code>
     * @return The dbUtmY.
     */
    double getDbUtmY();

    /**
     * <pre>
     *激活原因 1：工程车激活 2：低车流激活 3：额外激活
     * </pre>
     *
     * <code>optional uint32 ulActiveSource = 15;</code>
     * @return Whether the ulActiveSource field is set.
     */
    boolean hasUlActiveSource();
    /**
     * <pre>
     *激活原因 1：工程车激活 2：低车流激活 3：额外激活
     * </pre>
     *
     * <code>optional uint32 ulActiveSource = 15;</code>
     * @return The ulActiveSource.
     */
    int getUlActiveSource();

    /**
     * <pre>
     *激活时间 frame
     * </pre>
     *
     * <code>optional uint32 ulActiveFrame = 16;</code>
     * @return Whether the ulActiveFrame field is set.
     */
    boolean hasUlActiveFrame();
    /**
     * <pre>
     *激活时间 frame
     * </pre>
     *
     * <code>optional uint32 ulActiveFrame = 16;</code>
     * @return The ulActiveFrame.
     */
    int getUlActiveFrame();

    /**
     * <pre>
     *激活时间 subframe
     * </pre>
     *
     * <code>optional uint32 ulActiveSubFrame = 17;</code>
     * @return Whether the ulActiveSubFrame field is set.
     */
    boolean hasUlActiveSubFrame();
    /**
     * <pre>
     *激活时间 subframe
     * </pre>
     *
     * <code>optional uint32 ulActiveSubFrame = 17;</code>
     * @return The ulActiveSubFrame.
     */
    int getUlActiveSubFrame();

    /**
     * <pre>
     *快速车经过的数量
     * </pre>
     *
     * <code>optional uint32 ulVels = 18;</code>
     * @return Whether the ulVels field is set.
     */
    boolean hasUlVels();
    /**
     * <pre>
     *快速车经过的数量
     * </pre>
     *
     * <code>optional uint32 ulVels = 18;</code>
     * @return The ulVels.
     */
    int getUlVels();
  }
  /**
   * Protobuf type {@code event_debug.NoConesDetectorInfo}
   */
  public static final class NoConesDetectorInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.NoConesDetectorInfo)
      NoConesDetectorInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NoConesDetectorInfo.newBuilder() to construct.
    private NoConesDetectorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NoConesDetectorInfo() {
      stAdjInfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NoConesDetectorInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NoConesDetectorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              slId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              slState_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ulVehiclesOfReach_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ulHistoryVehicles_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ulCycleOfNonReach_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ulMeanDt_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              ulMaxDt_ = input.readUInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                stAdjInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesAdjDetectorInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              stAdjInfos_.add(
                  input.readMessage(event_debug.DrcEventDebug.NoConesAdjDetectorInfo.PARSER, extensionRegistry));
              break;
            }
            case 73: {
              bitField0_ |= 0x00000080;
              dbP_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000100;
              dbM_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000200;
              dbS2_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              slAdjDetectorId_ = input.readInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00000800;
              dbUtmx_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00001000;
              dbUtmY_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              ulActiveSource_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              ulActiveFrame_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              ulActiveSubFrame_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              ulVels_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          stAdjInfos_ = java.util.Collections.unmodifiableList(stAdjInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesDetectorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_NoConesDetectorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.NoConesDetectorInfo.class, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SLID_FIELD_NUMBER = 1;
    private int slId_;
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return Whether the slId field is set.
     */
    @java.lang.Override
    public boolean hasSlId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return The slId.
     */
    @java.lang.Override
    public int getSlId() {
      return slId_;
    }

    public static final int SLSTATE_FIELD_NUMBER = 2;
    private int slState_;
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return Whether the slState field is set.
     */
    @java.lang.Override
    public boolean hasSlState() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return The slState.
     */
    @java.lang.Override
    public int getSlState() {
      return slState_;
    }

    public static final int ULVEHICLESOFREACH_FIELD_NUMBER = 3;
    private int ulVehiclesOfReach_;
    /**
     * <pre>
     *本周期到车数量
     * </pre>
     *
     * <code>optional uint32 ulVehiclesOfReach = 3;</code>
     * @return Whether the ulVehiclesOfReach field is set.
     */
    @java.lang.Override
    public boolean hasUlVehiclesOfReach() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *本周期到车数量
     * </pre>
     *
     * <code>optional uint32 ulVehiclesOfReach = 3;</code>
     * @return The ulVehiclesOfReach.
     */
    @java.lang.Override
    public int getUlVehiclesOfReach() {
      return ulVehiclesOfReach_;
    }

    public static final int ULHISTORYVEHICLES_FIELD_NUMBER = 4;
    private int ulHistoryVehicles_;
    /**
     * <pre>
     *历史到车数量
     * </pre>
     *
     * <code>optional uint32 ulHistoryVehicles = 4;</code>
     * @return Whether the ulHistoryVehicles field is set.
     */
    @java.lang.Override
    public boolean hasUlHistoryVehicles() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *历史到车数量
     * </pre>
     *
     * <code>optional uint32 ulHistoryVehicles = 4;</code>
     * @return The ulHistoryVehicles.
     */
    @java.lang.Override
    public int getUlHistoryVehicles() {
      return ulHistoryVehicles_;
    }

    public static final int ULCYCLEOFNONREACH_FIELD_NUMBER = 5;
    private int ulCycleOfNonReach_;
    /**
     * <pre>
     *未到车的周期数
     * </pre>
     *
     * <code>optional uint32 ulCycleOfNonReach = 5;</code>
     * @return Whether the ulCycleOfNonReach field is set.
     */
    @java.lang.Override
    public boolean hasUlCycleOfNonReach() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *未到车的周期数
     * </pre>
     *
     * <code>optional uint32 ulCycleOfNonReach = 5;</code>
     * @return The ulCycleOfNonReach.
     */
    @java.lang.Override
    public int getUlCycleOfNonReach() {
      return ulCycleOfNonReach_;
    }

    public static final int ULMEANDT_FIELD_NUMBER = 6;
    private int ulMeanDt_;
    /**
     * <pre>
     *平均DT
     * </pre>
     *
     * <code>optional uint32 ulMeanDt = 6;</code>
     * @return Whether the ulMeanDt field is set.
     */
    @java.lang.Override
    public boolean hasUlMeanDt() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *平均DT
     * </pre>
     *
     * <code>optional uint32 ulMeanDt = 6;</code>
     * @return The ulMeanDt.
     */
    @java.lang.Override
    public int getUlMeanDt() {
      return ulMeanDt_;
    }

    public static final int ULMAXDT_FIELD_NUMBER = 7;
    private int ulMaxDt_;
    /**
     * <pre>
     *最大DT
     * </pre>
     *
     * <code>optional uint32 ulMaxDt = 7;</code>
     * @return Whether the ulMaxDt field is set.
     */
    @java.lang.Override
    public boolean hasUlMaxDt() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *最大DT
     * </pre>
     *
     * <code>optional uint32 ulMaxDt = 7;</code>
     * @return The ulMaxDt.
     */
    @java.lang.Override
    public int getUlMaxDt() {
      return ulMaxDt_;
    }

    public static final int STADJINFOS_FIELD_NUMBER = 8;
    private java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo> stAdjInfos_;
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo> getStAdjInfosList() {
      return stAdjInfos_;
    }
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder> 
        getStAdjInfosOrBuilderList() {
      return stAdjInfos_;
    }
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    @java.lang.Override
    public int getStAdjInfosCount() {
      return stAdjInfos_.size();
    }
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesAdjDetectorInfo getStAdjInfos(int index) {
      return stAdjInfos_.get(index);
    }
    /**
     * <pre>
     *邻检测器ID 系数
     * </pre>
     *
     * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder getStAdjInfosOrBuilder(
        int index) {
      return stAdjInfos_.get(index);
    }

    public static final int DBP_FIELD_NUMBER = 9;
    private double dbP_;
    /**
     * <pre>
     *计算出的概率
     * </pre>
     *
     * <code>optional double dbP = 9;</code>
     * @return Whether the dbP field is set.
     */
    @java.lang.Override
    public boolean hasDbP() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *计算出的概率
     * </pre>
     *
     * <code>optional double dbP = 9;</code>
     * @return The dbP.
     */
    @java.lang.Override
    public double getDbP() {
      return dbP_;
    }

    public static final int DBM_FIELD_NUMBER = 10;
    private double dbM_;
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbM = 10;</code>
     * @return Whether the dbM field is set.
     */
    @java.lang.Override
    public boolean hasDbM() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbM = 10;</code>
     * @return The dbM.
     */
    @java.lang.Override
    public double getDbM() {
      return dbM_;
    }

    public static final int DBS2_FIELD_NUMBER = 11;
    private double dbS2_;
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbS2 = 11;</code>
     * @return Whether the dbS2 field is set.
     */
    @java.lang.Override
    public boolean hasDbS2() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *计算使用的中间量
     * </pre>
     *
     * <code>optional double dbS2 = 11;</code>
     * @return The dbS2.
     */
    @java.lang.Override
    public double getDbS2() {
      return dbS2_;
    }

    public static final int SLADJDETECTORID_FIELD_NUMBER = 12;
    private int slAdjDetectorId_;
    /**
     * <pre>
     *通过slAdjDetectorId检测器将系数算出
     * </pre>
     *
     * <code>optional int32 slAdjDetectorId = 12;</code>
     * @return Whether the slAdjDetectorId field is set.
     */
    @java.lang.Override
    public boolean hasSlAdjDetectorId() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *通过slAdjDetectorId检测器将系数算出
     * </pre>
     *
     * <code>optional int32 slAdjDetectorId = 12;</code>
     * @return The slAdjDetectorId.
     */
    @java.lang.Override
    public int getSlAdjDetectorId() {
      return slAdjDetectorId_;
    }

    public static final int DBUTMX_FIELD_NUMBER = 13;
    private double dbUtmx_;
    /**
     * <code>optional double dbUtmx = 13;</code>
     * @return Whether the dbUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmx() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional double dbUtmx = 13;</code>
     * @return The dbUtmx.
     */
    @java.lang.Override
    public double getDbUtmx() {
      return dbUtmx_;
    }

    public static final int DBUTMY_FIELD_NUMBER = 14;
    private double dbUtmY_;
    /**
     * <code>optional double dbUtmY = 14;</code>
     * @return Whether the dbUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmY() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional double dbUtmY = 14;</code>
     * @return The dbUtmY.
     */
    @java.lang.Override
    public double getDbUtmY() {
      return dbUtmY_;
    }

    public static final int ULACTIVESOURCE_FIELD_NUMBER = 15;
    private int ulActiveSource_;
    /**
     * <pre>
     *激活原因 1：工程车激活 2：低车流激活 3：额外激活
     * </pre>
     *
     * <code>optional uint32 ulActiveSource = 15;</code>
     * @return Whether the ulActiveSource field is set.
     */
    @java.lang.Override
    public boolean hasUlActiveSource() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     *激活原因 1：工程车激活 2：低车流激活 3：额外激活
     * </pre>
     *
     * <code>optional uint32 ulActiveSource = 15;</code>
     * @return The ulActiveSource.
     */
    @java.lang.Override
    public int getUlActiveSource() {
      return ulActiveSource_;
    }

    public static final int ULACTIVEFRAME_FIELD_NUMBER = 16;
    private int ulActiveFrame_;
    /**
     * <pre>
     *激活时间 frame
     * </pre>
     *
     * <code>optional uint32 ulActiveFrame = 16;</code>
     * @return Whether the ulActiveFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlActiveFrame() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     *激活时间 frame
     * </pre>
     *
     * <code>optional uint32 ulActiveFrame = 16;</code>
     * @return The ulActiveFrame.
     */
    @java.lang.Override
    public int getUlActiveFrame() {
      return ulActiveFrame_;
    }

    public static final int ULACTIVESUBFRAME_FIELD_NUMBER = 17;
    private int ulActiveSubFrame_;
    /**
     * <pre>
     *激活时间 subframe
     * </pre>
     *
     * <code>optional uint32 ulActiveSubFrame = 17;</code>
     * @return Whether the ulActiveSubFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlActiveSubFrame() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     *激活时间 subframe
     * </pre>
     *
     * <code>optional uint32 ulActiveSubFrame = 17;</code>
     * @return The ulActiveSubFrame.
     */
    @java.lang.Override
    public int getUlActiveSubFrame() {
      return ulActiveSubFrame_;
    }

    public static final int ULVELS_FIELD_NUMBER = 18;
    private int ulVels_;
    /**
     * <pre>
     *快速车经过的数量
     * </pre>
     *
     * <code>optional uint32 ulVels = 18;</code>
     * @return Whether the ulVels field is set.
     */
    @java.lang.Override
    public boolean hasUlVels() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     *快速车经过的数量
     * </pre>
     *
     * <code>optional uint32 ulVels = 18;</code>
     * @return The ulVels.
     */
    @java.lang.Override
    public int getUlVels() {
      return ulVels_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, slId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, slState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ulVehiclesOfReach_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, ulHistoryVehicles_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, ulCycleOfNonReach_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, ulMeanDt_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, ulMaxDt_);
      }
      for (int i = 0; i < stAdjInfos_.size(); i++) {
        output.writeMessage(8, stAdjInfos_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(9, dbP_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(10, dbM_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(11, dbS2_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(12, slAdjDetectorId_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeDouble(13, dbUtmx_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeDouble(14, dbUtmY_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(15, ulActiveSource_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(16, ulActiveFrame_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeUInt32(17, ulActiveSubFrame_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeUInt32(18, ulVels_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, slId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, slState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ulVehiclesOfReach_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, ulHistoryVehicles_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ulCycleOfNonReach_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ulMeanDt_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, ulMaxDt_);
      }
      for (int i = 0; i < stAdjInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, stAdjInfos_.get(i));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, dbP_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, dbM_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, dbS2_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, slAdjDetectorId_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, dbUtmx_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, dbUtmY_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, ulActiveSource_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, ulActiveFrame_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, ulActiveSubFrame_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, ulVels_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.NoConesDetectorInfo)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.NoConesDetectorInfo other = (event_debug.DrcEventDebug.NoConesDetectorInfo) obj;

      if (hasSlId() != other.hasSlId()) return false;
      if (hasSlId()) {
        if (getSlId()
            != other.getSlId()) return false;
      }
      if (hasSlState() != other.hasSlState()) return false;
      if (hasSlState()) {
        if (getSlState()
            != other.getSlState()) return false;
      }
      if (hasUlVehiclesOfReach() != other.hasUlVehiclesOfReach()) return false;
      if (hasUlVehiclesOfReach()) {
        if (getUlVehiclesOfReach()
            != other.getUlVehiclesOfReach()) return false;
      }
      if (hasUlHistoryVehicles() != other.hasUlHistoryVehicles()) return false;
      if (hasUlHistoryVehicles()) {
        if (getUlHistoryVehicles()
            != other.getUlHistoryVehicles()) return false;
      }
      if (hasUlCycleOfNonReach() != other.hasUlCycleOfNonReach()) return false;
      if (hasUlCycleOfNonReach()) {
        if (getUlCycleOfNonReach()
            != other.getUlCycleOfNonReach()) return false;
      }
      if (hasUlMeanDt() != other.hasUlMeanDt()) return false;
      if (hasUlMeanDt()) {
        if (getUlMeanDt()
            != other.getUlMeanDt()) return false;
      }
      if (hasUlMaxDt() != other.hasUlMaxDt()) return false;
      if (hasUlMaxDt()) {
        if (getUlMaxDt()
            != other.getUlMaxDt()) return false;
      }
      if (!getStAdjInfosList()
          .equals(other.getStAdjInfosList())) return false;
      if (hasDbP() != other.hasDbP()) return false;
      if (hasDbP()) {
        if (java.lang.Double.doubleToLongBits(getDbP())
            != java.lang.Double.doubleToLongBits(
                other.getDbP())) return false;
      }
      if (hasDbM() != other.hasDbM()) return false;
      if (hasDbM()) {
        if (java.lang.Double.doubleToLongBits(getDbM())
            != java.lang.Double.doubleToLongBits(
                other.getDbM())) return false;
      }
      if (hasDbS2() != other.hasDbS2()) return false;
      if (hasDbS2()) {
        if (java.lang.Double.doubleToLongBits(getDbS2())
            != java.lang.Double.doubleToLongBits(
                other.getDbS2())) return false;
      }
      if (hasSlAdjDetectorId() != other.hasSlAdjDetectorId()) return false;
      if (hasSlAdjDetectorId()) {
        if (getSlAdjDetectorId()
            != other.getSlAdjDetectorId()) return false;
      }
      if (hasDbUtmx() != other.hasDbUtmx()) return false;
      if (hasDbUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmx())) return false;
      }
      if (hasDbUtmY() != other.hasDbUtmY()) return false;
      if (hasDbUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmY())) return false;
      }
      if (hasUlActiveSource() != other.hasUlActiveSource()) return false;
      if (hasUlActiveSource()) {
        if (getUlActiveSource()
            != other.getUlActiveSource()) return false;
      }
      if (hasUlActiveFrame() != other.hasUlActiveFrame()) return false;
      if (hasUlActiveFrame()) {
        if (getUlActiveFrame()
            != other.getUlActiveFrame()) return false;
      }
      if (hasUlActiveSubFrame() != other.hasUlActiveSubFrame()) return false;
      if (hasUlActiveSubFrame()) {
        if (getUlActiveSubFrame()
            != other.getUlActiveSubFrame()) return false;
      }
      if (hasUlVels() != other.hasUlVels()) return false;
      if (hasUlVels()) {
        if (getUlVels()
            != other.getUlVels()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSlId()) {
        hash = (37 * hash) + SLID_FIELD_NUMBER;
        hash = (53 * hash) + getSlId();
      }
      if (hasSlState()) {
        hash = (37 * hash) + SLSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getSlState();
      }
      if (hasUlVehiclesOfReach()) {
        hash = (37 * hash) + ULVEHICLESOFREACH_FIELD_NUMBER;
        hash = (53 * hash) + getUlVehiclesOfReach();
      }
      if (hasUlHistoryVehicles()) {
        hash = (37 * hash) + ULHISTORYVEHICLES_FIELD_NUMBER;
        hash = (53 * hash) + getUlHistoryVehicles();
      }
      if (hasUlCycleOfNonReach()) {
        hash = (37 * hash) + ULCYCLEOFNONREACH_FIELD_NUMBER;
        hash = (53 * hash) + getUlCycleOfNonReach();
      }
      if (hasUlMeanDt()) {
        hash = (37 * hash) + ULMEANDT_FIELD_NUMBER;
        hash = (53 * hash) + getUlMeanDt();
      }
      if (hasUlMaxDt()) {
        hash = (37 * hash) + ULMAXDT_FIELD_NUMBER;
        hash = (53 * hash) + getUlMaxDt();
      }
      if (getStAdjInfosCount() > 0) {
        hash = (37 * hash) + STADJINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getStAdjInfosList().hashCode();
      }
      if (hasDbP()) {
        hash = (37 * hash) + DBP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbP()));
      }
      if (hasDbM()) {
        hash = (37 * hash) + DBM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbM()));
      }
      if (hasDbS2()) {
        hash = (37 * hash) + DBS2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbS2()));
      }
      if (hasSlAdjDetectorId()) {
        hash = (37 * hash) + SLADJDETECTORID_FIELD_NUMBER;
        hash = (53 * hash) + getSlAdjDetectorId();
      }
      if (hasDbUtmx()) {
        hash = (37 * hash) + DBUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmx()));
      }
      if (hasDbUtmY()) {
        hash = (37 * hash) + DBUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmY()));
      }
      if (hasUlActiveSource()) {
        hash = (37 * hash) + ULACTIVESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getUlActiveSource();
      }
      if (hasUlActiveFrame()) {
        hash = (37 * hash) + ULACTIVEFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlActiveFrame();
      }
      if (hasUlActiveSubFrame()) {
        hash = (37 * hash) + ULACTIVESUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlActiveSubFrame();
      }
      if (hasUlVels()) {
        hash = (37 * hash) + ULVELS_FIELD_NUMBER;
        hash = (53 * hash) + getUlVels();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.NoConesDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.NoConesDetectorInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.NoConesDetectorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.NoConesDetectorInfo)
        event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesDetectorInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesDetectorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.NoConesDetectorInfo.class, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.NoConesDetectorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStAdjInfosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        slId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        slState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ulVehiclesOfReach_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ulHistoryVehicles_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ulCycleOfNonReach_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ulMeanDt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ulMaxDt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (stAdjInfosBuilder_ == null) {
          stAdjInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          stAdjInfosBuilder_.clear();
        }
        dbP_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        dbM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        dbS2_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        slAdjDetectorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dbUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        dbUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        ulActiveSource_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        ulActiveFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        ulActiveSubFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        ulVels_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_NoConesDetectorInfo_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesDetectorInfo getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.NoConesDetectorInfo.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesDetectorInfo build() {
        event_debug.DrcEventDebug.NoConesDetectorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.NoConesDetectorInfo buildPartial() {
        event_debug.DrcEventDebug.NoConesDetectorInfo result = new event_debug.DrcEventDebug.NoConesDetectorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.slId_ = slId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.slState_ = slState_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ulVehiclesOfReach_ = ulVehiclesOfReach_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ulHistoryVehicles_ = ulHistoryVehicles_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ulCycleOfNonReach_ = ulCycleOfNonReach_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulMeanDt_ = ulMeanDt_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ulMaxDt_ = ulMaxDt_;
          to_bitField0_ |= 0x00000040;
        }
        if (stAdjInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            stAdjInfos_ = java.util.Collections.unmodifiableList(stAdjInfos_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.stAdjInfos_ = stAdjInfos_;
        } else {
          result.stAdjInfos_ = stAdjInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.dbP_ = dbP_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.dbM_ = dbM_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.dbS2_ = dbS2_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.slAdjDetectorId_ = slAdjDetectorId_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.dbUtmx_ = dbUtmx_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.dbUtmY_ = dbUtmY_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.ulActiveSource_ = ulActiveSource_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.ulActiveFrame_ = ulActiveFrame_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.ulActiveSubFrame_ = ulActiveSubFrame_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.ulVels_ = ulVels_;
          to_bitField0_ |= 0x00010000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.NoConesDetectorInfo) {
          return mergeFrom((event_debug.DrcEventDebug.NoConesDetectorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.NoConesDetectorInfo other) {
        if (other == event_debug.DrcEventDebug.NoConesDetectorInfo.getDefaultInstance()) return this;
        if (other.hasSlId()) {
          setSlId(other.getSlId());
        }
        if (other.hasSlState()) {
          setSlState(other.getSlState());
        }
        if (other.hasUlVehiclesOfReach()) {
          setUlVehiclesOfReach(other.getUlVehiclesOfReach());
        }
        if (other.hasUlHistoryVehicles()) {
          setUlHistoryVehicles(other.getUlHistoryVehicles());
        }
        if (other.hasUlCycleOfNonReach()) {
          setUlCycleOfNonReach(other.getUlCycleOfNonReach());
        }
        if (other.hasUlMeanDt()) {
          setUlMeanDt(other.getUlMeanDt());
        }
        if (other.hasUlMaxDt()) {
          setUlMaxDt(other.getUlMaxDt());
        }
        if (stAdjInfosBuilder_ == null) {
          if (!other.stAdjInfos_.isEmpty()) {
            if (stAdjInfos_.isEmpty()) {
              stAdjInfos_ = other.stAdjInfos_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureStAdjInfosIsMutable();
              stAdjInfos_.addAll(other.stAdjInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.stAdjInfos_.isEmpty()) {
            if (stAdjInfosBuilder_.isEmpty()) {
              stAdjInfosBuilder_.dispose();
              stAdjInfosBuilder_ = null;
              stAdjInfos_ = other.stAdjInfos_;
              bitField0_ = (bitField0_ & ~0x00000080);
              stAdjInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStAdjInfosFieldBuilder() : null;
            } else {
              stAdjInfosBuilder_.addAllMessages(other.stAdjInfos_);
            }
          }
        }
        if (other.hasDbP()) {
          setDbP(other.getDbP());
        }
        if (other.hasDbM()) {
          setDbM(other.getDbM());
        }
        if (other.hasDbS2()) {
          setDbS2(other.getDbS2());
        }
        if (other.hasSlAdjDetectorId()) {
          setSlAdjDetectorId(other.getSlAdjDetectorId());
        }
        if (other.hasDbUtmx()) {
          setDbUtmx(other.getDbUtmx());
        }
        if (other.hasDbUtmY()) {
          setDbUtmY(other.getDbUtmY());
        }
        if (other.hasUlActiveSource()) {
          setUlActiveSource(other.getUlActiveSource());
        }
        if (other.hasUlActiveFrame()) {
          setUlActiveFrame(other.getUlActiveFrame());
        }
        if (other.hasUlActiveSubFrame()) {
          setUlActiveSubFrame(other.getUlActiveSubFrame());
        }
        if (other.hasUlVels()) {
          setUlVels(other.getUlVels());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.NoConesDetectorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.NoConesDetectorInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int slId_ ;
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return Whether the slId field is set.
       */
      @java.lang.Override
      public boolean hasSlId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return The slId.
       */
      @java.lang.Override
      public int getSlId() {
        return slId_;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @param value The slId to set.
       * @return This builder for chaining.
       */
      public Builder setSlId(int value) {
        bitField0_ |= 0x00000001;
        slId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slId_ = 0;
        onChanged();
        return this;
      }

      private int slState_ ;
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return Whether the slState field is set.
       */
      @java.lang.Override
      public boolean hasSlState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return The slState.
       */
      @java.lang.Override
      public int getSlState() {
        return slState_;
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @param value The slState to set.
       * @return This builder for chaining.
       */
      public Builder setSlState(int value) {
        bitField0_ |= 0x00000002;
        slState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        slState_ = 0;
        onChanged();
        return this;
      }

      private int ulVehiclesOfReach_ ;
      /**
       * <pre>
       *本周期到车数量
       * </pre>
       *
       * <code>optional uint32 ulVehiclesOfReach = 3;</code>
       * @return Whether the ulVehiclesOfReach field is set.
       */
      @java.lang.Override
      public boolean hasUlVehiclesOfReach() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *本周期到车数量
       * </pre>
       *
       * <code>optional uint32 ulVehiclesOfReach = 3;</code>
       * @return The ulVehiclesOfReach.
       */
      @java.lang.Override
      public int getUlVehiclesOfReach() {
        return ulVehiclesOfReach_;
      }
      /**
       * <pre>
       *本周期到车数量
       * </pre>
       *
       * <code>optional uint32 ulVehiclesOfReach = 3;</code>
       * @param value The ulVehiclesOfReach to set.
       * @return This builder for chaining.
       */
      public Builder setUlVehiclesOfReach(int value) {
        bitField0_ |= 0x00000004;
        ulVehiclesOfReach_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *本周期到车数量
       * </pre>
       *
       * <code>optional uint32 ulVehiclesOfReach = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlVehiclesOfReach() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ulVehiclesOfReach_ = 0;
        onChanged();
        return this;
      }

      private int ulHistoryVehicles_ ;
      /**
       * <pre>
       *历史到车数量
       * </pre>
       *
       * <code>optional uint32 ulHistoryVehicles = 4;</code>
       * @return Whether the ulHistoryVehicles field is set.
       */
      @java.lang.Override
      public boolean hasUlHistoryVehicles() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *历史到车数量
       * </pre>
       *
       * <code>optional uint32 ulHistoryVehicles = 4;</code>
       * @return The ulHistoryVehicles.
       */
      @java.lang.Override
      public int getUlHistoryVehicles() {
        return ulHistoryVehicles_;
      }
      /**
       * <pre>
       *历史到车数量
       * </pre>
       *
       * <code>optional uint32 ulHistoryVehicles = 4;</code>
       * @param value The ulHistoryVehicles to set.
       * @return This builder for chaining.
       */
      public Builder setUlHistoryVehicles(int value) {
        bitField0_ |= 0x00000008;
        ulHistoryVehicles_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *历史到车数量
       * </pre>
       *
       * <code>optional uint32 ulHistoryVehicles = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHistoryVehicles() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ulHistoryVehicles_ = 0;
        onChanged();
        return this;
      }

      private int ulCycleOfNonReach_ ;
      /**
       * <pre>
       *未到车的周期数
       * </pre>
       *
       * <code>optional uint32 ulCycleOfNonReach = 5;</code>
       * @return Whether the ulCycleOfNonReach field is set.
       */
      @java.lang.Override
      public boolean hasUlCycleOfNonReach() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *未到车的周期数
       * </pre>
       *
       * <code>optional uint32 ulCycleOfNonReach = 5;</code>
       * @return The ulCycleOfNonReach.
       */
      @java.lang.Override
      public int getUlCycleOfNonReach() {
        return ulCycleOfNonReach_;
      }
      /**
       * <pre>
       *未到车的周期数
       * </pre>
       *
       * <code>optional uint32 ulCycleOfNonReach = 5;</code>
       * @param value The ulCycleOfNonReach to set.
       * @return This builder for chaining.
       */
      public Builder setUlCycleOfNonReach(int value) {
        bitField0_ |= 0x00000010;
        ulCycleOfNonReach_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未到车的周期数
       * </pre>
       *
       * <code>optional uint32 ulCycleOfNonReach = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlCycleOfNonReach() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ulCycleOfNonReach_ = 0;
        onChanged();
        return this;
      }

      private int ulMeanDt_ ;
      /**
       * <pre>
       *平均DT
       * </pre>
       *
       * <code>optional uint32 ulMeanDt = 6;</code>
       * @return Whether the ulMeanDt field is set.
       */
      @java.lang.Override
      public boolean hasUlMeanDt() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *平均DT
       * </pre>
       *
       * <code>optional uint32 ulMeanDt = 6;</code>
       * @return The ulMeanDt.
       */
      @java.lang.Override
      public int getUlMeanDt() {
        return ulMeanDt_;
      }
      /**
       * <pre>
       *平均DT
       * </pre>
       *
       * <code>optional uint32 ulMeanDt = 6;</code>
       * @param value The ulMeanDt to set.
       * @return This builder for chaining.
       */
      public Builder setUlMeanDt(int value) {
        bitField0_ |= 0x00000020;
        ulMeanDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *平均DT
       * </pre>
       *
       * <code>optional uint32 ulMeanDt = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlMeanDt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulMeanDt_ = 0;
        onChanged();
        return this;
      }

      private int ulMaxDt_ ;
      /**
       * <pre>
       *最大DT
       * </pre>
       *
       * <code>optional uint32 ulMaxDt = 7;</code>
       * @return Whether the ulMaxDt field is set.
       */
      @java.lang.Override
      public boolean hasUlMaxDt() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *最大DT
       * </pre>
       *
       * <code>optional uint32 ulMaxDt = 7;</code>
       * @return The ulMaxDt.
       */
      @java.lang.Override
      public int getUlMaxDt() {
        return ulMaxDt_;
      }
      /**
       * <pre>
       *最大DT
       * </pre>
       *
       * <code>optional uint32 ulMaxDt = 7;</code>
       * @param value The ulMaxDt to set.
       * @return This builder for chaining.
       */
      public Builder setUlMaxDt(int value) {
        bitField0_ |= 0x00000040;
        ulMaxDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大DT
       * </pre>
       *
       * <code>optional uint32 ulMaxDt = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlMaxDt() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ulMaxDt_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo> stAdjInfos_ =
        java.util.Collections.emptyList();
      private void ensureStAdjInfosIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          stAdjInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesAdjDetectorInfo>(stAdjInfos_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesAdjDetectorInfo, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder> stAdjInfosBuilder_;

      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo> getStAdjInfosList() {
        if (stAdjInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stAdjInfos_);
        } else {
          return stAdjInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public int getStAdjInfosCount() {
        if (stAdjInfosBuilder_ == null) {
          return stAdjInfos_.size();
        } else {
          return stAdjInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo getStAdjInfos(int index) {
        if (stAdjInfosBuilder_ == null) {
          return stAdjInfos_.get(index);
        } else {
          return stAdjInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder setStAdjInfos(
          int index, event_debug.DrcEventDebug.NoConesAdjDetectorInfo value) {
        if (stAdjInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStAdjInfosIsMutable();
          stAdjInfos_.set(index, value);
          onChanged();
        } else {
          stAdjInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder setStAdjInfos(
          int index, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder builderForValue) {
        if (stAdjInfosBuilder_ == null) {
          ensureStAdjInfosIsMutable();
          stAdjInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          stAdjInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder addStAdjInfos(event_debug.DrcEventDebug.NoConesAdjDetectorInfo value) {
        if (stAdjInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStAdjInfosIsMutable();
          stAdjInfos_.add(value);
          onChanged();
        } else {
          stAdjInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder addStAdjInfos(
          int index, event_debug.DrcEventDebug.NoConesAdjDetectorInfo value) {
        if (stAdjInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStAdjInfosIsMutable();
          stAdjInfos_.add(index, value);
          onChanged();
        } else {
          stAdjInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder addStAdjInfos(
          event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder builderForValue) {
        if (stAdjInfosBuilder_ == null) {
          ensureStAdjInfosIsMutable();
          stAdjInfos_.add(builderForValue.build());
          onChanged();
        } else {
          stAdjInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder addStAdjInfos(
          int index, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder builderForValue) {
        if (stAdjInfosBuilder_ == null) {
          ensureStAdjInfosIsMutable();
          stAdjInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          stAdjInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder addAllStAdjInfos(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.NoConesAdjDetectorInfo> values) {
        if (stAdjInfosBuilder_ == null) {
          ensureStAdjInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stAdjInfos_);
          onChanged();
        } else {
          stAdjInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder clearStAdjInfos() {
        if (stAdjInfosBuilder_ == null) {
          stAdjInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          stAdjInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public Builder removeStAdjInfos(int index) {
        if (stAdjInfosBuilder_ == null) {
          ensureStAdjInfosIsMutable();
          stAdjInfos_.remove(index);
          onChanged();
        } else {
          stAdjInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder getStAdjInfosBuilder(
          int index) {
        return getStAdjInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder getStAdjInfosOrBuilder(
          int index) {
        if (stAdjInfosBuilder_ == null) {
          return stAdjInfos_.get(index);  } else {
          return stAdjInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder> 
           getStAdjInfosOrBuilderList() {
        if (stAdjInfosBuilder_ != null) {
          return stAdjInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stAdjInfos_);
        }
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder addStAdjInfosBuilder() {
        return getStAdjInfosFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.NoConesAdjDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder addStAdjInfosBuilder(
          int index) {
        return getStAdjInfosFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *邻检测器ID 系数
       * </pre>
       *
       * <code>repeated .event_debug.NoConesAdjDetectorInfo stAdjInfos = 8;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder> 
           getStAdjInfosBuilderList() {
        return getStAdjInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesAdjDetectorInfo, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder> 
          getStAdjInfosFieldBuilder() {
        if (stAdjInfosBuilder_ == null) {
          stAdjInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.NoConesAdjDetectorInfo, event_debug.DrcEventDebug.NoConesAdjDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesAdjDetectorInfoOrBuilder>(
                  stAdjInfos_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          stAdjInfos_ = null;
        }
        return stAdjInfosBuilder_;
      }

      private double dbP_ ;
      /**
       * <pre>
       *计算出的概率
       * </pre>
       *
       * <code>optional double dbP = 9;</code>
       * @return Whether the dbP field is set.
       */
      @java.lang.Override
      public boolean hasDbP() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *计算出的概率
       * </pre>
       *
       * <code>optional double dbP = 9;</code>
       * @return The dbP.
       */
      @java.lang.Override
      public double getDbP() {
        return dbP_;
      }
      /**
       * <pre>
       *计算出的概率
       * </pre>
       *
       * <code>optional double dbP = 9;</code>
       * @param value The dbP to set.
       * @return This builder for chaining.
       */
      public Builder setDbP(double value) {
        bitField0_ |= 0x00000100;
        dbP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计算出的概率
       * </pre>
       *
       * <code>optional double dbP = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbP() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dbP_ = 0D;
        onChanged();
        return this;
      }

      private double dbM_ ;
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbM = 10;</code>
       * @return Whether the dbM field is set.
       */
      @java.lang.Override
      public boolean hasDbM() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbM = 10;</code>
       * @return The dbM.
       */
      @java.lang.Override
      public double getDbM() {
        return dbM_;
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbM = 10;</code>
       * @param value The dbM to set.
       * @return This builder for chaining.
       */
      public Builder setDbM(double value) {
        bitField0_ |= 0x00000200;
        dbM_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbM = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbM() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dbM_ = 0D;
        onChanged();
        return this;
      }

      private double dbS2_ ;
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbS2 = 11;</code>
       * @return Whether the dbS2 field is set.
       */
      @java.lang.Override
      public boolean hasDbS2() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbS2 = 11;</code>
       * @return The dbS2.
       */
      @java.lang.Override
      public double getDbS2() {
        return dbS2_;
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbS2 = 11;</code>
       * @param value The dbS2 to set.
       * @return This builder for chaining.
       */
      public Builder setDbS2(double value) {
        bitField0_ |= 0x00000400;
        dbS2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计算使用的中间量
       * </pre>
       *
       * <code>optional double dbS2 = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbS2() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dbS2_ = 0D;
        onChanged();
        return this;
      }

      private int slAdjDetectorId_ ;
      /**
       * <pre>
       *通过slAdjDetectorId检测器将系数算出
       * </pre>
       *
       * <code>optional int32 slAdjDetectorId = 12;</code>
       * @return Whether the slAdjDetectorId field is set.
       */
      @java.lang.Override
      public boolean hasSlAdjDetectorId() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *通过slAdjDetectorId检测器将系数算出
       * </pre>
       *
       * <code>optional int32 slAdjDetectorId = 12;</code>
       * @return The slAdjDetectorId.
       */
      @java.lang.Override
      public int getSlAdjDetectorId() {
        return slAdjDetectorId_;
      }
      /**
       * <pre>
       *通过slAdjDetectorId检测器将系数算出
       * </pre>
       *
       * <code>optional int32 slAdjDetectorId = 12;</code>
       * @param value The slAdjDetectorId to set.
       * @return This builder for chaining.
       */
      public Builder setSlAdjDetectorId(int value) {
        bitField0_ |= 0x00000800;
        slAdjDetectorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通过slAdjDetectorId检测器将系数算出
       * </pre>
       *
       * <code>optional int32 slAdjDetectorId = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlAdjDetectorId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        slAdjDetectorId_ = 0;
        onChanged();
        return this;
      }

      private double dbUtmx_ ;
      /**
       * <code>optional double dbUtmx = 13;</code>
       * @return Whether the dbUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmx() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional double dbUtmx = 13;</code>
       * @return The dbUtmx.
       */
      @java.lang.Override
      public double getDbUtmx() {
        return dbUtmx_;
      }
      /**
       * <code>optional double dbUtmx = 13;</code>
       * @param value The dbUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmx(double value) {
        bitField0_ |= 0x00001000;
        dbUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmx = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmx() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dbUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbUtmY_ ;
      /**
       * <code>optional double dbUtmY = 14;</code>
       * @return Whether the dbUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmY() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional double dbUtmY = 14;</code>
       * @return The dbUtmY.
       */
      @java.lang.Override
      public double getDbUtmY() {
        return dbUtmY_;
      }
      /**
       * <code>optional double dbUtmY = 14;</code>
       * @param value The dbUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmY(double value) {
        bitField0_ |= 0x00002000;
        dbUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmY = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmY() {
        bitField0_ = (bitField0_ & ~0x00002000);
        dbUtmY_ = 0D;
        onChanged();
        return this;
      }

      private int ulActiveSource_ ;
      /**
       * <pre>
       *激活原因 1：工程车激活 2：低车流激活 3：额外激活
       * </pre>
       *
       * <code>optional uint32 ulActiveSource = 15;</code>
       * @return Whether the ulActiveSource field is set.
       */
      @java.lang.Override
      public boolean hasUlActiveSource() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *激活原因 1：工程车激活 2：低车流激活 3：额外激活
       * </pre>
       *
       * <code>optional uint32 ulActiveSource = 15;</code>
       * @return The ulActiveSource.
       */
      @java.lang.Override
      public int getUlActiveSource() {
        return ulActiveSource_;
      }
      /**
       * <pre>
       *激活原因 1：工程车激活 2：低车流激活 3：额外激活
       * </pre>
       *
       * <code>optional uint32 ulActiveSource = 15;</code>
       * @param value The ulActiveSource to set.
       * @return This builder for chaining.
       */
      public Builder setUlActiveSource(int value) {
        bitField0_ |= 0x00004000;
        ulActiveSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *激活原因 1：工程车激活 2：低车流激活 3：额外激活
       * </pre>
       *
       * <code>optional uint32 ulActiveSource = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlActiveSource() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ulActiveSource_ = 0;
        onChanged();
        return this;
      }

      private int ulActiveFrame_ ;
      /**
       * <pre>
       *激活时间 frame
       * </pre>
       *
       * <code>optional uint32 ulActiveFrame = 16;</code>
       * @return Whether the ulActiveFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlActiveFrame() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *激活时间 frame
       * </pre>
       *
       * <code>optional uint32 ulActiveFrame = 16;</code>
       * @return The ulActiveFrame.
       */
      @java.lang.Override
      public int getUlActiveFrame() {
        return ulActiveFrame_;
      }
      /**
       * <pre>
       *激活时间 frame
       * </pre>
       *
       * <code>optional uint32 ulActiveFrame = 16;</code>
       * @param value The ulActiveFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlActiveFrame(int value) {
        bitField0_ |= 0x00008000;
        ulActiveFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *激活时间 frame
       * </pre>
       *
       * <code>optional uint32 ulActiveFrame = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlActiveFrame() {
        bitField0_ = (bitField0_ & ~0x00008000);
        ulActiveFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulActiveSubFrame_ ;
      /**
       * <pre>
       *激活时间 subframe
       * </pre>
       *
       * <code>optional uint32 ulActiveSubFrame = 17;</code>
       * @return Whether the ulActiveSubFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlActiveSubFrame() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *激活时间 subframe
       * </pre>
       *
       * <code>optional uint32 ulActiveSubFrame = 17;</code>
       * @return The ulActiveSubFrame.
       */
      @java.lang.Override
      public int getUlActiveSubFrame() {
        return ulActiveSubFrame_;
      }
      /**
       * <pre>
       *激活时间 subframe
       * </pre>
       *
       * <code>optional uint32 ulActiveSubFrame = 17;</code>
       * @param value The ulActiveSubFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlActiveSubFrame(int value) {
        bitField0_ |= 0x00010000;
        ulActiveSubFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *激活时间 subframe
       * </pre>
       *
       * <code>optional uint32 ulActiveSubFrame = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlActiveSubFrame() {
        bitField0_ = (bitField0_ & ~0x00010000);
        ulActiveSubFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulVels_ ;
      /**
       * <pre>
       *快速车经过的数量
       * </pre>
       *
       * <code>optional uint32 ulVels = 18;</code>
       * @return Whether the ulVels field is set.
       */
      @java.lang.Override
      public boolean hasUlVels() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       *快速车经过的数量
       * </pre>
       *
       * <code>optional uint32 ulVels = 18;</code>
       * @return The ulVels.
       */
      @java.lang.Override
      public int getUlVels() {
        return ulVels_;
      }
      /**
       * <pre>
       *快速车经过的数量
       * </pre>
       *
       * <code>optional uint32 ulVels = 18;</code>
       * @param value The ulVels to set.
       * @return This builder for chaining.
       */
      public Builder setUlVels(int value) {
        bitField0_ |= 0x00020000;
        ulVels_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *快速车经过的数量
       * </pre>
       *
       * <code>optional uint32 ulVels = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlVels() {
        bitField0_ = (bitField0_ & ~0x00020000);
        ulVels_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.NoConesDetectorInfo)
    }

    // @@protoc_insertion_point(class_scope:event_debug.NoConesDetectorInfo)
    private static final event_debug.DrcEventDebug.NoConesDetectorInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.NoConesDetectorInfo();
    }

    public static event_debug.DrcEventDebug.NoConesDetectorInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NoConesDetectorInfo>
        PARSER = new com.google.protobuf.AbstractParser<NoConesDetectorInfo>() {
      @java.lang.Override
      public NoConesDetectorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NoConesDetectorInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NoConesDetectorInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NoConesDetectorInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesDetectorInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_NO_CONESOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_NO_CONES)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return Whether the ulFrame field is set.
     */
    boolean hasUlFrame();
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return The ulFrame.
     */
    int getUlFrame();

    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return Whether the ulSubFrame field is set.
     */
    boolean hasUlSubFrame();
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return The ulSubFrame.
     */
    int getUlSubFrame();

    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return Whether the ulCycle field is set.
     */
    boolean hasUlCycle();
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return The ulCycle.
     */
    int getUlCycle();

    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    java.util.List<event_debug.DrcEventDebug.NoConesEventInfo> 
        getStEventInfoList();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    event_debug.DrcEventDebug.NoConesEventInfo getStEventInfo(int index);
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    int getStEventInfoCount();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.NoConesEventInfoOrBuilder> 
        getStEventInfoOrBuilderList();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    event_debug.DrcEventDebug.NoConesEventInfoOrBuilder getStEventInfoOrBuilder(
        int index);

    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo> 
        getStDetectorInfoList();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    event_debug.DrcEventDebug.NoConesDetectorInfo getStDetectorInfo(int index);
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    int getStDetectorInfoCount();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder> 
        getStDetectorInfoOrBuilderList();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
        int index);

    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * <pre>
   *无锥桶调试信息
   * </pre>
   *
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_NO_CONES}
   */
  public static final class DRC_EVENT_DEBUG_NO_CONES extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_NO_CONES)
      DRC_EVENT_DEBUG_NO_CONESOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_NO_CONES.newBuilder() to construct.
    private DRC_EVENT_DEBUG_NO_CONES(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_NO_CONES() {
      stEventInfo_ = java.util.Collections.emptyList();
      stDetectorInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_NO_CONES();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_NO_CONES(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ulFrame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ulSubFrame_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ulCycle_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                stEventInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesEventInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              stEventInfo_.add(
                  input.readMessage(event_debug.DrcEventDebug.NoConesEventInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                stDetectorInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesDetectorInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              stDetectorInfo_.add(
                  input.readMessage(event_debug.DrcEventDebug.NoConesDetectorInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          stEventInfo_ = java.util.Collections.unmodifiableList(stEventInfo_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          stDetectorInfo_ = java.util.Collections.unmodifiableList(stDetectorInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.Builder.class);
    }

    private int bitField0_;
    public static final int ULFRAME_FIELD_NUMBER = 1;
    private int ulFrame_;
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return Whether the ulFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return The ulFrame.
     */
    @java.lang.Override
    public int getUlFrame() {
      return ulFrame_;
    }

    public static final int ULSUBFRAME_FIELD_NUMBER = 2;
    private int ulSubFrame_;
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return Whether the ulSubFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlSubFrame() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return The ulSubFrame.
     */
    @java.lang.Override
    public int getUlSubFrame() {
      return ulSubFrame_;
    }

    public static final int ULCYCLE_FIELD_NUMBER = 3;
    private int ulCycle_;
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return Whether the ulCycle field is set.
     */
    @java.lang.Override
    public boolean hasUlCycle() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return The ulCycle.
     */
    @java.lang.Override
    public int getUlCycle() {
      return ulCycle_;
    }

    public static final int STEVENTINFO_FIELD_NUMBER = 4;
    private java.util.List<event_debug.DrcEventDebug.NoConesEventInfo> stEventInfo_;
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.NoConesEventInfo> getStEventInfoList() {
      return stEventInfo_;
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.NoConesEventInfoOrBuilder> 
        getStEventInfoOrBuilderList() {
      return stEventInfo_;
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public int getStEventInfoCount() {
      return stEventInfo_.size();
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesEventInfo getStEventInfo(int index) {
      return stEventInfo_.get(index);
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesEventInfoOrBuilder getStEventInfoOrBuilder(
        int index) {
      return stEventInfo_.get(index);
    }

    public static final int STDETECTORINFO_FIELD_NUMBER = 5;
    private java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo> stDetectorInfo_;
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo> getStDetectorInfoList() {
      return stDetectorInfo_;
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder> 
        getStDetectorInfoOrBuilderList() {
      return stDetectorInfo_;
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public int getStDetectorInfoCount() {
      return stDetectorInfo_.size();
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesDetectorInfo getStDetectorInfo(int index) {
      return stDetectorInfo_.get(index);
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
        int index) {
      return stDetectorInfo_.get(index);
    }

    public static final int ULDRCID_FIELD_NUMBER = 6;
    private int ulDrcId_;
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ulCycle_);
      }
      for (int i = 0; i < stEventInfo_.size(); i++) {
        output.writeMessage(4, stEventInfo_.get(i));
      }
      for (int i = 0; i < stDetectorInfo_.size(); i++) {
        output.writeMessage(5, stDetectorInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(6, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ulCycle_);
      }
      for (int i = 0; i < stEventInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, stEventInfo_.get(i));
      }
      for (int i = 0; i < stDetectorInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stDetectorInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES) obj;

      if (hasUlFrame() != other.hasUlFrame()) return false;
      if (hasUlFrame()) {
        if (getUlFrame()
            != other.getUlFrame()) return false;
      }
      if (hasUlSubFrame() != other.hasUlSubFrame()) return false;
      if (hasUlSubFrame()) {
        if (getUlSubFrame()
            != other.getUlSubFrame()) return false;
      }
      if (hasUlCycle() != other.hasUlCycle()) return false;
      if (hasUlCycle()) {
        if (getUlCycle()
            != other.getUlCycle()) return false;
      }
      if (!getStEventInfoList()
          .equals(other.getStEventInfoList())) return false;
      if (!getStDetectorInfoList()
          .equals(other.getStDetectorInfoList())) return false;
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUlFrame()) {
        hash = (37 * hash) + ULFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlFrame();
      }
      if (hasUlSubFrame()) {
        hash = (37 * hash) + ULSUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlSubFrame();
      }
      if (hasUlCycle()) {
        hash = (37 * hash) + ULCYCLE_FIELD_NUMBER;
        hash = (53 * hash) + getUlCycle();
      }
      if (getStEventInfoCount() > 0) {
        hash = (37 * hash) + STEVENTINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStEventInfoList().hashCode();
      }
      if (getStDetectorInfoCount() > 0) {
        hash = (37 * hash) + STDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStDetectorInfoList().hashCode();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *无锥桶调试信息
     * </pre>
     *
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_NO_CONES}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_NO_CONES)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONESOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStEventInfoFieldBuilder();
          getStDetectorInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ulFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ulSubFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ulCycle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stEventInfoBuilder_ == null) {
          stEventInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          stEventInfoBuilder_.clear();
        }
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          stDetectorInfoBuilder_.clear();
        }
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ulFrame_ = ulFrame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ulSubFrame_ = ulSubFrame_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ulCycle_ = ulCycle_;
          to_bitField0_ |= 0x00000004;
        }
        if (stEventInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            stEventInfo_ = java.util.Collections.unmodifiableList(stEventInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stEventInfo_ = stEventInfo_;
        } else {
          result.stEventInfo_ = stEventInfoBuilder_.build();
        }
        if (stDetectorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            stDetectorInfo_ = java.util.Collections.unmodifiableList(stDetectorInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.stDetectorInfo_ = stDetectorInfo_;
        } else {
          result.stDetectorInfo_ = stDetectorInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES.getDefaultInstance()) return this;
        if (other.hasUlFrame()) {
          setUlFrame(other.getUlFrame());
        }
        if (other.hasUlSubFrame()) {
          setUlSubFrame(other.getUlSubFrame());
        }
        if (other.hasUlCycle()) {
          setUlCycle(other.getUlCycle());
        }
        if (stEventInfoBuilder_ == null) {
          if (!other.stEventInfo_.isEmpty()) {
            if (stEventInfo_.isEmpty()) {
              stEventInfo_ = other.stEventInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStEventInfoIsMutable();
              stEventInfo_.addAll(other.stEventInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.stEventInfo_.isEmpty()) {
            if (stEventInfoBuilder_.isEmpty()) {
              stEventInfoBuilder_.dispose();
              stEventInfoBuilder_ = null;
              stEventInfo_ = other.stEventInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              stEventInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStEventInfoFieldBuilder() : null;
            } else {
              stEventInfoBuilder_.addAllMessages(other.stEventInfo_);
            }
          }
        }
        if (stDetectorInfoBuilder_ == null) {
          if (!other.stDetectorInfo_.isEmpty()) {
            if (stDetectorInfo_.isEmpty()) {
              stDetectorInfo_ = other.stDetectorInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStDetectorInfoIsMutable();
              stDetectorInfo_.addAll(other.stDetectorInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.stDetectorInfo_.isEmpty()) {
            if (stDetectorInfoBuilder_.isEmpty()) {
              stDetectorInfoBuilder_.dispose();
              stDetectorInfoBuilder_ = null;
              stDetectorInfo_ = other.stDetectorInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              stDetectorInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStDetectorInfoFieldBuilder() : null;
            } else {
              stDetectorInfoBuilder_.addAllMessages(other.stDetectorInfo_);
            }
          }
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ulFrame_ ;
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return Whether the ulFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return The ulFrame.
       */
      @java.lang.Override
      public int getUlFrame() {
        return ulFrame_;
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @param value The ulFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlFrame(int value) {
        bitField0_ |= 0x00000001;
        ulFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ulFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulSubFrame_ ;
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return Whether the ulSubFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlSubFrame() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return The ulSubFrame.
       */
      @java.lang.Override
      public int getUlSubFrame() {
        return ulSubFrame_;
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @param value The ulSubFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlSubFrame(int value) {
        bitField0_ |= 0x00000002;
        ulSubFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlSubFrame() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ulSubFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulCycle_ ;
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return Whether the ulCycle field is set.
       */
      @java.lang.Override
      public boolean hasUlCycle() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return The ulCycle.
       */
      @java.lang.Override
      public int getUlCycle() {
        return ulCycle_;
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @param value The ulCycle to set.
       * @return This builder for chaining.
       */
      public Builder setUlCycle(int value) {
        bitField0_ |= 0x00000004;
        ulCycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlCycle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ulCycle_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<event_debug.DrcEventDebug.NoConesEventInfo> stEventInfo_ =
        java.util.Collections.emptyList();
      private void ensureStEventInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          stEventInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesEventInfo>(stEventInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesEventInfo, event_debug.DrcEventDebug.NoConesEventInfo.Builder, event_debug.DrcEventDebug.NoConesEventInfoOrBuilder> stEventInfoBuilder_;

      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesEventInfo> getStEventInfoList() {
        if (stEventInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stEventInfo_);
        } else {
          return stEventInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public int getStEventInfoCount() {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.size();
        } else {
          return stEventInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.NoConesEventInfo getStEventInfo(int index) {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.get(index);
        } else {
          return stEventInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder setStEventInfo(
          int index, event_debug.DrcEventDebug.NoConesEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.set(index, value);
          onChanged();
        } else {
          stEventInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder setStEventInfo(
          int index, event_debug.DrcEventDebug.NoConesEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(event_debug.DrcEventDebug.NoConesEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.add(value);
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          int index, event_debug.DrcEventDebug.NoConesEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.add(index, value);
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          event_debug.DrcEventDebug.NoConesEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.add(builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          int index, event_debug.DrcEventDebug.NoConesEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder addAllStEventInfo(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.NoConesEventInfo> values) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stEventInfo_);
          onChanged();
        } else {
          stEventInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder clearStEventInfo() {
        if (stEventInfoBuilder_ == null) {
          stEventInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          stEventInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public Builder removeStEventInfo(int index) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.remove(index);
          onChanged();
        } else {
          stEventInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.NoConesEventInfo.Builder getStEventInfoBuilder(
          int index) {
        return getStEventInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.NoConesEventInfoOrBuilder getStEventInfoOrBuilder(
          int index) {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.get(index);  } else {
          return stEventInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.NoConesEventInfoOrBuilder> 
           getStEventInfoOrBuilderList() {
        if (stEventInfoBuilder_ != null) {
          return stEventInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stEventInfo_);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.NoConesEventInfo.Builder addStEventInfoBuilder() {
        return getStEventInfoFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.NoConesEventInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.NoConesEventInfo.Builder addStEventInfoBuilder(
          int index) {
        return getStEventInfoFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.NoConesEventInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesEventInfo.Builder> 
           getStEventInfoBuilderList() {
        return getStEventInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesEventInfo, event_debug.DrcEventDebug.NoConesEventInfo.Builder, event_debug.DrcEventDebug.NoConesEventInfoOrBuilder> 
          getStEventInfoFieldBuilder() {
        if (stEventInfoBuilder_ == null) {
          stEventInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.NoConesEventInfo, event_debug.DrcEventDebug.NoConesEventInfo.Builder, event_debug.DrcEventDebug.NoConesEventInfoOrBuilder>(
                  stEventInfo_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          stEventInfo_ = null;
        }
        return stEventInfoBuilder_;
      }

      private java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo> stDetectorInfo_ =
        java.util.Collections.emptyList();
      private void ensureStDetectorInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          stDetectorInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.NoConesDetectorInfo>(stDetectorInfo_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesDetectorInfo, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder> stDetectorInfoBuilder_;

      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo> getStDetectorInfoList() {
        if (stDetectorInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stDetectorInfo_);
        } else {
          return stDetectorInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public int getStDetectorInfoCount() {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.size();
        } else {
          return stDetectorInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.NoConesDetectorInfo getStDetectorInfo(int index) {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.get(index);
        } else {
          return stDetectorInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder setStDetectorInfo(
          int index, event_debug.DrcEventDebug.NoConesDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.set(index, value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder setStDetectorInfo(
          int index, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(event_debug.DrcEventDebug.NoConesDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          int index, event_debug.DrcEventDebug.NoConesDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(index, value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          event_debug.DrcEventDebug.NoConesDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          int index, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addAllStDetectorInfo(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.NoConesDetectorInfo> values) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stDetectorInfo_);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder clearStDetectorInfo() {
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          stDetectorInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder removeStDetectorInfo(int index) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.remove(index);
          onChanged();
        } else {
          stDetectorInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.NoConesDetectorInfo.Builder getStDetectorInfoBuilder(
          int index) {
        return getStDetectorInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
          int index) {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.get(index);  } else {
          return stDetectorInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder> 
           getStDetectorInfoOrBuilderList() {
        if (stDetectorInfoBuilder_ != null) {
          return stDetectorInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stDetectorInfo_);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.NoConesDetectorInfo.Builder addStDetectorInfoBuilder() {
        return getStDetectorInfoFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.NoConesDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.NoConesDetectorInfo.Builder addStDetectorInfoBuilder(
          int index) {
        return getStDetectorInfoFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.NoConesDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.NoConesDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.NoConesDetectorInfo.Builder> 
           getStDetectorInfoBuilderList() {
        return getStDetectorInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.NoConesDetectorInfo, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder> 
          getStDetectorInfoFieldBuilder() {
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.NoConesDetectorInfo, event_debug.DrcEventDebug.NoConesDetectorInfo.Builder, event_debug.DrcEventDebug.NoConesDetectorInfoOrBuilder>(
                  stDetectorInfo_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          stDetectorInfo_ = null;
        }
        return stDetectorInfoBuilder_;
      }

      private int ulDrcId_ ;
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00000020;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_NO_CONES)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_NO_CONES)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_NO_CONES>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_NO_CONES>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_NO_CONES parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_NO_CONES(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_NO_CONES> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_NO_CONES> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_NO_CONES getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrafficJamEventInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.TrafficJamEventInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return A list containing the mergeEventId.
     */
    java.util.List<java.lang.Long> getMergeEventIdList();
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return The count of mergeEventId.
     */
    int getMergeEventIdCount();
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @param index The index of the element to return.
     * @return The mergeEventId at the given index.
     */
    long getMergeEventId(int index);

    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return A list containing the slDetectorId.
     */
    java.util.List<java.lang.Integer> getSlDetectorIdList();
    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return The count of slDetectorId.
     */
    int getSlDetectorIdCount();
    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @param index The index of the element to return.
     * @return The slDetectorId at the given index.
     */
    int getSlDetectorId(int index);

    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    boolean hasDbUtmx();
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    double getDbUtmx();

    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    boolean hasDbUtmY();
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    double getDbUtmY();
  }
  /**
   * Protobuf type {@code event_debug.TrafficJamEventInfo}
   */
  public static final class TrafficJamEventInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.TrafficJamEventInfo)
      TrafficJamEventInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrafficJamEventInfo.newBuilder() to construct.
    private TrafficJamEventInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficJamEventInfo() {
      eventype_ = 1;
      mergeEventId_ = emptyLongList();
      slDetectorId_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrafficJamEventInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrafficJamEventInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                eventype_ = rawValue;
              }
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                mergeEventId_ = newLongList();
                mutable_bitField0_ |= 0x00000004;
              }
              mergeEventId_.addLong(input.readUInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                mergeEventId_ = newLongList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                mergeEventId_.addLong(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                slDetectorId_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              slDetectorId_.addInt(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                slDetectorId_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                slDetectorId_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 41: {
              bitField0_ |= 0x00000004;
              dbUtmx_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000008;
              dbUtmY_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          mergeEventId_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          slDetectorId_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamEventInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamEventInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.TrafficJamEventInfo.class, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder.class);
    }

    private int bitField0_;
    public static final int EVENTID_FIELD_NUMBER = 1;
    private long eventId_;
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *事件ID
     * </pre>
     *
     * <code>optional uint64 eventId = 1;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 2;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int MERGEEVENTID_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.LongList mergeEventId_;
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return A list containing the mergeEventId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMergeEventIdList() {
      return mergeEventId_;
    }
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @return The count of mergeEventId.
     */
    public int getMergeEventIdCount() {
      return mergeEventId_.size();
    }
    /**
     * <pre>
     *被合并的事件ID
     * </pre>
     *
     * <code>repeated uint64 mergeEventId = 3;</code>
     * @param index The index of the element to return.
     * @return The mergeEventId at the given index.
     */
    public long getMergeEventId(int index) {
      return mergeEventId_.getLong(index);
    }

    public static final int SLDETECTORID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList slDetectorId_;
    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return A list containing the slDetectorId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSlDetectorIdList() {
      return slDetectorId_;
    }
    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @return The count of slDetectorId.
     */
    public int getSlDetectorIdCount() {
      return slDetectorId_.size();
    }
    /**
     * <code>repeated int32 slDetectorId = 4;</code>
     * @param index The index of the element to return.
     * @return The slDetectorId at the given index.
     */
    public int getSlDetectorId(int index) {
      return slDetectorId_.getInt(index);
    }

    public static final int DBUTMX_FIELD_NUMBER = 5;
    private double dbUtmx_;
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmx() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *事件的位置
     * </pre>
     *
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    @java.lang.Override
    public double getDbUtmx() {
      return dbUtmx_;
    }

    public static final int DBUTMY_FIELD_NUMBER = 6;
    private double dbUtmY_;
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmY() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    @java.lang.Override
    public double getDbUtmY() {
      return dbUtmY_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, eventype_);
      }
      for (int i = 0; i < mergeEventId_.size(); i++) {
        output.writeUInt64(3, mergeEventId_.getLong(i));
      }
      for (int i = 0; i < slDetectorId_.size(); i++) {
        output.writeInt32(4, slDetectorId_.getInt(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(6, dbUtmY_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, eventype_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mergeEventId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(mergeEventId_.getLong(i));
        }
        size += dataSize;
        size += 1 * getMergeEventIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < slDetectorId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(slDetectorId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSlDetectorIdList().size();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, dbUtmY_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.TrafficJamEventInfo)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.TrafficJamEventInfo other = (event_debug.DrcEventDebug.TrafficJamEventInfo) obj;

      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (!getMergeEventIdList()
          .equals(other.getMergeEventIdList())) return false;
      if (!getSlDetectorIdList()
          .equals(other.getSlDetectorIdList())) return false;
      if (hasDbUtmx() != other.hasDbUtmx()) return false;
      if (hasDbUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmx())) return false;
      }
      if (hasDbUtmY() != other.hasDbUtmY()) return false;
      if (hasDbUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmY())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (getMergeEventIdCount() > 0) {
        hash = (37 * hash) + MERGEEVENTID_FIELD_NUMBER;
        hash = (53 * hash) + getMergeEventIdList().hashCode();
      }
      if (getSlDetectorIdCount() > 0) {
        hash = (37 * hash) + SLDETECTORID_FIELD_NUMBER;
        hash = (53 * hash) + getSlDetectorIdList().hashCode();
      }
      if (hasDbUtmx()) {
        hash = (37 * hash) + DBUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmx()));
      }
      if (hasDbUtmY()) {
        hash = (37 * hash) + DBUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmY()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamEventInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.TrafficJamEventInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.TrafficJamEventInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.TrafficJamEventInfo)
        event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamEventInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamEventInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.TrafficJamEventInfo.class, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.TrafficJamEventInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        mergeEventId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        slDetectorId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        dbUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamEventInfo_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamEventInfo getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.TrafficJamEventInfo.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamEventInfo build() {
        event_debug.DrcEventDebug.TrafficJamEventInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamEventInfo buildPartial() {
        event_debug.DrcEventDebug.TrafficJamEventInfo result = new event_debug.DrcEventDebug.TrafficJamEventInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventype_ = eventype_;
        if (((bitField0_ & 0x00000004) != 0)) {
          mergeEventId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.mergeEventId_ = mergeEventId_;
        if (((bitField0_ & 0x00000008) != 0)) {
          slDetectorId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.slDetectorId_ = slDetectorId_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dbUtmx_ = dbUtmx_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.dbUtmY_ = dbUtmY_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.TrafficJamEventInfo) {
          return mergeFrom((event_debug.DrcEventDebug.TrafficJamEventInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.TrafficJamEventInfo other) {
        if (other == event_debug.DrcEventDebug.TrafficJamEventInfo.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (!other.mergeEventId_.isEmpty()) {
          if (mergeEventId_.isEmpty()) {
            mergeEventId_ = other.mergeEventId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMergeEventIdIsMutable();
            mergeEventId_.addAll(other.mergeEventId_);
          }
          onChanged();
        }
        if (!other.slDetectorId_.isEmpty()) {
          if (slDetectorId_.isEmpty()) {
            slDetectorId_ = other.slDetectorId_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSlDetectorIdIsMutable();
            slDetectorId_.addAll(other.slDetectorId_);
          }
          onChanged();
        }
        if (other.hasDbUtmx()) {
          setDbUtmx(other.getDbUtmx());
        }
        if (other.hasDbUtmY()) {
          setDbUtmY(other.getDbUtmY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.TrafficJamEventInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.TrafficJamEventInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long eventId_ ;
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件ID
       * </pre>
       *
       * <code>optional uint64 eventId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList mergeEventId_ = emptyLongList();
      private void ensureMergeEventIdIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          mergeEventId_ = mutableCopy(mergeEventId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return A list containing the mergeEventId.
       */
      public java.util.List<java.lang.Long>
          getMergeEventIdList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(mergeEventId_) : mergeEventId_;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return The count of mergeEventId.
       */
      public int getMergeEventIdCount() {
        return mergeEventId_.size();
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param index The index of the element to return.
       * @return The mergeEventId at the given index.
       */
      public long getMergeEventId(int index) {
        return mergeEventId_.getLong(index);
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param index The index to set the value at.
       * @param value The mergeEventId to set.
       * @return This builder for chaining.
       */
      public Builder setMergeEventId(
          int index, long value) {
        ensureMergeEventIdIsMutable();
        mergeEventId_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param value The mergeEventId to add.
       * @return This builder for chaining.
       */
      public Builder addMergeEventId(long value) {
        ensureMergeEventIdIsMutable();
        mergeEventId_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @param values The mergeEventId to add.
       * @return This builder for chaining.
       */
      public Builder addAllMergeEventId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMergeEventIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mergeEventId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被合并的事件ID
       * </pre>
       *
       * <code>repeated uint64 mergeEventId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeEventId() {
        mergeEventId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList slDetectorId_ = emptyIntList();
      private void ensureSlDetectorIdIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          slDetectorId_ = mutableCopy(slDetectorId_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return A list containing the slDetectorId.
       */
      public java.util.List<java.lang.Integer>
          getSlDetectorIdList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(slDetectorId_) : slDetectorId_;
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return The count of slDetectorId.
       */
      public int getSlDetectorIdCount() {
        return slDetectorId_.size();
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param index The index of the element to return.
       * @return The slDetectorId at the given index.
       */
      public int getSlDetectorId(int index) {
        return slDetectorId_.getInt(index);
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param index The index to set the value at.
       * @param value The slDetectorId to set.
       * @return This builder for chaining.
       */
      public Builder setSlDetectorId(
          int index, int value) {
        ensureSlDetectorIdIsMutable();
        slDetectorId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param value The slDetectorId to add.
       * @return This builder for chaining.
       */
      public Builder addSlDetectorId(int value) {
        ensureSlDetectorIdIsMutable();
        slDetectorId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @param values The slDetectorId to add.
       * @return This builder for chaining.
       */
      public Builder addAllSlDetectorId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSlDetectorIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, slDetectorId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 slDetectorId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlDetectorId() {
        slDetectorId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private double dbUtmx_ ;
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return Whether the dbUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmx() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return The dbUtmx.
       */
      @java.lang.Override
      public double getDbUtmx() {
        return dbUtmx_;
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @param value The dbUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmx(double value) {
        bitField0_ |= 0x00000010;
        dbUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件的位置
       * </pre>
       *
       * <code>optional double dbUtmx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbUtmY_ ;
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return Whether the dbUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmY() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return The dbUtmY.
       */
      @java.lang.Override
      public double getDbUtmY() {
        return dbUtmY_;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @param value The dbUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmY(double value) {
        bitField0_ |= 0x00000020;
        dbUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dbUtmY_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.TrafficJamEventInfo)
    }

    // @@protoc_insertion_point(class_scope:event_debug.TrafficJamEventInfo)
    private static final event_debug.DrcEventDebug.TrafficJamEventInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.TrafficJamEventInfo();
    }

    public static event_debug.DrcEventDebug.TrafficJamEventInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrafficJamEventInfo>
        PARSER = new com.google.protobuf.AbstractParser<TrafficJamEventInfo>() {
      @java.lang.Override
      public TrafficJamEventInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrafficJamEventInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrafficJamEventInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrafficJamEventInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamEventInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrafficJamDetectorInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.TrafficJamDetectorInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return Whether the slId field is set.
     */
    boolean hasSlId();
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return The slId.
     */
    int getSlId();

    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return Whether the slState field is set.
     */
    boolean hasSlState();
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return The slState.
     */
    int getSlState();

    /**
     * <pre>
     *监测点平均速度
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 3;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    boolean hasDbAvgSpeed();
    /**
     * <pre>
     *监测点平均速度
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 3;</code>
     * @return The dbAvgSpeed.
     */
    double getDbAvgSpeed();

    /**
     * <pre>
     *监测点过车数量
     * </pre>
     *
     * <code>optional int32 slVels = 4;</code>
     * @return Whether the slVels field is set.
     */
    boolean hasSlVels();
    /**
     * <pre>
     *监测点过车数量
     * </pre>
     *
     * <code>optional int32 slVels = 4;</code>
     * @return The slVels.
     */
    int getSlVels();

    /**
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    boolean hasDbUtmx();
    /**
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    double getDbUtmx();

    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    boolean hasDbUtmY();
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    double getDbUtmY();
  }
  /**
   * Protobuf type {@code event_debug.TrafficJamDetectorInfo}
   */
  public static final class TrafficJamDetectorInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.TrafficJamDetectorInfo)
      TrafficJamDetectorInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrafficJamDetectorInfo.newBuilder() to construct.
    private TrafficJamDetectorInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficJamDetectorInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrafficJamDetectorInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrafficJamDetectorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              slId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              slState_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              dbAvgSpeed_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              slVels_ = input.readInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              dbUtmx_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              dbUtmY_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamDetectorInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamDetectorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.TrafficJamDetectorInfo.class, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SLID_FIELD_NUMBER = 1;
    private int slId_;
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return Whether the slId field is set.
     */
    @java.lang.Override
    public boolean hasSlId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 1;</code>
     * @return The slId.
     */
    @java.lang.Override
    public int getSlId() {
      return slId_;
    }

    public static final int SLSTATE_FIELD_NUMBER = 2;
    private int slState_;
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return Whether the slState field is set.
     */
    @java.lang.Override
    public boolean hasSlState() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *1表示未激活，2表示激活
     * </pre>
     *
     * <code>optional int32 slState = 2;</code>
     * @return The slState.
     */
    @java.lang.Override
    public int getSlState() {
      return slState_;
    }

    public static final int DBAVGSPEED_FIELD_NUMBER = 3;
    private double dbAvgSpeed_;
    /**
     * <pre>
     *监测点平均速度
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 3;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDbAvgSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *监测点平均速度
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 3;</code>
     * @return The dbAvgSpeed.
     */
    @java.lang.Override
    public double getDbAvgSpeed() {
      return dbAvgSpeed_;
    }

    public static final int SLVELS_FIELD_NUMBER = 4;
    private int slVels_;
    /**
     * <pre>
     *监测点过车数量
     * </pre>
     *
     * <code>optional int32 slVels = 4;</code>
     * @return Whether the slVels field is set.
     */
    @java.lang.Override
    public boolean hasSlVels() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *监测点过车数量
     * </pre>
     *
     * <code>optional int32 slVels = 4;</code>
     * @return The slVels.
     */
    @java.lang.Override
    public int getSlVels() {
      return slVels_;
    }

    public static final int DBUTMX_FIELD_NUMBER = 5;
    private double dbUtmx_;
    /**
     * <code>optional double dbUtmx = 5;</code>
     * @return Whether the dbUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmx() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double dbUtmx = 5;</code>
     * @return The dbUtmx.
     */
    @java.lang.Override
    public double getDbUtmx() {
      return dbUtmx_;
    }

    public static final int DBUTMY_FIELD_NUMBER = 6;
    private double dbUtmY_;
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return Whether the dbUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbUtmY() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional double dbUtmY = 6;</code>
     * @return The dbUtmY.
     */
    @java.lang.Override
    public double getDbUtmY() {
      return dbUtmY_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, slId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, slState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, slVels_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeDouble(6, dbUtmY_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, slId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, slState_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, slVels_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, dbUtmx_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, dbUtmY_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.TrafficJamDetectorInfo)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.TrafficJamDetectorInfo other = (event_debug.DrcEventDebug.TrafficJamDetectorInfo) obj;

      if (hasSlId() != other.hasSlId()) return false;
      if (hasSlId()) {
        if (getSlId()
            != other.getSlId()) return false;
      }
      if (hasSlState() != other.hasSlState()) return false;
      if (hasSlState()) {
        if (getSlState()
            != other.getSlState()) return false;
      }
      if (hasDbAvgSpeed() != other.hasDbAvgSpeed()) return false;
      if (hasDbAvgSpeed()) {
        if (java.lang.Double.doubleToLongBits(getDbAvgSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getDbAvgSpeed())) return false;
      }
      if (hasSlVels() != other.hasSlVels()) return false;
      if (hasSlVels()) {
        if (getSlVels()
            != other.getSlVels()) return false;
      }
      if (hasDbUtmx() != other.hasDbUtmx()) return false;
      if (hasDbUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmx())) return false;
      }
      if (hasDbUtmY() != other.hasDbUtmY()) return false;
      if (hasDbUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbUtmY())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSlId()) {
        hash = (37 * hash) + SLID_FIELD_NUMBER;
        hash = (53 * hash) + getSlId();
      }
      if (hasSlState()) {
        hash = (37 * hash) + SLSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getSlState();
      }
      if (hasDbAvgSpeed()) {
        hash = (37 * hash) + DBAVGSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbAvgSpeed()));
      }
      if (hasSlVels()) {
        hash = (37 * hash) + SLVELS_FIELD_NUMBER;
        hash = (53 * hash) + getSlVels();
      }
      if (hasDbUtmx()) {
        hash = (37 * hash) + DBUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmx()));
      }
      if (hasDbUtmY()) {
        hash = (37 * hash) + DBUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbUtmY()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.TrafficJamDetectorInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code event_debug.TrafficJamDetectorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.TrafficJamDetectorInfo)
        event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamDetectorInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamDetectorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.TrafficJamDetectorInfo.class, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.TrafficJamDetectorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        slId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        slState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dbAvgSpeed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        slVels_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dbUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_TrafficJamDetectorInfo_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo build() {
        event_debug.DrcEventDebug.TrafficJamDetectorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo buildPartial() {
        event_debug.DrcEventDebug.TrafficJamDetectorInfo result = new event_debug.DrcEventDebug.TrafficJamDetectorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.slId_ = slId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.slState_ = slState_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.dbAvgSpeed_ = dbAvgSpeed_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.slVels_ = slVels_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dbUtmx_ = dbUtmx_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.dbUtmY_ = dbUtmY_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.TrafficJamDetectorInfo) {
          return mergeFrom((event_debug.DrcEventDebug.TrafficJamDetectorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.TrafficJamDetectorInfo other) {
        if (other == event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance()) return this;
        if (other.hasSlId()) {
          setSlId(other.getSlId());
        }
        if (other.hasSlState()) {
          setSlState(other.getSlState());
        }
        if (other.hasDbAvgSpeed()) {
          setDbAvgSpeed(other.getDbAvgSpeed());
        }
        if (other.hasSlVels()) {
          setSlVels(other.getSlVels());
        }
        if (other.hasDbUtmx()) {
          setDbUtmx(other.getDbUtmx());
        }
        if (other.hasDbUtmY()) {
          setDbUtmY(other.getDbUtmY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.TrafficJamDetectorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.TrafficJamDetectorInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int slId_ ;
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return Whether the slId field is set.
       */
      @java.lang.Override
      public boolean hasSlId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return The slId.
       */
      @java.lang.Override
      public int getSlId() {
        return slId_;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @param value The slId to set.
       * @return This builder for chaining.
       */
      public Builder setSlId(int value) {
        bitField0_ |= 0x00000001;
        slId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        slId_ = 0;
        onChanged();
        return this;
      }

      private int slState_ ;
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return Whether the slState field is set.
       */
      @java.lang.Override
      public boolean hasSlState() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return The slState.
       */
      @java.lang.Override
      public int getSlState() {
        return slState_;
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @param value The slState to set.
       * @return This builder for chaining.
       */
      public Builder setSlState(int value) {
        bitField0_ |= 0x00000002;
        slState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1表示未激活，2表示激活
       * </pre>
       *
       * <code>optional int32 slState = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        slState_ = 0;
        onChanged();
        return this;
      }

      private double dbAvgSpeed_ ;
      /**
       * <pre>
       *监测点平均速度
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 3;</code>
       * @return Whether the dbAvgSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDbAvgSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *监测点平均速度
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 3;</code>
       * @return The dbAvgSpeed.
       */
      @java.lang.Override
      public double getDbAvgSpeed() {
        return dbAvgSpeed_;
      }
      /**
       * <pre>
       *监测点平均速度
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 3;</code>
       * @param value The dbAvgSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDbAvgSpeed(double value) {
        bitField0_ |= 0x00000004;
        dbAvgSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *监测点平均速度
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbAvgSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dbAvgSpeed_ = 0D;
        onChanged();
        return this;
      }

      private int slVels_ ;
      /**
       * <pre>
       *监测点过车数量
       * </pre>
       *
       * <code>optional int32 slVels = 4;</code>
       * @return Whether the slVels field is set.
       */
      @java.lang.Override
      public boolean hasSlVels() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *监测点过车数量
       * </pre>
       *
       * <code>optional int32 slVels = 4;</code>
       * @return The slVels.
       */
      @java.lang.Override
      public int getSlVels() {
        return slVels_;
      }
      /**
       * <pre>
       *监测点过车数量
       * </pre>
       *
       * <code>optional int32 slVels = 4;</code>
       * @param value The slVels to set.
       * @return This builder for chaining.
       */
      public Builder setSlVels(int value) {
        bitField0_ |= 0x00000008;
        slVels_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *监测点过车数量
       * </pre>
       *
       * <code>optional int32 slVels = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlVels() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slVels_ = 0;
        onChanged();
        return this;
      }

      private double dbUtmx_ ;
      /**
       * <code>optional double dbUtmx = 5;</code>
       * @return Whether the dbUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmx() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double dbUtmx = 5;</code>
       * @return The dbUtmx.
       */
      @java.lang.Override
      public double getDbUtmx() {
        return dbUtmx_;
      }
      /**
       * <code>optional double dbUtmx = 5;</code>
       * @param value The dbUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmx(double value) {
        bitField0_ |= 0x00000010;
        dbUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmx = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dbUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbUtmY_ ;
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return Whether the dbUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbUtmY() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return The dbUtmY.
       */
      @java.lang.Override
      public double getDbUtmY() {
        return dbUtmY_;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @param value The dbUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbUtmY(double value) {
        bitField0_ |= 0x00000020;
        dbUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double dbUtmY = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbUtmY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dbUtmY_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.TrafficJamDetectorInfo)
    }

    // @@protoc_insertion_point(class_scope:event_debug.TrafficJamDetectorInfo)
    private static final event_debug.DrcEventDebug.TrafficJamDetectorInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.TrafficJamDetectorInfo();
    }

    public static event_debug.DrcEventDebug.TrafficJamDetectorInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrafficJamDetectorInfo>
        PARSER = new com.google.protobuf.AbstractParser<TrafficJamDetectorInfo>() {
      @java.lang.Override
      public TrafficJamDetectorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrafficJamDetectorInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrafficJamDetectorInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrafficJamDetectorInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamDetectorInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_TRAFFIC_JAMOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return Whether the ulFrame field is set.
     */
    boolean hasUlFrame();
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return The ulFrame.
     */
    int getUlFrame();

    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return Whether the ulSubFrame field is set.
     */
    boolean hasUlSubFrame();
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return The ulSubFrame.
     */
    int getUlSubFrame();

    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return Whether the ulCycle field is set.
     */
    boolean hasUlCycle();
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return The ulCycle.
     */
    int getUlCycle();

    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo> 
        getStEventInfoList();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    event_debug.DrcEventDebug.TrafficJamEventInfo getStEventInfo(int index);
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    int getStEventInfoCount();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder> 
        getStEventInfoOrBuilderList();
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder getStEventInfoOrBuilder(
        int index);

    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> 
        getStDetectorInfoList();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    event_debug.DrcEventDebug.TrafficJamDetectorInfo getStDetectorInfo(int index);
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    int getStDetectorInfoCount();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
        getStDetectorInfoOrBuilderList();
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
        int index);

    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * <pre>
   *拥堵调试信息
   * </pre>
   *
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM}
   */
  public static final class DRC_EVENT_DEBUG_TRAFFIC_JAM extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM)
      DRC_EVENT_DEBUG_TRAFFIC_JAMOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_TRAFFIC_JAM.newBuilder() to construct.
    private DRC_EVENT_DEBUG_TRAFFIC_JAM(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_TRAFFIC_JAM() {
      stEventInfo_ = java.util.Collections.emptyList();
      stDetectorInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_TRAFFIC_JAM();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_TRAFFIC_JAM(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ulFrame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ulSubFrame_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ulCycle_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                stEventInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamEventInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              stEventInfo_.add(
                  input.readMessage(event_debug.DrcEventDebug.TrafficJamEventInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                stDetectorInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamDetectorInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              stDetectorInfo_.add(
                  input.readMessage(event_debug.DrcEventDebug.TrafficJamDetectorInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          stEventInfo_ = java.util.Collections.unmodifiableList(stEventInfo_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          stDetectorInfo_ = java.util.Collections.unmodifiableList(stDetectorInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.Builder.class);
    }

    private int bitField0_;
    public static final int ULFRAME_FIELD_NUMBER = 1;
    private int ulFrame_;
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return Whether the ulFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 ulFrame = 1;</code>
     * @return The ulFrame.
     */
    @java.lang.Override
    public int getUlFrame() {
      return ulFrame_;
    }

    public static final int ULSUBFRAME_FIELD_NUMBER = 2;
    private int ulSubFrame_;
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return Whether the ulSubFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlSubFrame() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 ulSubFrame = 2;</code>
     * @return The ulSubFrame.
     */
    @java.lang.Override
    public int getUlSubFrame() {
      return ulSubFrame_;
    }

    public static final int ULCYCLE_FIELD_NUMBER = 3;
    private int ulCycle_;
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return Whether the ulCycle field is set.
     */
    @java.lang.Override
    public boolean hasUlCycle() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *当前周期
     * </pre>
     *
     * <code>optional uint32 ulCycle = 3;</code>
     * @return The ulCycle.
     */
    @java.lang.Override
    public int getUlCycle() {
      return ulCycle_;
    }

    public static final int STEVENTINFO_FIELD_NUMBER = 4;
    private java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo> stEventInfo_;
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo> getStEventInfoList() {
      return stEventInfo_;
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder> 
        getStEventInfoOrBuilderList() {
      return stEventInfo_;
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public int getStEventInfoCount() {
      return stEventInfo_.size();
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamEventInfo getStEventInfo(int index) {
      return stEventInfo_.get(index);
    }
    /**
     * <pre>
     *事件信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder getStEventInfoOrBuilder(
        int index) {
      return stEventInfo_.get(index);
    }

    public static final int STDETECTORINFO_FIELD_NUMBER = 5;
    private java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> stDetectorInfo_;
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> getStDetectorInfoList() {
      return stDetectorInfo_;
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
        getStDetectorInfoOrBuilderList() {
      return stDetectorInfo_;
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public int getStDetectorInfoCount() {
      return stDetectorInfo_.size();
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamDetectorInfo getStDetectorInfo(int index) {
      return stDetectorInfo_.get(index);
    }
    /**
     * <pre>
     *检测器信息
     * </pre>
     *
     * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
        int index) {
      return stDetectorInfo_.get(index);
    }

    public static final int ULDRCID_FIELD_NUMBER = 6;
    private int ulDrcId_;
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 ulDrcId = 6;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ulCycle_);
      }
      for (int i = 0; i < stEventInfo_.size(); i++) {
        output.writeMessage(4, stEventInfo_.get(i));
      }
      for (int i = 0; i < stDetectorInfo_.size(); i++) {
        output.writeMessage(5, stDetectorInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(6, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ulCycle_);
      }
      for (int i = 0; i < stEventInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, stEventInfo_.get(i));
      }
      for (int i = 0; i < stDetectorInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stDetectorInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM) obj;

      if (hasUlFrame() != other.hasUlFrame()) return false;
      if (hasUlFrame()) {
        if (getUlFrame()
            != other.getUlFrame()) return false;
      }
      if (hasUlSubFrame() != other.hasUlSubFrame()) return false;
      if (hasUlSubFrame()) {
        if (getUlSubFrame()
            != other.getUlSubFrame()) return false;
      }
      if (hasUlCycle() != other.hasUlCycle()) return false;
      if (hasUlCycle()) {
        if (getUlCycle()
            != other.getUlCycle()) return false;
      }
      if (!getStEventInfoList()
          .equals(other.getStEventInfoList())) return false;
      if (!getStDetectorInfoList()
          .equals(other.getStDetectorInfoList())) return false;
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUlFrame()) {
        hash = (37 * hash) + ULFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlFrame();
      }
      if (hasUlSubFrame()) {
        hash = (37 * hash) + ULSUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlSubFrame();
      }
      if (hasUlCycle()) {
        hash = (37 * hash) + ULCYCLE_FIELD_NUMBER;
        hash = (53 * hash) + getUlCycle();
      }
      if (getStEventInfoCount() > 0) {
        hash = (37 * hash) + STEVENTINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStEventInfoList().hashCode();
      }
      if (getStDetectorInfoCount() > 0) {
        hash = (37 * hash) + STDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStDetectorInfoList().hashCode();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *拥堵调试信息
     * </pre>
     *
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAMOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStEventInfoFieldBuilder();
          getStDetectorInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ulFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ulSubFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ulCycle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stEventInfoBuilder_ == null) {
          stEventInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          stEventInfoBuilder_.clear();
        }
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          stDetectorInfoBuilder_.clear();
        }
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ulFrame_ = ulFrame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ulSubFrame_ = ulSubFrame_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ulCycle_ = ulCycle_;
          to_bitField0_ |= 0x00000004;
        }
        if (stEventInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            stEventInfo_ = java.util.Collections.unmodifiableList(stEventInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stEventInfo_ = stEventInfo_;
        } else {
          result.stEventInfo_ = stEventInfoBuilder_.build();
        }
        if (stDetectorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            stDetectorInfo_ = java.util.Collections.unmodifiableList(stDetectorInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.stDetectorInfo_ = stDetectorInfo_;
        } else {
          result.stDetectorInfo_ = stDetectorInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM.getDefaultInstance()) return this;
        if (other.hasUlFrame()) {
          setUlFrame(other.getUlFrame());
        }
        if (other.hasUlSubFrame()) {
          setUlSubFrame(other.getUlSubFrame());
        }
        if (other.hasUlCycle()) {
          setUlCycle(other.getUlCycle());
        }
        if (stEventInfoBuilder_ == null) {
          if (!other.stEventInfo_.isEmpty()) {
            if (stEventInfo_.isEmpty()) {
              stEventInfo_ = other.stEventInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStEventInfoIsMutable();
              stEventInfo_.addAll(other.stEventInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.stEventInfo_.isEmpty()) {
            if (stEventInfoBuilder_.isEmpty()) {
              stEventInfoBuilder_.dispose();
              stEventInfoBuilder_ = null;
              stEventInfo_ = other.stEventInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              stEventInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStEventInfoFieldBuilder() : null;
            } else {
              stEventInfoBuilder_.addAllMessages(other.stEventInfo_);
            }
          }
        }
        if (stDetectorInfoBuilder_ == null) {
          if (!other.stDetectorInfo_.isEmpty()) {
            if (stDetectorInfo_.isEmpty()) {
              stDetectorInfo_ = other.stDetectorInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStDetectorInfoIsMutable();
              stDetectorInfo_.addAll(other.stDetectorInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.stDetectorInfo_.isEmpty()) {
            if (stDetectorInfoBuilder_.isEmpty()) {
              stDetectorInfoBuilder_.dispose();
              stDetectorInfoBuilder_ = null;
              stDetectorInfo_ = other.stDetectorInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              stDetectorInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStDetectorInfoFieldBuilder() : null;
            } else {
              stDetectorInfoBuilder_.addAllMessages(other.stDetectorInfo_);
            }
          }
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ulFrame_ ;
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return Whether the ulFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return The ulFrame.
       */
      @java.lang.Override
      public int getUlFrame() {
        return ulFrame_;
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @param value The ulFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlFrame(int value) {
        bitField0_ |= 0x00000001;
        ulFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulFrame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ulFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulSubFrame_ ;
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return Whether the ulSubFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlSubFrame() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return The ulSubFrame.
       */
      @java.lang.Override
      public int getUlSubFrame() {
        return ulSubFrame_;
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @param value The ulSubFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlSubFrame(int value) {
        bitField0_ |= 0x00000002;
        ulSubFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulSubFrame = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlSubFrame() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ulSubFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulCycle_ ;
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return Whether the ulCycle field is set.
       */
      @java.lang.Override
      public boolean hasUlCycle() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return The ulCycle.
       */
      @java.lang.Override
      public int getUlCycle() {
        return ulCycle_;
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @param value The ulCycle to set.
       * @return This builder for chaining.
       */
      public Builder setUlCycle(int value) {
        bitField0_ |= 0x00000004;
        ulCycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前周期
       * </pre>
       *
       * <code>optional uint32 ulCycle = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlCycle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ulCycle_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo> stEventInfo_ =
        java.util.Collections.emptyList();
      private void ensureStEventInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          stEventInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamEventInfo>(stEventInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamEventInfo, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder, event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder> stEventInfoBuilder_;

      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo> getStEventInfoList() {
        if (stEventInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stEventInfo_);
        } else {
          return stEventInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public int getStEventInfoCount() {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.size();
        } else {
          return stEventInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamEventInfo getStEventInfo(int index) {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.get(index);
        } else {
          return stEventInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder setStEventInfo(
          int index, event_debug.DrcEventDebug.TrafficJamEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.set(index, value);
          onChanged();
        } else {
          stEventInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder setStEventInfo(
          int index, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(event_debug.DrcEventDebug.TrafficJamEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.add(value);
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          int index, event_debug.DrcEventDebug.TrafficJamEventInfo value) {
        if (stEventInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStEventInfoIsMutable();
          stEventInfo_.add(index, value);
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          event_debug.DrcEventDebug.TrafficJamEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.add(builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder addStEventInfo(
          int index, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder builderForValue) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          stEventInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder addAllStEventInfo(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.TrafficJamEventInfo> values) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stEventInfo_);
          onChanged();
        } else {
          stEventInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder clearStEventInfo() {
        if (stEventInfoBuilder_ == null) {
          stEventInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          stEventInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public Builder removeStEventInfo(int index) {
        if (stEventInfoBuilder_ == null) {
          ensureStEventInfoIsMutable();
          stEventInfo_.remove(index);
          onChanged();
        } else {
          stEventInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamEventInfo.Builder getStEventInfoBuilder(
          int index) {
        return getStEventInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder getStEventInfoOrBuilder(
          int index) {
        if (stEventInfoBuilder_ == null) {
          return stEventInfo_.get(index);  } else {
          return stEventInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder> 
           getStEventInfoOrBuilderList() {
        if (stEventInfoBuilder_ != null) {
          return stEventInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stEventInfo_);
        }
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamEventInfo.Builder addStEventInfoBuilder() {
        return getStEventInfoFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.TrafficJamEventInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamEventInfo.Builder addStEventInfoBuilder(
          int index) {
        return getStEventInfoFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.TrafficJamEventInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *事件信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamEventInfo stEventInfo = 4;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamEventInfo.Builder> 
           getStEventInfoBuilderList() {
        return getStEventInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamEventInfo, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder, event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder> 
          getStEventInfoFieldBuilder() {
        if (stEventInfoBuilder_ == null) {
          stEventInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.TrafficJamEventInfo, event_debug.DrcEventDebug.TrafficJamEventInfo.Builder, event_debug.DrcEventDebug.TrafficJamEventInfoOrBuilder>(
                  stEventInfo_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          stEventInfo_ = null;
        }
        return stEventInfoBuilder_;
      }

      private java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> stDetectorInfo_ =
        java.util.Collections.emptyList();
      private void ensureStDetectorInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          stDetectorInfo_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamDetectorInfo>(stDetectorInfo_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> stDetectorInfoBuilder_;

      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> getStDetectorInfoList() {
        if (stDetectorInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stDetectorInfo_);
        } else {
          return stDetectorInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public int getStDetectorInfoCount() {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.size();
        } else {
          return stDetectorInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo getStDetectorInfo(int index) {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.get(index);
        } else {
          return stDetectorInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder setStDetectorInfo(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.set(index, value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder setStDetectorInfo(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (stDetectorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(index, value);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addStDetectorInfo(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          stDetectorInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder addAllStDetectorInfo(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfo> values) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stDetectorInfo_);
          onChanged();
        } else {
          stDetectorInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder clearStDetectorInfo() {
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          stDetectorInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public Builder removeStDetectorInfo(int index) {
        if (stDetectorInfoBuilder_ == null) {
          ensureStDetectorInfoIsMutable();
          stDetectorInfo_.remove(index);
          onChanged();
        } else {
          stDetectorInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder getStDetectorInfoBuilder(
          int index) {
        return getStDetectorInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getStDetectorInfoOrBuilder(
          int index) {
        if (stDetectorInfoBuilder_ == null) {
          return stDetectorInfo_.get(index);  } else {
          return stDetectorInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
           getStDetectorInfoOrBuilderList() {
        if (stDetectorInfoBuilder_ != null) {
          return stDetectorInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stDetectorInfo_);
        }
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder addStDetectorInfoBuilder() {
        return getStDetectorInfoFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder addStDetectorInfoBuilder(
          int index) {
        return getStDetectorInfoFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *检测器信息
       * </pre>
       *
       * <code>repeated .event_debug.TrafficJamDetectorInfo stDetectorInfo = 5;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder> 
           getStDetectorInfoBuilderList() {
        return getStDetectorInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
          getStDetectorInfoFieldBuilder() {
        if (stDetectorInfoBuilder_ == null) {
          stDetectorInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder>(
                  stDetectorInfo_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          stDetectorInfo_ = null;
        }
        return stDetectorInfoBuilder_;
      }

      private int ulDrcId_ ;
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00000020;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulDrcId = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_TRAFFIC_JAM)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_JAM>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_TRAFFIC_JAM>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_TRAFFIC_JAM parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_TRAFFIC_JAM(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_JAM> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_TRAFFIC_JAM> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_TRAFFIC_JAM getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_DETECTOR_INFOOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> 
        getDetectorInfosList();
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    event_debug.DrcEventDebug.TrafficJamDetectorInfo getDetectorInfos(int index);
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    int getDetectorInfosCount();
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
        getDetectorInfosOrBuilderList();
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getDetectorInfosOrBuilder(
        int index);

    /**
     * <code>optional uint32 ulFrame = 2;</code>
     * @return Whether the ulFrame field is set.
     */
    boolean hasUlFrame();
    /**
     * <code>optional uint32 ulFrame = 2;</code>
     * @return The ulFrame.
     */
    int getUlFrame();

    /**
     * <code>optional uint32 ulSubFrame = 3;</code>
     * @return Whether the ulSubFrame field is set.
     */
    boolean hasUlSubFrame();
    /**
     * <code>optional uint32 ulSubFrame = 3;</code>
     * @return The ulSubFrame.
     */
    int getUlSubFrame();

    /**
     * <code>optional uint32 ulDrcId = 4;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <code>optional uint32 ulDrcId = 4;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * <pre>
   *监测器信息
   * </pre>
   *
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO}
   */
  public static final class DRC_EVENT_DEBUG_DETECTOR_INFO extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO)
      DRC_EVENT_DEBUG_DETECTOR_INFOOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_DETECTOR_INFO.newBuilder() to construct.
    private DRC_EVENT_DEBUG_DETECTOR_INFO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_DETECTOR_INFO() {
      detectorInfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_DETECTOR_INFO();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_DETECTOR_INFO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                detectorInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamDetectorInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              detectorInfos_.add(
                  input.readMessage(event_debug.DrcEventDebug.TrafficJamDetectorInfo.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              ulFrame_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              ulSubFrame_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          detectorInfos_ = java.util.Collections.unmodifiableList(detectorInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.Builder.class);
    }

    private int bitField0_;
    public static final int DETECTORINFOS_FIELD_NUMBER = 1;
    private java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> detectorInfos_;
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> getDetectorInfosList() {
      return detectorInfos_;
    }
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
        getDetectorInfosOrBuilderList() {
      return detectorInfos_;
    }
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    @java.lang.Override
    public int getDetectorInfosCount() {
      return detectorInfos_.size();
    }
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamDetectorInfo getDetectorInfos(int index) {
      return detectorInfos_.get(index);
    }
    /**
     * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
     */
    @java.lang.Override
    public event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getDetectorInfosOrBuilder(
        int index) {
      return detectorInfos_.get(index);
    }

    public static final int ULFRAME_FIELD_NUMBER = 2;
    private int ulFrame_;
    /**
     * <code>optional uint32 ulFrame = 2;</code>
     * @return Whether the ulFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 ulFrame = 2;</code>
     * @return The ulFrame.
     */
    @java.lang.Override
    public int getUlFrame() {
      return ulFrame_;
    }

    public static final int ULSUBFRAME_FIELD_NUMBER = 3;
    private int ulSubFrame_;
    /**
     * <code>optional uint32 ulSubFrame = 3;</code>
     * @return Whether the ulSubFrame field is set.
     */
    @java.lang.Override
    public boolean hasUlSubFrame() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 ulSubFrame = 3;</code>
     * @return The ulSubFrame.
     */
    @java.lang.Override
    public int getUlSubFrame() {
      return ulSubFrame_;
    }

    public static final int ULDRCID_FIELD_NUMBER = 4;
    private int ulDrcId_;
    /**
     * <code>optional uint32 ulDrcId = 4;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 ulDrcId = 4;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < detectorInfos_.size(); i++) {
        output.writeMessage(1, detectorInfos_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(2, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(3, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < detectorInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, detectorInfos_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ulFrame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ulSubFrame_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO) obj;

      if (!getDetectorInfosList()
          .equals(other.getDetectorInfosList())) return false;
      if (hasUlFrame() != other.hasUlFrame()) return false;
      if (hasUlFrame()) {
        if (getUlFrame()
            != other.getUlFrame()) return false;
      }
      if (hasUlSubFrame() != other.hasUlSubFrame()) return false;
      if (hasUlSubFrame()) {
        if (getUlSubFrame()
            != other.getUlSubFrame()) return false;
      }
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDetectorInfosCount() > 0) {
        hash = (37 * hash) + DETECTORINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getDetectorInfosList().hashCode();
      }
      if (hasUlFrame()) {
        hash = (37 * hash) + ULFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlFrame();
      }
      if (hasUlSubFrame()) {
        hash = (37 * hash) + ULSUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getUlSubFrame();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *监测器信息
     * </pre>
     *
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFOOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDetectorInfosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (detectorInfosBuilder_ == null) {
          detectorInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          detectorInfosBuilder_.clear();
        }
        ulFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ulSubFrame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (detectorInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            detectorInfos_ = java.util.Collections.unmodifiableList(detectorInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.detectorInfos_ = detectorInfos_;
        } else {
          result.detectorInfos_ = detectorInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ulFrame_ = ulFrame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ulSubFrame_ = ulSubFrame_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO.getDefaultInstance()) return this;
        if (detectorInfosBuilder_ == null) {
          if (!other.detectorInfos_.isEmpty()) {
            if (detectorInfos_.isEmpty()) {
              detectorInfos_ = other.detectorInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDetectorInfosIsMutable();
              detectorInfos_.addAll(other.detectorInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.detectorInfos_.isEmpty()) {
            if (detectorInfosBuilder_.isEmpty()) {
              detectorInfosBuilder_.dispose();
              detectorInfosBuilder_ = null;
              detectorInfos_ = other.detectorInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              detectorInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDetectorInfosFieldBuilder() : null;
            } else {
              detectorInfosBuilder_.addAllMessages(other.detectorInfos_);
            }
          }
        }
        if (other.hasUlFrame()) {
          setUlFrame(other.getUlFrame());
        }
        if (other.hasUlSubFrame()) {
          setUlSubFrame(other.getUlSubFrame());
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> detectorInfos_ =
        java.util.Collections.emptyList();
      private void ensureDetectorInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          detectorInfos_ = new java.util.ArrayList<event_debug.DrcEventDebug.TrafficJamDetectorInfo>(detectorInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> detectorInfosBuilder_;

      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo> getDetectorInfosList() {
        if (detectorInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detectorInfos_);
        } else {
          return detectorInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public int getDetectorInfosCount() {
        if (detectorInfosBuilder_ == null) {
          return detectorInfos_.size();
        } else {
          return detectorInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo getDetectorInfos(int index) {
        if (detectorInfosBuilder_ == null) {
          return detectorInfos_.get(index);
        } else {
          return detectorInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder setDetectorInfos(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (detectorInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetectorInfosIsMutable();
          detectorInfos_.set(index, value);
          onChanged();
        } else {
          detectorInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder setDetectorInfos(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (detectorInfosBuilder_ == null) {
          ensureDetectorInfosIsMutable();
          detectorInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          detectorInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder addDetectorInfos(event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (detectorInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetectorInfosIsMutable();
          detectorInfos_.add(value);
          onChanged();
        } else {
          detectorInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder addDetectorInfos(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo value) {
        if (detectorInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetectorInfosIsMutable();
          detectorInfos_.add(index, value);
          onChanged();
        } else {
          detectorInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder addDetectorInfos(
          event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (detectorInfosBuilder_ == null) {
          ensureDetectorInfosIsMutable();
          detectorInfos_.add(builderForValue.build());
          onChanged();
        } else {
          detectorInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder addDetectorInfos(
          int index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder builderForValue) {
        if (detectorInfosBuilder_ == null) {
          ensureDetectorInfosIsMutable();
          detectorInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          detectorInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder addAllDetectorInfos(
          java.lang.Iterable<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfo> values) {
        if (detectorInfosBuilder_ == null) {
          ensureDetectorInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, detectorInfos_);
          onChanged();
        } else {
          detectorInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder clearDetectorInfos() {
        if (detectorInfosBuilder_ == null) {
          detectorInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          detectorInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public Builder removeDetectorInfos(int index) {
        if (detectorInfosBuilder_ == null) {
          ensureDetectorInfosIsMutable();
          detectorInfos_.remove(index);
          onChanged();
        } else {
          detectorInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder getDetectorInfosBuilder(
          int index) {
        return getDetectorInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder getDetectorInfosOrBuilder(
          int index) {
        if (detectorInfosBuilder_ == null) {
          return detectorInfos_.get(index);  } else {
          return detectorInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public java.util.List<? extends event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
           getDetectorInfosOrBuilderList() {
        if (detectorInfosBuilder_ != null) {
          return detectorInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detectorInfos_);
        }
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder addDetectorInfosBuilder() {
        return getDetectorInfosFieldBuilder().addBuilder(
            event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder addDetectorInfosBuilder(
          int index) {
        return getDetectorInfosFieldBuilder().addBuilder(
            index, event_debug.DrcEventDebug.TrafficJamDetectorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .event_debug.TrafficJamDetectorInfo detectorInfos = 1;</code>
       */
      public java.util.List<event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder> 
           getDetectorInfosBuilderList() {
        return getDetectorInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder> 
          getDetectorInfosFieldBuilder() {
        if (detectorInfosBuilder_ == null) {
          detectorInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              event_debug.DrcEventDebug.TrafficJamDetectorInfo, event_debug.DrcEventDebug.TrafficJamDetectorInfo.Builder, event_debug.DrcEventDebug.TrafficJamDetectorInfoOrBuilder>(
                  detectorInfos_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          detectorInfos_ = null;
        }
        return detectorInfosBuilder_;
      }

      private int ulFrame_ ;
      /**
       * <code>optional uint32 ulFrame = 2;</code>
       * @return Whether the ulFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlFrame() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 ulFrame = 2;</code>
       * @return The ulFrame.
       */
      @java.lang.Override
      public int getUlFrame() {
        return ulFrame_;
      }
      /**
       * <code>optional uint32 ulFrame = 2;</code>
       * @param value The ulFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlFrame(int value) {
        bitField0_ |= 0x00000002;
        ulFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulFrame = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlFrame() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ulFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulSubFrame_ ;
      /**
       * <code>optional uint32 ulSubFrame = 3;</code>
       * @return Whether the ulSubFrame field is set.
       */
      @java.lang.Override
      public boolean hasUlSubFrame() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 ulSubFrame = 3;</code>
       * @return The ulSubFrame.
       */
      @java.lang.Override
      public int getUlSubFrame() {
        return ulSubFrame_;
      }
      /**
       * <code>optional uint32 ulSubFrame = 3;</code>
       * @param value The ulSubFrame to set.
       * @return This builder for chaining.
       */
      public Builder setUlSubFrame(int value) {
        bitField0_ |= 0x00000004;
        ulSubFrame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulSubFrame = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlSubFrame() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ulSubFrame_ = 0;
        onChanged();
        return this;
      }

      private int ulDrcId_ ;
      /**
       * <code>optional uint32 ulDrcId = 4;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 ulDrcId = 4;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <code>optional uint32 ulDrcId = 4;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00000008;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulDrcId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_DETECTOR_INFO)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_DETECTOR_INFO>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_DETECTOR_INFO>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_DETECTOR_INFO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_DETECTOR_INFO(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_DETECTOR_INFO> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_DETECTOR_INFO> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_DETECTOR_INFO getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_ULTRA_LOW_SPEEDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    boolean hasFrame();
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    int getFrame();

    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    boolean hasSubframe();
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    int getSubframe();

    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return Whether the ulstate field is set.
     */
    boolean hasUlstate();
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return The ulstate.
     */
    int getUlstate();

    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return Whether the ulUUID field is set.
     */
    boolean hasUlUUID();
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return The ulUUID.
     */
    long getUlUUID();

    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return Whether the dbObsUtmx field is set.
     */
    boolean hasDbObsUtmx();
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return The dbObsUtmx.
     */
    double getDbObsUtmx();

    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return Whether the dbObsUtmY field is set.
     */
    boolean hasDbObsUtmY();
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return The dbObsUtmY.
     */
    double getDbObsUtmY();

    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return Whether the slId field is set.
     */
    boolean hasSlId();
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return The slId.
     */
    int getSlId();

    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    boolean hasDbAvgSpeed();
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return The dbAvgSpeed.
     */
    double getDbAvgSpeed();

    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return Whether the dbObsSpeed field is set.
     */
    boolean hasDbObsSpeed();
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return The dbObsSpeed.
     */
    double getDbObsSpeed();

    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return Whether the ulDrsuId field is set.
     */
    boolean hasUlDrsuId();
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return The ulDrsuId.
     */
    int getUlDrsuId();

    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return Whether the ulLandId field is set.
     */
    boolean hasUlLandId();
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return The ulLandId.
     */
    int getUlLandId();

    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return Whether the ulHDlaneId field is set.
     */
    boolean hasUlHDlaneId();
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return The ulHDlaneId.
     */
    int getUlHDlaneId();

    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    boolean hasUlHDConnectionId();
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return The ulHDConnectionId.
     */
    int getUlHDConnectionId();

    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return Whether the strPlateNo field is set.
     */
    boolean hasStrPlateNo();
    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The strPlateNo.
     */
    java.lang.String getStrPlateNo();
    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The bytes for strPlateNo.
     */
    com.google.protobuf.ByteString
        getStrPlateNoBytes();

    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    boolean hasStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The strDetectorInfo.
     */
    java.lang.String getStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The bytes for strDetectorInfo.
     */
    com.google.protobuf.ByteString
        getStrDetectorInfoBytes();

    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * <pre>
   *超低速事件调试信息
   * </pre>
   *
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED}
   */
  public static final class DRC_EVENT_DEBUG_ULTRA_LOW_SPEED extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)
      DRC_EVENT_DEBUG_ULTRA_LOW_SPEEDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.newBuilder() to construct.
    private DRC_EVENT_DEBUG_ULTRA_LOW_SPEED(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_ULTRA_LOW_SPEED() {
      eventype_ = 1;
      strPlateNo_ = "";
      strDetectorInfo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_ULTRA_LOW_SPEED();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_ULTRA_LOW_SPEED(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              frame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subframe_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventId_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                eventype_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ulstate_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ulUUID_ = input.readUInt64();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              dbObsUtmx_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              dbObsUtmY_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              slId_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              dbAvgSpeed_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              dbObsSpeed_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              ulDrsuId_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              ulLandId_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              ulHDlaneId_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              ulHDConnectionId_ = input.readUInt32();
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              strPlateNo_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              strDetectorInfo_ = bs;
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.Builder.class);
    }

    private int bitField0_;
    public static final int FRAME_FIELD_NUMBER = 1;
    private int frame_;
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    @java.lang.Override
    public boolean hasFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    @java.lang.Override
    public int getFrame() {
      return frame_;
    }

    public static final int SUBFRAME_FIELD_NUMBER = 2;
    private int subframe_;
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    @java.lang.Override
    public boolean hasSubframe() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    @java.lang.Override
    public int getSubframe() {
      return subframe_;
    }

    public static final int EVENTID_FIELD_NUMBER = 3;
    private long eventId_;
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 4;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int ULSTATE_FIELD_NUMBER = 5;
    private int ulstate_;
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return Whether the ulstate field is set.
     */
    @java.lang.Override
    public boolean hasUlstate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return The ulstate.
     */
    @java.lang.Override
    public int getUlstate() {
      return ulstate_;
    }

    public static final int ULUUID_FIELD_NUMBER = 6;
    private long ulUUID_;
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return Whether the ulUUID field is set.
     */
    @java.lang.Override
    public boolean hasUlUUID() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return The ulUUID.
     */
    @java.lang.Override
    public long getUlUUID() {
      return ulUUID_;
    }

    public static final int DBOBSUTMX_FIELD_NUMBER = 7;
    private double dbObsUtmx_;
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return Whether the dbObsUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbObsUtmx() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return The dbObsUtmx.
     */
    @java.lang.Override
    public double getDbObsUtmx() {
      return dbObsUtmx_;
    }

    public static final int DBOBSUTMY_FIELD_NUMBER = 8;
    private double dbObsUtmY_;
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return Whether the dbObsUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbObsUtmY() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return The dbObsUtmY.
     */
    @java.lang.Override
    public double getDbObsUtmY() {
      return dbObsUtmY_;
    }

    public static final int SLID_FIELD_NUMBER = 9;
    private int slId_;
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return Whether the slId field is set.
     */
    @java.lang.Override
    public boolean hasSlId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return The slId.
     */
    @java.lang.Override
    public int getSlId() {
      return slId_;
    }

    public static final int DBAVGSPEED_FIELD_NUMBER = 10;
    private double dbAvgSpeed_;
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDbAvgSpeed() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return The dbAvgSpeed.
     */
    @java.lang.Override
    public double getDbAvgSpeed() {
      return dbAvgSpeed_;
    }

    public static final int DBOBSSPEED_FIELD_NUMBER = 11;
    private double dbObsSpeed_;
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return Whether the dbObsSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDbObsSpeed() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return The dbObsSpeed.
     */
    @java.lang.Override
    public double getDbObsSpeed() {
      return dbObsSpeed_;
    }

    public static final int ULDRSUID_FIELD_NUMBER = 12;
    private int ulDrsuId_;
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return Whether the ulDrsuId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrsuId() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return The ulDrsuId.
     */
    @java.lang.Override
    public int getUlDrsuId() {
      return ulDrsuId_;
    }

    public static final int ULLANDID_FIELD_NUMBER = 13;
    private int ulLandId_;
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return Whether the ulLandId field is set.
     */
    @java.lang.Override
    public boolean hasUlLandId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return The ulLandId.
     */
    @java.lang.Override
    public int getUlLandId() {
      return ulLandId_;
    }

    public static final int ULHDLANEID_FIELD_NUMBER = 14;
    private int ulHDlaneId_;
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return Whether the ulHDlaneId field is set.
     */
    @java.lang.Override
    public boolean hasUlHDlaneId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return The ulHDlaneId.
     */
    @java.lang.Override
    public int getUlHDlaneId() {
      return ulHDlaneId_;
    }

    public static final int ULHDCONNECTIONID_FIELD_NUMBER = 15;
    private int ulHDConnectionId_;
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    @java.lang.Override
    public boolean hasUlHDConnectionId() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return The ulHDConnectionId.
     */
    @java.lang.Override
    public int getUlHDConnectionId() {
      return ulHDConnectionId_;
    }

    public static final int STRPLATENO_FIELD_NUMBER = 16;
    private volatile java.lang.Object strPlateNo_;
    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return Whether the strPlateNo field is set.
     */
    @java.lang.Override
    public boolean hasStrPlateNo() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The strPlateNo.
     */
    @java.lang.Override
    public java.lang.String getStrPlateNo() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strPlateNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌    
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The bytes for strPlateNo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrPlateNoBytes() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strPlateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRDETECTORINFO_FIELD_NUMBER = 17;
    private volatile java.lang.Object strDetectorInfo_;
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    @java.lang.Override
    public boolean hasStrDetectorInfo() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The strDetectorInfo.
     */
    @java.lang.Override
    public java.lang.String getStrDetectorInfo() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strDetectorInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The bytes for strDetectorInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrDetectorInfoBytes() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strDetectorInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ULDRCID_FIELD_NUMBER = 18;
    private int ulDrcId_;
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, ulstate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, ulUUID_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, dbObsUtmx_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, dbObsUtmY_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, slId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, dbObsSpeed_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(12, ulDrsuId_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeUInt32(13, ulLandId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(14, ulHDlaneId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(15, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, strPlateNo_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt32(18, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ulstate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, ulUUID_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, dbObsUtmx_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, dbObsUtmY_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, slId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, dbObsSpeed_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, ulDrsuId_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, ulLandId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, ulHDlaneId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, strPlateNo_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED) obj;

      if (hasFrame() != other.hasFrame()) return false;
      if (hasFrame()) {
        if (getFrame()
            != other.getFrame()) return false;
      }
      if (hasSubframe() != other.hasSubframe()) return false;
      if (hasSubframe()) {
        if (getSubframe()
            != other.getSubframe()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (hasUlstate() != other.hasUlstate()) return false;
      if (hasUlstate()) {
        if (getUlstate()
            != other.getUlstate()) return false;
      }
      if (hasUlUUID() != other.hasUlUUID()) return false;
      if (hasUlUUID()) {
        if (getUlUUID()
            != other.getUlUUID()) return false;
      }
      if (hasDbObsUtmx() != other.hasDbObsUtmx()) return false;
      if (hasDbObsUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbObsUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsUtmx())) return false;
      }
      if (hasDbObsUtmY() != other.hasDbObsUtmY()) return false;
      if (hasDbObsUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbObsUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsUtmY())) return false;
      }
      if (hasSlId() != other.hasSlId()) return false;
      if (hasSlId()) {
        if (getSlId()
            != other.getSlId()) return false;
      }
      if (hasDbAvgSpeed() != other.hasDbAvgSpeed()) return false;
      if (hasDbAvgSpeed()) {
        if (java.lang.Double.doubleToLongBits(getDbAvgSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getDbAvgSpeed())) return false;
      }
      if (hasDbObsSpeed() != other.hasDbObsSpeed()) return false;
      if (hasDbObsSpeed()) {
        if (java.lang.Double.doubleToLongBits(getDbObsSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsSpeed())) return false;
      }
      if (hasUlDrsuId() != other.hasUlDrsuId()) return false;
      if (hasUlDrsuId()) {
        if (getUlDrsuId()
            != other.getUlDrsuId()) return false;
      }
      if (hasUlLandId() != other.hasUlLandId()) return false;
      if (hasUlLandId()) {
        if (getUlLandId()
            != other.getUlLandId()) return false;
      }
      if (hasUlHDlaneId() != other.hasUlHDlaneId()) return false;
      if (hasUlHDlaneId()) {
        if (getUlHDlaneId()
            != other.getUlHDlaneId()) return false;
      }
      if (hasUlHDConnectionId() != other.hasUlHDConnectionId()) return false;
      if (hasUlHDConnectionId()) {
        if (getUlHDConnectionId()
            != other.getUlHDConnectionId()) return false;
      }
      if (hasStrPlateNo() != other.hasStrPlateNo()) return false;
      if (hasStrPlateNo()) {
        if (!getStrPlateNo()
            .equals(other.getStrPlateNo())) return false;
      }
      if (hasStrDetectorInfo() != other.hasStrDetectorInfo()) return false;
      if (hasStrDetectorInfo()) {
        if (!getStrDetectorInfo()
            .equals(other.getStrDetectorInfo())) return false;
      }
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrame()) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrame();
      }
      if (hasSubframe()) {
        hash = (37 * hash) + SUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getSubframe();
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (hasUlstate()) {
        hash = (37 * hash) + ULSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getUlstate();
      }
      if (hasUlUUID()) {
        hash = (37 * hash) + ULUUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUlUUID());
      }
      if (hasDbObsUtmx()) {
        hash = (37 * hash) + DBOBSUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsUtmx()));
      }
      if (hasDbObsUtmY()) {
        hash = (37 * hash) + DBOBSUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsUtmY()));
      }
      if (hasSlId()) {
        hash = (37 * hash) + SLID_FIELD_NUMBER;
        hash = (53 * hash) + getSlId();
      }
      if (hasDbAvgSpeed()) {
        hash = (37 * hash) + DBAVGSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbAvgSpeed()));
      }
      if (hasDbObsSpeed()) {
        hash = (37 * hash) + DBOBSSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsSpeed()));
      }
      if (hasUlDrsuId()) {
        hash = (37 * hash) + ULDRSUID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrsuId();
      }
      if (hasUlLandId()) {
        hash = (37 * hash) + ULLANDID_FIELD_NUMBER;
        hash = (53 * hash) + getUlLandId();
      }
      if (hasUlHDlaneId()) {
        hash = (37 * hash) + ULHDLANEID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDlaneId();
      }
      if (hasUlHDConnectionId()) {
        hash = (37 * hash) + ULHDCONNECTIONID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDConnectionId();
      }
      if (hasStrPlateNo()) {
        hash = (37 * hash) + STRPLATENO_FIELD_NUMBER;
        hash = (53 * hash) + getStrPlateNo().hashCode();
      }
      if (hasStrDetectorInfo()) {
        hash = (37 * hash) + STRDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStrDetectorInfo().hashCode();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *超低速事件调试信息
     * </pre>
     *
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEEDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        ulstate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ulUUID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        dbObsUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        dbObsUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        slId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        dbAvgSpeed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        dbObsSpeed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        ulDrsuId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        ulLandId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        ulHDlaneId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        ulHDConnectionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        strPlateNo_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        strDetectorInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frame_ = frame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.subframe_ = subframe_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventype_ = eventype_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ulstate_ = ulstate_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulUUID_ = ulUUID_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.dbObsUtmx_ = dbObsUtmx_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.dbObsUtmY_ = dbObsUtmY_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.slId_ = slId_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.dbAvgSpeed_ = dbAvgSpeed_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.dbObsSpeed_ = dbObsSpeed_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.ulDrsuId_ = ulDrsuId_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.ulLandId_ = ulLandId_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.ulHDlaneId_ = ulHDlaneId_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.ulHDConnectionId_ = ulHDConnectionId_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          to_bitField0_ |= 0x00008000;
        }
        result.strPlateNo_ = strPlateNo_;
        if (((from_bitField0_ & 0x00010000) != 0)) {
          to_bitField0_ |= 0x00010000;
        }
        result.strDetectorInfo_ = strDetectorInfo_;
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00020000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED.getDefaultInstance()) return this;
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasSubframe()) {
          setSubframe(other.getSubframe());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (other.hasUlstate()) {
          setUlstate(other.getUlstate());
        }
        if (other.hasUlUUID()) {
          setUlUUID(other.getUlUUID());
        }
        if (other.hasDbObsUtmx()) {
          setDbObsUtmx(other.getDbObsUtmx());
        }
        if (other.hasDbObsUtmY()) {
          setDbObsUtmY(other.getDbObsUtmY());
        }
        if (other.hasSlId()) {
          setSlId(other.getSlId());
        }
        if (other.hasDbAvgSpeed()) {
          setDbAvgSpeed(other.getDbAvgSpeed());
        }
        if (other.hasDbObsSpeed()) {
          setDbObsSpeed(other.getDbObsSpeed());
        }
        if (other.hasUlDrsuId()) {
          setUlDrsuId(other.getUlDrsuId());
        }
        if (other.hasUlLandId()) {
          setUlLandId(other.getUlLandId());
        }
        if (other.hasUlHDlaneId()) {
          setUlHDlaneId(other.getUlHDlaneId());
        }
        if (other.hasUlHDConnectionId()) {
          setUlHDConnectionId(other.getUlHDConnectionId());
        }
        if (other.hasStrPlateNo()) {
          bitField0_ |= 0x00008000;
          strPlateNo_ = other.strPlateNo_;
          onChanged();
        }
        if (other.hasStrDetectorInfo()) {
          bitField0_ |= 0x00010000;
          strDetectorInfo_ = other.strDetectorInfo_;
          onChanged();
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frame_ ;
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return Whether the frame field is set.
       */
      @java.lang.Override
      public boolean hasFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return The frame.
       */
      @java.lang.Override
      public int getFrame() {
        return frame_;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @param value The frame to set.
       * @return This builder for chaining.
       */
      public Builder setFrame(int value) {
        bitField0_ |= 0x00000001;
        frame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frame_ = 0;
        onChanged();
        return this;
      }

      private int subframe_ ;
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return Whether the subframe field is set.
       */
      @java.lang.Override
      public boolean hasSubframe() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return The subframe.
       */
      @java.lang.Override
      public int getSubframe() {
        return subframe_;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @param value The subframe to set.
       * @return This builder for chaining.
       */
      public Builder setSubframe(int value) {
        bitField0_ |= 0x00000002;
        subframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubframe() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subframe_ = 0;
        onChanged();
        return this;
      }

      private long eventId_ ;
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000004;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private int ulstate_ ;
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return Whether the ulstate field is set.
       */
      @java.lang.Override
      public boolean hasUlstate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return The ulstate.
       */
      @java.lang.Override
      public int getUlstate() {
        return ulstate_;
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @param value The ulstate to set.
       * @return This builder for chaining.
       */
      public Builder setUlstate(int value) {
        bitField0_ |= 0x00000010;
        ulstate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlstate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ulstate_ = 0;
        onChanged();
        return this;
      }

      private long ulUUID_ ;
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return Whether the ulUUID field is set.
       */
      @java.lang.Override
      public boolean hasUlUUID() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return The ulUUID.
       */
      @java.lang.Override
      public long getUlUUID() {
        return ulUUID_;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @param value The ulUUID to set.
       * @return This builder for chaining.
       */
      public Builder setUlUUID(long value) {
        bitField0_ |= 0x00000020;
        ulUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlUUID() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulUUID_ = 0L;
        onChanged();
        return this;
      }

      private double dbObsUtmx_ ;
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return Whether the dbObsUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbObsUtmx() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return The dbObsUtmx.
       */
      @java.lang.Override
      public double getDbObsUtmx() {
        return dbObsUtmx_;
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @param value The dbObsUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsUtmx(double value) {
        bitField0_ |= 0x00000040;
        dbObsUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsUtmx() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dbObsUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbObsUtmY_ ;
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return Whether the dbObsUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbObsUtmY() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return The dbObsUtmY.
       */
      @java.lang.Override
      public double getDbObsUtmY() {
        return dbObsUtmY_;
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @param value The dbObsUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsUtmY(double value) {
        bitField0_ |= 0x00000080;
        dbObsUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsUtmY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dbObsUtmY_ = 0D;
        onChanged();
        return this;
      }

      private int slId_ ;
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return Whether the slId field is set.
       */
      @java.lang.Override
      public boolean hasSlId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return The slId.
       */
      @java.lang.Override
      public int getSlId() {
        return slId_;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @param value The slId to set.
       * @return This builder for chaining.
       */
      public Builder setSlId(int value) {
        bitField0_ |= 0x00000100;
        slId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        slId_ = 0;
        onChanged();
        return this;
      }

      private double dbAvgSpeed_ ;
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return Whether the dbAvgSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDbAvgSpeed() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return The dbAvgSpeed.
       */
      @java.lang.Override
      public double getDbAvgSpeed() {
        return dbAvgSpeed_;
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @param value The dbAvgSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDbAvgSpeed(double value) {
        bitField0_ |= 0x00000200;
        dbAvgSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbAvgSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dbAvgSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double dbObsSpeed_ ;
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return Whether the dbObsSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDbObsSpeed() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return The dbObsSpeed.
       */
      @java.lang.Override
      public double getDbObsSpeed() {
        return dbObsSpeed_;
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @param value The dbObsSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsSpeed(double value) {
        bitField0_ |= 0x00000400;
        dbObsSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsSpeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dbObsSpeed_ = 0D;
        onChanged();
        return this;
      }

      private int ulDrsuId_ ;
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return Whether the ulDrsuId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrsuId() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return The ulDrsuId.
       */
      @java.lang.Override
      public int getUlDrsuId() {
        return ulDrsuId_;
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @param value The ulDrsuId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrsuId(int value) {
        bitField0_ |= 0x00000800;
        ulDrsuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrsuId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        ulDrsuId_ = 0;
        onChanged();
        return this;
      }

      private int ulLandId_ ;
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return Whether the ulLandId field is set.
       */
      @java.lang.Override
      public boolean hasUlLandId() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return The ulLandId.
       */
      @java.lang.Override
      public int getUlLandId() {
        return ulLandId_;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @param value The ulLandId to set.
       * @return This builder for chaining.
       */
      public Builder setUlLandId(int value) {
        bitField0_ |= 0x00001000;
        ulLandId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlLandId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ulLandId_ = 0;
        onChanged();
        return this;
      }

      private int ulHDlaneId_ ;
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return Whether the ulHDlaneId field is set.
       */
      @java.lang.Override
      public boolean hasUlHDlaneId() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return The ulHDlaneId.
       */
      @java.lang.Override
      public int getUlHDlaneId() {
        return ulHDlaneId_;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @param value The ulHDlaneId to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDlaneId(int value) {
        bitField0_ |= 0x00002000;
        ulHDlaneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDlaneId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ulHDlaneId_ = 0;
        onChanged();
        return this;
      }

      private int ulHDConnectionId_ ;
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return Whether the ulHDConnectionId field is set.
       */
      @java.lang.Override
      public boolean hasUlHDConnectionId() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return The ulHDConnectionId.
       */
      @java.lang.Override
      public int getUlHDConnectionId() {
        return ulHDConnectionId_;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @param value The ulHDConnectionId to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDConnectionId(int value) {
        bitField0_ |= 0x00004000;
        ulHDConnectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDConnectionId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ulHDConnectionId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object strPlateNo_ = "";
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return Whether the strPlateNo field is set.
       */
      public boolean hasStrPlateNo() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return The strPlateNo.
       */
      public java.lang.String getStrPlateNo() {
        java.lang.Object ref = strPlateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strPlateNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return The bytes for strPlateNo.
       */
      public com.google.protobuf.ByteString
          getStrPlateNoBytes() {
        java.lang.Object ref = strPlateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strPlateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @param value The strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        strPlateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrPlateNo() {
        bitField0_ = (bitField0_ & ~0x00008000);
        strPlateNo_ = getDefaultInstance().getStrPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌    
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @param value The bytes for strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        strPlateNo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object strDetectorInfo_ = "";
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return Whether the strDetectorInfo field is set.
       */
      public boolean hasStrDetectorInfo() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return The strDetectorInfo.
       */
      public java.lang.String getStrDetectorInfo() {
        java.lang.Object ref = strDetectorInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strDetectorInfo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return The bytes for strDetectorInfo.
       */
      public com.google.protobuf.ByteString
          getStrDetectorInfoBytes() {
        java.lang.Object ref = strDetectorInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strDetectorInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @param value The strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrDetectorInfo() {
        bitField0_ = (bitField0_ & ~0x00010000);
        strDetectorInfo_ = getDefaultInstance().getStrDetectorInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @param value The bytes for strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }

      private int ulDrcId_ ;
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00020000;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_ULTRA_LOW_SPEED>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_ULTRA_LOW_SPEED>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_ULTRA_LOW_SPEED parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_ULTRA_LOW_SPEED(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_ULTRA_LOW_SPEED> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_ULTRA_LOW_SPEED> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_ULTRA_LOW_SPEED getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DRC_EVENT_DEBUG_LOW_SPEEDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_debug.DRC_EVENT_DEBUG_LOW_SPEED)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    boolean hasFrame();
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    int getFrame();

    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    boolean hasSubframe();
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    int getSubframe();

    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    long getEventId();

    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    boolean hasEventype();
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype();

    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return Whether the ulstate field is set.
     */
    boolean hasUlstate();
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return The ulstate.
     */
    int getUlstate();

    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return Whether the ulUUID field is set.
     */
    boolean hasUlUUID();
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return The ulUUID.
     */
    long getUlUUID();

    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return Whether the dbObsUtmx field is set.
     */
    boolean hasDbObsUtmx();
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return The dbObsUtmx.
     */
    double getDbObsUtmx();

    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return Whether the dbObsUtmY field is set.
     */
    boolean hasDbObsUtmY();
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return The dbObsUtmY.
     */
    double getDbObsUtmY();

    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return Whether the slId field is set.
     */
    boolean hasSlId();
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return The slId.
     */
    int getSlId();

    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    boolean hasDbAvgSpeed();
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return The dbAvgSpeed.
     */
    double getDbAvgSpeed();

    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return Whether the dbObsSpeed field is set.
     */
    boolean hasDbObsSpeed();
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return The dbObsSpeed.
     */
    double getDbObsSpeed();

    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return Whether the ulDrsuId field is set.
     */
    boolean hasUlDrsuId();
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return The ulDrsuId.
     */
    int getUlDrsuId();

    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return Whether the ulLandId field is set.
     */
    boolean hasUlLandId();
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return The ulLandId.
     */
    int getUlLandId();

    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return Whether the ulHDlaneId field is set.
     */
    boolean hasUlHDlaneId();
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return The ulHDlaneId.
     */
    int getUlHDlaneId();

    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    boolean hasUlHDConnectionId();
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return The ulHDConnectionId.
     */
    int getUlHDConnectionId();

    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return Whether the strPlateNo field is set.
     */
    boolean hasStrPlateNo();
    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The strPlateNo.
     */
    java.lang.String getStrPlateNo();
    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The bytes for strPlateNo.
     */
    com.google.protobuf.ByteString
        getStrPlateNoBytes();

    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    boolean hasStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The strDetectorInfo.
     */
    java.lang.String getStrDetectorInfo();
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The bytes for strDetectorInfo.
     */
    com.google.protobuf.ByteString
        getStrDetectorInfoBytes();

    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return Whether the ulDrcId field is set.
     */
    boolean hasUlDrcId();
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return The ulDrcId.
     */
    int getUlDrcId();
  }
  /**
   * <pre>
   *低速事件调试信息
   * </pre>
   *
   * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_LOW_SPEED}
   */
  public static final class DRC_EVENT_DEBUG_LOW_SPEED extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:event_debug.DRC_EVENT_DEBUG_LOW_SPEED)
      DRC_EVENT_DEBUG_LOW_SPEEDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DRC_EVENT_DEBUG_LOW_SPEED.newBuilder() to construct.
    private DRC_EVENT_DEBUG_LOW_SPEED(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DRC_EVENT_DEBUG_LOW_SPEED() {
      eventype_ = 1;
      strPlateNo_ = "";
      strDetectorInfo_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DRC_EVENT_DEBUG_LOW_SPEED();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DRC_EVENT_DEBUG_LOW_SPEED(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              frame_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              subframe_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventId_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              if_proto_common.IfProtoCommon.EVENT_TPYE_E value = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                eventype_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ulstate_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ulUUID_ = input.readUInt64();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              dbObsUtmx_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              dbObsUtmY_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              slId_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              dbAvgSpeed_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              dbObsSpeed_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              ulDrsuId_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              ulLandId_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              ulHDlaneId_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              ulHDConnectionId_ = input.readUInt32();
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              strPlateNo_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              strDetectorInfo_ = bs;
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              ulDrcId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.Builder.class);
    }

    private int bitField0_;
    public static final int FRAME_FIELD_NUMBER = 1;
    private int frame_;
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return Whether the frame field is set.
     */
    @java.lang.Override
    public boolean hasFrame() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *帧数 ulSystemFrame
     * </pre>
     *
     * <code>optional uint32 frame = 1;</code>
     * @return The frame.
     */
    @java.lang.Override
    public int getFrame() {
      return frame_;
    }

    public static final int SUBFRAME_FIELD_NUMBER = 2;
    private int subframe_;
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return Whether the subframe field is set.
     */
    @java.lang.Override
    public boolean hasSubframe() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *子帧数 ulSystemSubFrame
     * </pre>
     *
     * <code>optional uint32 subframe = 2;</code>
     * @return The subframe.
     */
    @java.lang.Override
    public int getSubframe() {
      return subframe_;
    }

    public static final int EVENTID_FIELD_NUMBER = 3;
    private long eventId_;
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *事件id Base Event id
     * </pre>
     *
     * <code>optional uint64 eventId = 3;</code>
     * @return The eventId.
     */
    @java.lang.Override
    public long getEventId() {
      return eventId_;
    }

    public static final int EVENTYPE_FIELD_NUMBER = 4;
    private int eventype_;
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return Whether the eventype field is set.
     */
    @java.lang.Override public boolean hasEventype() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *事件类型
     * </pre>
     *
     * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
     * @return The eventype.
     */
    @java.lang.Override public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
      @SuppressWarnings("deprecation")
      if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
      return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
    }

    public static final int ULSTATE_FIELD_NUMBER = 5;
    private int ulstate_;
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return Whether the ulstate field is set.
     */
    @java.lang.Override
    public boolean hasUlstate() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *事件状态 0:创建, 1:更新, 2:解除
     * </pre>
     *
     * <code>optional uint32 ulstate = 5;</code>
     * @return The ulstate.
     */
    @java.lang.Override
    public int getUlstate() {
      return ulstate_;
    }

    public static final int ULUUID_FIELD_NUMBER = 6;
    private long ulUUID_;
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return Whether the ulUUID field is set.
     */
    @java.lang.Override
    public boolean hasUlUUID() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     *当前障碍物id
     * </pre>
     *
     * <code>optional uint64 ulUUID = 6;</code>
     * @return The ulUUID.
     */
    @java.lang.Override
    public long getUlUUID() {
      return ulUUID_;
    }

    public static final int DBOBSUTMX_FIELD_NUMBER = 7;
    private double dbObsUtmx_;
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return Whether the dbObsUtmx field is set.
     */
    @java.lang.Override
    public boolean hasDbObsUtmx() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     *障碍物坐标_X
     * </pre>
     *
     * <code>optional double dbObsUtmx = 7;</code>
     * @return The dbObsUtmx.
     */
    @java.lang.Override
    public double getDbObsUtmx() {
      return dbObsUtmx_;
    }

    public static final int DBOBSUTMY_FIELD_NUMBER = 8;
    private double dbObsUtmY_;
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return Whether the dbObsUtmY field is set.
     */
    @java.lang.Override
    public boolean hasDbObsUtmY() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     *障碍物坐标_Y   
     * </pre>
     *
     * <code>optional double dbObsUtmY = 8;</code>
     * @return The dbObsUtmY.
     */
    @java.lang.Override
    public double getDbObsUtmY() {
      return dbObsUtmY_;
    }

    public static final int SLID_FIELD_NUMBER = 9;
    private int slId_;
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return Whether the slId field is set.
     */
    @java.lang.Override
    public boolean hasSlId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     *检测器ID
     * </pre>
     *
     * <code>optional int32 slId = 9;</code>
     * @return The slId.
     */
    @java.lang.Override
    public int getSlId() {
      return slId_;
    }

    public static final int DBAVGSPEED_FIELD_NUMBER = 10;
    private double dbAvgSpeed_;
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return Whether the dbAvgSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDbAvgSpeed() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     *监测点平均速度 ,单位m/s
     * </pre>
     *
     * <code>optional double dbAvgSpeed = 10;</code>
     * @return The dbAvgSpeed.
     */
    @java.lang.Override
    public double getDbAvgSpeed() {
      return dbAvgSpeed_;
    }

    public static final int DBOBSSPEED_FIELD_NUMBER = 11;
    private double dbObsSpeed_;
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return Whether the dbObsSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDbObsSpeed() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     *障碍物速度 , 单位m/s
     * </pre>
     *
     * <code>optional double dbObsSpeed = 11;</code>
     * @return The dbObsSpeed.
     */
    @java.lang.Override
    public double getDbObsSpeed() {
      return dbObsSpeed_;
    }

    public static final int ULDRSUID_FIELD_NUMBER = 12;
    private int ulDrsuId_;
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return Whether the ulDrsuId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrsuId() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     *drsu id
     * </pre>
     *
     * <code>optional uint32 ulDrsuId = 12;</code>
     * @return The ulDrsuId.
     */
    @java.lang.Override
    public int getUlDrsuId() {
      return ulDrsuId_;
    }

    public static final int ULLANDID_FIELD_NUMBER = 13;
    private int ulLandId_;
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return Whether the ulLandId field is set.
     */
    @java.lang.Override
    public boolean hasUlLandId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     *lane id
     * </pre>
     *
     * <code>optional uint32 ulLandId = 13;</code>
     * @return The ulLandId.
     */
    @java.lang.Override
    public int getUlLandId() {
      return ulLandId_;
    }

    public static final int ULHDLANEID_FIELD_NUMBER = 14;
    private int ulHDlaneId_;
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return Whether the ulHDlaneId field is set.
     */
    @java.lang.Override
    public boolean hasUlHDlaneId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     *高精地图的lane id
     * </pre>
     *
     * <code>optional uint32 ulHDlaneId = 14;</code>
     * @return The ulHDlaneId.
     */
    @java.lang.Override
    public int getUlHDlaneId() {
      return ulHDlaneId_;
    }

    public static final int ULHDCONNECTIONID_FIELD_NUMBER = 15;
    private int ulHDConnectionId_;
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return Whether the ulHDConnectionId field is set.
     */
    @java.lang.Override
    public boolean hasUlHDConnectionId() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     *高精地图的connection id
     * </pre>
     *
     * <code>optional uint32 ulHDConnectionId = 15;</code>
     * @return The ulHDConnectionId.
     */
    @java.lang.Override
    public int getUlHDConnectionId() {
      return ulHDConnectionId_;
    }

    public static final int STRPLATENO_FIELD_NUMBER = 16;
    private volatile java.lang.Object strPlateNo_;
    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return Whether the strPlateNo field is set.
     */
    @java.lang.Override
    public boolean hasStrPlateNo() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The strPlateNo.
     */
    @java.lang.Override
    public java.lang.String getStrPlateNo() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strPlateNo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌  
     * </pre>
     *
     * <code>optional string strPlateNo = 16;</code>
     * @return The bytes for strPlateNo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrPlateNoBytes() {
      java.lang.Object ref = strPlateNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strPlateNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRDETECTORINFO_FIELD_NUMBER = 17;
    private volatile java.lang.Object strDetectorInfo_;
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return Whether the strDetectorInfo field is set.
     */
    @java.lang.Override
    public boolean hasStrDetectorInfo() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The strDetectorInfo.
     */
    @java.lang.Override
    public java.lang.String getStrDetectorInfo() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strDetectorInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *事件参考的检测器ID,格式如: 1010,1011,1012
     * </pre>
     *
     * <code>optional string strDetectorInfo = 17;</code>
     * @return The bytes for strDetectorInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrDetectorInfoBytes() {
      java.lang.Object ref = strDetectorInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strDetectorInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ULDRCID_FIELD_NUMBER = 18;
    private int ulDrcId_;
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return Whether the ulDrcId field is set.
     */
    @java.lang.Override
    public boolean hasUlDrcId() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 ulDrcId = 18;</code>
     * @return The ulDrcId.
     */
    @java.lang.Override
    public int getUlDrcId() {
      return ulDrcId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, ulstate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, ulUUID_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, dbObsUtmx_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, dbObsUtmY_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, slId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeDouble(11, dbObsSpeed_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt32(12, ulDrsuId_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeUInt32(13, ulLandId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(14, ulHDlaneId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(15, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, strPlateNo_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeUInt32(18, ulDrcId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frame_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, subframe_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, eventype_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ulstate_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, ulUUID_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, dbObsUtmx_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, dbObsUtmY_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, slId_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, dbAvgSpeed_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, dbObsSpeed_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, ulDrsuId_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, ulLandId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, ulHDlaneId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, ulHDConnectionId_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, strPlateNo_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, strDetectorInfo_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, ulDrcId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED)) {
        return super.equals(obj);
      }
      event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED other = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED) obj;

      if (hasFrame() != other.hasFrame()) return false;
      if (hasFrame()) {
        if (getFrame()
            != other.getFrame()) return false;
      }
      if (hasSubframe() != other.hasSubframe()) return false;
      if (hasSubframe()) {
        if (getSubframe()
            != other.getSubframe()) return false;
      }
      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (getEventId()
            != other.getEventId()) return false;
      }
      if (hasEventype() != other.hasEventype()) return false;
      if (hasEventype()) {
        if (eventype_ != other.eventype_) return false;
      }
      if (hasUlstate() != other.hasUlstate()) return false;
      if (hasUlstate()) {
        if (getUlstate()
            != other.getUlstate()) return false;
      }
      if (hasUlUUID() != other.hasUlUUID()) return false;
      if (hasUlUUID()) {
        if (getUlUUID()
            != other.getUlUUID()) return false;
      }
      if (hasDbObsUtmx() != other.hasDbObsUtmx()) return false;
      if (hasDbObsUtmx()) {
        if (java.lang.Double.doubleToLongBits(getDbObsUtmx())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsUtmx())) return false;
      }
      if (hasDbObsUtmY() != other.hasDbObsUtmY()) return false;
      if (hasDbObsUtmY()) {
        if (java.lang.Double.doubleToLongBits(getDbObsUtmY())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsUtmY())) return false;
      }
      if (hasSlId() != other.hasSlId()) return false;
      if (hasSlId()) {
        if (getSlId()
            != other.getSlId()) return false;
      }
      if (hasDbAvgSpeed() != other.hasDbAvgSpeed()) return false;
      if (hasDbAvgSpeed()) {
        if (java.lang.Double.doubleToLongBits(getDbAvgSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getDbAvgSpeed())) return false;
      }
      if (hasDbObsSpeed() != other.hasDbObsSpeed()) return false;
      if (hasDbObsSpeed()) {
        if (java.lang.Double.doubleToLongBits(getDbObsSpeed())
            != java.lang.Double.doubleToLongBits(
                other.getDbObsSpeed())) return false;
      }
      if (hasUlDrsuId() != other.hasUlDrsuId()) return false;
      if (hasUlDrsuId()) {
        if (getUlDrsuId()
            != other.getUlDrsuId()) return false;
      }
      if (hasUlLandId() != other.hasUlLandId()) return false;
      if (hasUlLandId()) {
        if (getUlLandId()
            != other.getUlLandId()) return false;
      }
      if (hasUlHDlaneId() != other.hasUlHDlaneId()) return false;
      if (hasUlHDlaneId()) {
        if (getUlHDlaneId()
            != other.getUlHDlaneId()) return false;
      }
      if (hasUlHDConnectionId() != other.hasUlHDConnectionId()) return false;
      if (hasUlHDConnectionId()) {
        if (getUlHDConnectionId()
            != other.getUlHDConnectionId()) return false;
      }
      if (hasStrPlateNo() != other.hasStrPlateNo()) return false;
      if (hasStrPlateNo()) {
        if (!getStrPlateNo()
            .equals(other.getStrPlateNo())) return false;
      }
      if (hasStrDetectorInfo() != other.hasStrDetectorInfo()) return false;
      if (hasStrDetectorInfo()) {
        if (!getStrDetectorInfo()
            .equals(other.getStrDetectorInfo())) return false;
      }
      if (hasUlDrcId() != other.hasUlDrcId()) return false;
      if (hasUlDrcId()) {
        if (getUlDrcId()
            != other.getUlDrcId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrame()) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrame();
      }
      if (hasSubframe()) {
        hash = (37 * hash) + SUBFRAME_FIELD_NUMBER;
        hash = (53 * hash) + getSubframe();
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventId());
      }
      if (hasEventype()) {
        hash = (37 * hash) + EVENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventype_;
      }
      if (hasUlstate()) {
        hash = (37 * hash) + ULSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getUlstate();
      }
      if (hasUlUUID()) {
        hash = (37 * hash) + ULUUID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUlUUID());
      }
      if (hasDbObsUtmx()) {
        hash = (37 * hash) + DBOBSUTMX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsUtmx()));
      }
      if (hasDbObsUtmY()) {
        hash = (37 * hash) + DBOBSUTMY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsUtmY()));
      }
      if (hasSlId()) {
        hash = (37 * hash) + SLID_FIELD_NUMBER;
        hash = (53 * hash) + getSlId();
      }
      if (hasDbAvgSpeed()) {
        hash = (37 * hash) + DBAVGSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbAvgSpeed()));
      }
      if (hasDbObsSpeed()) {
        hash = (37 * hash) + DBOBSSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDbObsSpeed()));
      }
      if (hasUlDrsuId()) {
        hash = (37 * hash) + ULDRSUID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrsuId();
      }
      if (hasUlLandId()) {
        hash = (37 * hash) + ULLANDID_FIELD_NUMBER;
        hash = (53 * hash) + getUlLandId();
      }
      if (hasUlHDlaneId()) {
        hash = (37 * hash) + ULHDLANEID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDlaneId();
      }
      if (hasUlHDConnectionId()) {
        hash = (37 * hash) + ULHDCONNECTIONID_FIELD_NUMBER;
        hash = (53 * hash) + getUlHDConnectionId();
      }
      if (hasStrPlateNo()) {
        hash = (37 * hash) + STRPLATENO_FIELD_NUMBER;
        hash = (53 * hash) + getStrPlateNo().hashCode();
      }
      if (hasStrDetectorInfo()) {
        hash = (37 * hash) + STRDETECTORINFO_FIELD_NUMBER;
        hash = (53 * hash) + getStrDetectorInfo().hashCode();
      }
      if (hasUlDrcId()) {
        hash = (37 * hash) + ULDRCID_FIELD_NUMBER;
        hash = (53 * hash) + getUlDrcId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *低速事件调试信息
     * </pre>
     *
     * Protobuf type {@code event_debug.DRC_EVENT_DEBUG_LOW_SPEED}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_debug.DRC_EVENT_DEBUG_LOW_SPEED)
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEEDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.class, event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.Builder.class);
      }

      // Construct using event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frame_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        subframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventype_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        ulstate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ulUUID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        dbObsUtmx_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        dbObsUtmY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        slId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        dbAvgSpeed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        dbObsSpeed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        ulDrsuId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        ulLandId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        ulHDlaneId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        ulHDConnectionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        strPlateNo_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        strDetectorInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        ulDrcId_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_debug.DrcEventDebug.internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED getDefaultInstanceForType() {
        return event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.getDefaultInstance();
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED build() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED buildPartial() {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED result = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frame_ = frame_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.subframe_ = subframe_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventype_ = eventype_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ulstate_ = ulstate_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ulUUID_ = ulUUID_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.dbObsUtmx_ = dbObsUtmx_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.dbObsUtmY_ = dbObsUtmY_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.slId_ = slId_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.dbAvgSpeed_ = dbAvgSpeed_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.dbObsSpeed_ = dbObsSpeed_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.ulDrsuId_ = ulDrsuId_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.ulLandId_ = ulLandId_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.ulHDlaneId_ = ulHDlaneId_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.ulHDConnectionId_ = ulHDConnectionId_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          to_bitField0_ |= 0x00008000;
        }
        result.strPlateNo_ = strPlateNo_;
        if (((from_bitField0_ & 0x00010000) != 0)) {
          to_bitField0_ |= 0x00010000;
        }
        result.strDetectorInfo_ = strDetectorInfo_;
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.ulDrcId_ = ulDrcId_;
          to_bitField0_ |= 0x00020000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED) {
          return mergeFrom((event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED other) {
        if (other == event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED.getDefaultInstance()) return this;
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasSubframe()) {
          setSubframe(other.getSubframe());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventype()) {
          setEventype(other.getEventype());
        }
        if (other.hasUlstate()) {
          setUlstate(other.getUlstate());
        }
        if (other.hasUlUUID()) {
          setUlUUID(other.getUlUUID());
        }
        if (other.hasDbObsUtmx()) {
          setDbObsUtmx(other.getDbObsUtmx());
        }
        if (other.hasDbObsUtmY()) {
          setDbObsUtmY(other.getDbObsUtmY());
        }
        if (other.hasSlId()) {
          setSlId(other.getSlId());
        }
        if (other.hasDbAvgSpeed()) {
          setDbAvgSpeed(other.getDbAvgSpeed());
        }
        if (other.hasDbObsSpeed()) {
          setDbObsSpeed(other.getDbObsSpeed());
        }
        if (other.hasUlDrsuId()) {
          setUlDrsuId(other.getUlDrsuId());
        }
        if (other.hasUlLandId()) {
          setUlLandId(other.getUlLandId());
        }
        if (other.hasUlHDlaneId()) {
          setUlHDlaneId(other.getUlHDlaneId());
        }
        if (other.hasUlHDConnectionId()) {
          setUlHDConnectionId(other.getUlHDConnectionId());
        }
        if (other.hasStrPlateNo()) {
          bitField0_ |= 0x00008000;
          strPlateNo_ = other.strPlateNo_;
          onChanged();
        }
        if (other.hasStrDetectorInfo()) {
          bitField0_ |= 0x00010000;
          strDetectorInfo_ = other.strDetectorInfo_;
          onChanged();
        }
        if (other.hasUlDrcId()) {
          setUlDrcId(other.getUlDrcId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frame_ ;
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return Whether the frame field is set.
       */
      @java.lang.Override
      public boolean hasFrame() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return The frame.
       */
      @java.lang.Override
      public int getFrame() {
        return frame_;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @param value The frame to set.
       * @return This builder for chaining.
       */
      public Builder setFrame(int value) {
        bitField0_ |= 0x00000001;
        frame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *帧数 ulSystemFrame
       * </pre>
       *
       * <code>optional uint32 frame = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrame() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frame_ = 0;
        onChanged();
        return this;
      }

      private int subframe_ ;
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return Whether the subframe field is set.
       */
      @java.lang.Override
      public boolean hasSubframe() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return The subframe.
       */
      @java.lang.Override
      public int getSubframe() {
        return subframe_;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @param value The subframe to set.
       * @return This builder for chaining.
       */
      public Builder setSubframe(int value) {
        bitField0_ |= 0x00000002;
        subframe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *子帧数 ulSystemSubFrame
       * </pre>
       *
       * <code>optional uint32 subframe = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubframe() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subframe_ = 0;
        onChanged();
        return this;
      }

      private long eventId_ ;
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return The eventId.
       */
      @java.lang.Override
      public long getEventId() {
        return eventId_;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(long value) {
        bitField0_ |= 0x00000004;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件id Base Event id
       * </pre>
       *
       * <code>optional uint64 eventId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = 0L;
        onChanged();
        return this;
      }

      private int eventype_ = 1;
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return Whether the eventype field is set.
       */
      @java.lang.Override public boolean hasEventype() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return The eventype.
       */
      @java.lang.Override
      public if_proto_common.IfProtoCommon.EVENT_TPYE_E getEventype() {
        @SuppressWarnings("deprecation")
        if_proto_common.IfProtoCommon.EVENT_TPYE_E result = if_proto_common.IfProtoCommon.EVENT_TPYE_E.valueOf(eventype_);
        return result == null ? if_proto_common.IfProtoCommon.EVENT_TPYE_E.SINGLE_VEHICLE_TRAFFIC_ACCIDENT_WARNING : result;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @param value The eventype to set.
       * @return This builder for chaining.
       */
      public Builder setEventype(if_proto_common.IfProtoCommon.EVENT_TPYE_E value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        eventype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件类型
       * </pre>
       *
       * <code>optional .if_proto_common.EVENT_TPYE_E eventype = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventype() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventype_ = 1;
        onChanged();
        return this;
      }

      private int ulstate_ ;
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return Whether the ulstate field is set.
       */
      @java.lang.Override
      public boolean hasUlstate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return The ulstate.
       */
      @java.lang.Override
      public int getUlstate() {
        return ulstate_;
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @param value The ulstate to set.
       * @return This builder for chaining.
       */
      public Builder setUlstate(int value) {
        bitField0_ |= 0x00000010;
        ulstate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件状态 0:创建, 1:更新, 2:解除
       * </pre>
       *
       * <code>optional uint32 ulstate = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlstate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ulstate_ = 0;
        onChanged();
        return this;
      }

      private long ulUUID_ ;
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return Whether the ulUUID field is set.
       */
      @java.lang.Override
      public boolean hasUlUUID() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return The ulUUID.
       */
      @java.lang.Override
      public long getUlUUID() {
        return ulUUID_;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @param value The ulUUID to set.
       * @return This builder for chaining.
       */
      public Builder setUlUUID(long value) {
        bitField0_ |= 0x00000020;
        ulUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前障碍物id
       * </pre>
       *
       * <code>optional uint64 ulUUID = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlUUID() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ulUUID_ = 0L;
        onChanged();
        return this;
      }

      private double dbObsUtmx_ ;
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return Whether the dbObsUtmx field is set.
       */
      @java.lang.Override
      public boolean hasDbObsUtmx() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return The dbObsUtmx.
       */
      @java.lang.Override
      public double getDbObsUtmx() {
        return dbObsUtmx_;
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @param value The dbObsUtmx to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsUtmx(double value) {
        bitField0_ |= 0x00000040;
        dbObsUtmx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物坐标_X
       * </pre>
       *
       * <code>optional double dbObsUtmx = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsUtmx() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dbObsUtmx_ = 0D;
        onChanged();
        return this;
      }

      private double dbObsUtmY_ ;
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return Whether the dbObsUtmY field is set.
       */
      @java.lang.Override
      public boolean hasDbObsUtmY() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return The dbObsUtmY.
       */
      @java.lang.Override
      public double getDbObsUtmY() {
        return dbObsUtmY_;
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @param value The dbObsUtmY to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsUtmY(double value) {
        bitField0_ |= 0x00000080;
        dbObsUtmY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物坐标_Y   
       * </pre>
       *
       * <code>optional double dbObsUtmY = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsUtmY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dbObsUtmY_ = 0D;
        onChanged();
        return this;
      }

      private int slId_ ;
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return Whether the slId field is set.
       */
      @java.lang.Override
      public boolean hasSlId() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return The slId.
       */
      @java.lang.Override
      public int getSlId() {
        return slId_;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @param value The slId to set.
       * @return This builder for chaining.
       */
      public Builder setSlId(int value) {
        bitField0_ |= 0x00000100;
        slId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *检测器ID
       * </pre>
       *
       * <code>optional int32 slId = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        slId_ = 0;
        onChanged();
        return this;
      }

      private double dbAvgSpeed_ ;
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return Whether the dbAvgSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDbAvgSpeed() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return The dbAvgSpeed.
       */
      @java.lang.Override
      public double getDbAvgSpeed() {
        return dbAvgSpeed_;
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @param value The dbAvgSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDbAvgSpeed(double value) {
        bitField0_ |= 0x00000200;
        dbAvgSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *监测点平均速度 ,单位m/s
       * </pre>
       *
       * <code>optional double dbAvgSpeed = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbAvgSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dbAvgSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double dbObsSpeed_ ;
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return Whether the dbObsSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDbObsSpeed() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return The dbObsSpeed.
       */
      @java.lang.Override
      public double getDbObsSpeed() {
        return dbObsSpeed_;
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @param value The dbObsSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDbObsSpeed(double value) {
        bitField0_ |= 0x00000400;
        dbObsSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *障碍物速度 , 单位m/s
       * </pre>
       *
       * <code>optional double dbObsSpeed = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDbObsSpeed() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dbObsSpeed_ = 0D;
        onChanged();
        return this;
      }

      private int ulDrsuId_ ;
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return Whether the ulDrsuId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrsuId() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return The ulDrsuId.
       */
      @java.lang.Override
      public int getUlDrsuId() {
        return ulDrsuId_;
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @param value The ulDrsuId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrsuId(int value) {
        bitField0_ |= 0x00000800;
        ulDrsuId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *drsu id
       * </pre>
       *
       * <code>optional uint32 ulDrsuId = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrsuId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        ulDrsuId_ = 0;
        onChanged();
        return this;
      }

      private int ulLandId_ ;
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return Whether the ulLandId field is set.
       */
      @java.lang.Override
      public boolean hasUlLandId() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return The ulLandId.
       */
      @java.lang.Override
      public int getUlLandId() {
        return ulLandId_;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @param value The ulLandId to set.
       * @return This builder for chaining.
       */
      public Builder setUlLandId(int value) {
        bitField0_ |= 0x00001000;
        ulLandId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *lane id
       * </pre>
       *
       * <code>optional uint32 ulLandId = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlLandId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ulLandId_ = 0;
        onChanged();
        return this;
      }

      private int ulHDlaneId_ ;
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return Whether the ulHDlaneId field is set.
       */
      @java.lang.Override
      public boolean hasUlHDlaneId() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return The ulHDlaneId.
       */
      @java.lang.Override
      public int getUlHDlaneId() {
        return ulHDlaneId_;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @param value The ulHDlaneId to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDlaneId(int value) {
        bitField0_ |= 0x00002000;
        ulHDlaneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的lane id
       * </pre>
       *
       * <code>optional uint32 ulHDlaneId = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDlaneId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ulHDlaneId_ = 0;
        onChanged();
        return this;
      }

      private int ulHDConnectionId_ ;
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return Whether the ulHDConnectionId field is set.
       */
      @java.lang.Override
      public boolean hasUlHDConnectionId() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return The ulHDConnectionId.
       */
      @java.lang.Override
      public int getUlHDConnectionId() {
        return ulHDConnectionId_;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @param value The ulHDConnectionId to set.
       * @return This builder for chaining.
       */
      public Builder setUlHDConnectionId(int value) {
        bitField0_ |= 0x00004000;
        ulHDConnectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高精地图的connection id
       * </pre>
       *
       * <code>optional uint32 ulHDConnectionId = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlHDConnectionId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ulHDConnectionId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object strPlateNo_ = "";
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return Whether the strPlateNo field is set.
       */
      public boolean hasStrPlateNo() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return The strPlateNo.
       */
      public java.lang.String getStrPlateNo() {
        java.lang.Object ref = strPlateNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strPlateNo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return The bytes for strPlateNo.
       */
      public com.google.protobuf.ByteString
          getStrPlateNoBytes() {
        java.lang.Object ref = strPlateNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strPlateNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @param value The strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        strPlateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrPlateNo() {
        bitField0_ = (bitField0_ & ~0x00008000);
        strPlateNo_ = getDefaultInstance().getStrPlateNo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌  
       * </pre>
       *
       * <code>optional string strPlateNo = 16;</code>
       * @param value The bytes for strPlateNo to set.
       * @return This builder for chaining.
       */
      public Builder setStrPlateNoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        strPlateNo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object strDetectorInfo_ = "";
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return Whether the strDetectorInfo field is set.
       */
      public boolean hasStrDetectorInfo() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return The strDetectorInfo.
       */
      public java.lang.String getStrDetectorInfo() {
        java.lang.Object ref = strDetectorInfo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strDetectorInfo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return The bytes for strDetectorInfo.
       */
      public com.google.protobuf.ByteString
          getStrDetectorInfoBytes() {
        java.lang.Object ref = strDetectorInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strDetectorInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @param value The strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrDetectorInfo() {
        bitField0_ = (bitField0_ & ~0x00010000);
        strDetectorInfo_ = getDefaultInstance().getStrDetectorInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *事件参考的检测器ID,格式如: 1010,1011,1012
       * </pre>
       *
       * <code>optional string strDetectorInfo = 17;</code>
       * @param value The bytes for strDetectorInfo to set.
       * @return This builder for chaining.
       */
      public Builder setStrDetectorInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        strDetectorInfo_ = value;
        onChanged();
        return this;
      }

      private int ulDrcId_ ;
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return Whether the ulDrcId field is set.
       */
      @java.lang.Override
      public boolean hasUlDrcId() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return The ulDrcId.
       */
      @java.lang.Override
      public int getUlDrcId() {
        return ulDrcId_;
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @param value The ulDrcId to set.
       * @return This builder for chaining.
       */
      public Builder setUlDrcId(int value) {
        bitField0_ |= 0x00020000;
        ulDrcId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ulDrcId = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearUlDrcId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        ulDrcId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:event_debug.DRC_EVENT_DEBUG_LOW_SPEED)
    }

    // @@protoc_insertion_point(class_scope:event_debug.DRC_EVENT_DEBUG_LOW_SPEED)
    private static final event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED();
    }

    public static event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DRC_EVENT_DEBUG_LOW_SPEED>
        PARSER = new com.google.protobuf.AbstractParser<DRC_EVENT_DEBUG_LOW_SPEED>() {
      @java.lang.Override
      public DRC_EVENT_DEBUG_LOW_SPEED parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DRC_EVENT_DEBUG_LOW_SPEED(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DRC_EVENT_DEBUG_LOW_SPEED> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DRC_EVENT_DEBUG_LOW_SPEED> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_debug.DrcEventDebug.DRC_EVENT_DEBUG_LOW_SPEED getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_NoConesEventInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_NoConesEventInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_NoConesAdjDetectorInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_NoConesAdjDetectorInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_NoConesDetectorInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_NoConesDetectorInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_TrafficJamEventInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_TrafficJamEventInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_TrafficJamDetectorInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_TrafficJamDetectorInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025drc_event_debug.proto\022\013event_debug\032\025if" +
      "_proto_common.proto\"\243\007\n DRC_EVENT_DEBUG_" +
      "ABNORMAL_PARKING\022\r\n\005frame\030\001 \001(\r\022\020\n\010subfr" +
      "ame\030\002 \001(\r\022\016\n\006rctpId\030\003 \001(\r\022\017\n\007eventId\030\004 \001" +
      "(\004\022/\n\010eventype\030\005 \001(\0162\035.if_proto_common.E" +
      "VENT_TPYE_E\022\r\n\005state\030\006 \001(\r\022\016\n\006cstate\030\007 \001" +
      "(\r\022\020\n\010obsState\030\010 \001(\r\022\024\n\014diffDistance\030\t \001" +
      "(\001\022\025\n\rulMaxWaitTime\030\n \001(\r\022\027\n\017CenterPosti" +
      "on_x\030\013 \001(\001\022\027\n\017CenterPostion_y\030\014 \001(\001\022\020\n\010D" +
      "irecRad\030\r \001(\001\022\034\n\024LargeMajorAxisRadius\030\016 " +
      "\001(\r\022\034\n\024LargeMinorAxisRadius\030\017 \001(\r\022\034\n\024Sma" +
      "llMajorAxisRadius\030\020 \001(\r\022\034\n\024SmallMinorAxi" +
      "sRadius\030\021 \001(\r\022\022\n\nnewOBSUUID\030\022 \001(\004\022\023\n\013new" +
      "OBSframe\030\023 \001(\r\022\026\n\016newOBSsubframe\030\024 \001(\r\022\017" +
      "\n\007newOBSx\030\025 \001(\001\022\017\n\007newOBSy\030\026 \001(\001\022\022\n\nnewO" +
      "BSdrsu\030\027 \001(\r\022\022\n\nnewOBSlane\030\030 \001(\r\022\024\n\014newO" +
      "BSHDlane\030\031 \001(\r\022\032\n\022newOBSHDconnection\030\032 \001" +
      "(\r\022\024\n\014firstOBSUUID\030\033 \001(\004\022\025\n\rfirstOBSfram" +
      "e\030\034 \001(\r\022\030\n\020firstOBSsubframe\030\035 \001(\r\022\021\n\tfir" +
      "stOBSx\030\036 \001(\001\022\021\n\tfirstOBSy\030\037 \001(\001\022\024\n\014first" +
      "OBSdrsu\030  \001(\r\022\024\n\014firstOBSlane\030! \001(\r\022\026\n\016f" +
      "irstOBSHDlane\030\" \001(\r\022\034\n\024firstOBSHDconnect" +
      "ion\030# \001(\r\022\027\n\017strDetectorInfo\030$ \001(\t\022\023\n\013st" +
      "rExtParam\030% \001(\t\022\017\n\007ulDrcId\030& \001(\r\022\023\n\013vehi" +
      "cleType\030\' \001(\005\022\022\n\nstrPlateNo\030( \001(\t\"\271\002\n\024TR" +
      "AFFIC_ACCIDENT_OBS\022\016\n\006ulUUID\030\001 \001(\004\022\025\n\rul" +
      "Frame_first\030\002 \001(\r\022\026\n\016ulFrame_second\030\003 \001(" +
      "\r\022\034\n\024dbVehicle_position_x\030\004 \001(\001\022\034\n\024dbVeh" +
      "icle_position_y\030\005 \001(\001\022\027\n\017ulMaster_drsuid" +
      "\030\006 \001(\r\022\027\n\017ulMaster_landid\030\007 \001(\r\022\023\n\013ulHD_" +
      "laneid\030\010 \001(\r\022\031\n\021ulHD_ConnectionId\030\t \001(\r\022" +
      "\022\n\nstrPlateNo\030\n \001(\t\022\022\n\nisHighFlow\030\013 \001(\005\022" +
      "\034\n\024ulAb_parking_eventId\030\014 \001(\004\"\300\002\n DRC_EV" +
      "ENT_DEBUG_TRAFFIC_ACCIDENT\022\r\n\005frame\030\001 \001(" +
      "\r\022\020\n\010subframe\030\002 \001(\r\022\017\n\007eventId\030\003 \001(\004\022/\n\010" +
      "eventype\030\004 \001(\0162\035.if_proto_common.EVENT_T" +
      "PYE_E\022\r\n\005state\030\005 \001(\r\0229\n\016stVehicleInfos\030\006" +
      " \003(\0132!.event_debug.TRAFFIC_ACCIDENT_OBS\022" +
      "\027\n\017strDetectorInfo\030\007 \001(\t\022\023\n\013strExtParam\030" +
      "\010 \001(\t\022\027\n\017CenterPostion_x\030\t \001(\001\022\027\n\017Center" +
      "Postion_y\030\n \001(\001\022\017\n\007ulDrcId\030\013 \001(\r\"\361\001\n\020NoC" +
      "onesEventInfo\022\017\n\007eventId\030\001 \001(\004\022/\n\010eventy" +
      "pe\030\002 \001(\0162\035.if_proto_common.EVENT_TPYE_E\022" +
      "\024\n\014mergeEventId\030\003 \003(\004\022\024\n\014slDetectorId\030\004 " +
      "\003(\005\022\016\n\006dbUtmx\030\005 \001(\001\022\016\n\006dbUtmY\030\006 \001(\001\022\030\n\020u" +
      "lLowVehicleSize\030\007 \001(\r\022\035\n\025ulLowVehicleThr" +
      "eshold\030\010 \001(\r\022\026\n\016ulRelieveCount\030\t \001(\r\"?\n\026" +
      "NoConesAdjDetectorInfo\022\024\n\014slDetectorId\030\001" +
      " \001(\005\022\017\n\007dbCoeff\030\002 \001(\001\"\233\003\n\023NoConesDetecto" +
      "rInfo\022\014\n\004slId\030\001 \001(\005\022\017\n\007slState\030\002 \001(\005\022\031\n\021" +
      "ulVehiclesOfReach\030\003 \001(\r\022\031\n\021ulHistoryVehi" +
      "cles\030\004 \001(\r\022\031\n\021ulCycleOfNonReach\030\005 \001(\r\022\020\n" +
      "\010ulMeanDt\030\006 \001(\r\022\017\n\007ulMaxDt\030\007 \001(\r\0227\n\nstAd" +
      "jInfos\030\010 \003(\0132#.event_debug.NoConesAdjDet" +
      "ectorInfo\022\013\n\003dbP\030\t \001(\001\022\013\n\003dbM\030\n \001(\001\022\014\n\004d" +
      "bS2\030\013 \001(\001\022\027\n\017slAdjDetectorId\030\014 \001(\005\022\016\n\006db" +
      "Utmx\030\r \001(\001\022\016\n\006dbUtmY\030\016 \001(\001\022\026\n\016ulActiveSo" +
      "urce\030\017 \001(\r\022\025\n\rulActiveFrame\030\020 \001(\r\022\030\n\020ulA" +
      "ctiveSubFrame\030\021 \001(\r\022\016\n\006ulVels\030\022 \001(\r\"\317\001\n\030" +
      "DRC_EVENT_DEBUG_NO_CONES\022\017\n\007ulFrame\030\001 \001(" +
      "\r\022\022\n\nulSubFrame\030\002 \001(\r\022\017\n\007ulCycle\030\003 \001(\r\0222" +
      "\n\013stEventInfo\030\004 \003(\0132\035.event_debug.NoCone" +
      "sEventInfo\0228\n\016stDetectorInfo\030\005 \003(\0132 .eve" +
      "nt_debug.NoConesDetectorInfo\022\017\n\007ulDrcId\030" +
      "\006 \001(\r\"\243\001\n\023TrafficJamEventInfo\022\017\n\007eventId" +
      "\030\001 \001(\004\022/\n\010eventype\030\002 \001(\0162\035.if_proto_comm" +
      "on.EVENT_TPYE_E\022\024\n\014mergeEventId\030\003 \003(\004\022\024\n" +
      "\014slDetectorId\030\004 \003(\005\022\016\n\006dbUtmx\030\005 \001(\001\022\016\n\006d" +
      "bUtmY\030\006 \001(\001\"{\n\026TrafficJamDetectorInfo\022\014\n" +
      "\004slId\030\001 \001(\005\022\017\n\007slState\030\002 \001(\005\022\022\n\ndbAvgSpe" +
      "ed\030\003 \001(\001\022\016\n\006slVels\030\004 \001(\005\022\016\n\006dbUtmx\030\005 \001(\001" +
      "\022\016\n\006dbUtmY\030\006 \001(\001\"\330\001\n\033DRC_EVENT_DEBUG_TRA" +
      "FFIC_JAM\022\017\n\007ulFrame\030\001 \001(\r\022\022\n\nulSubFrame\030" +
      "\002 \001(\r\022\017\n\007ulCycle\030\003 \001(\r\0225\n\013stEventInfo\030\004 " +
      "\003(\0132 .event_debug.TrafficJamEventInfo\022;\n" +
      "\016stDetectorInfo\030\005 \003(\0132#.event_debug.Traf" +
      "ficJamDetectorInfo\022\017\n\007ulDrcId\030\006 \001(\r\"\221\001\n\035" +
      "DRC_EVENT_DEBUG_DETECTOR_INFO\022:\n\rdetecto" +
      "rInfos\030\001 \003(\0132#.event_debug.TrafficJamDet" +
      "ectorInfo\022\017\n\007ulFrame\030\002 \001(\r\022\022\n\nulSubFrame" +
      "\030\003 \001(\r\022\017\n\007ulDrcId\030\004 \001(\r\"\221\003\n\037DRC_EVENT_DE" +
      "BUG_ULTRA_LOW_SPEED\022\r\n\005frame\030\001 \001(\r\022\020\n\010su" +
      "bframe\030\002 \001(\r\022\017\n\007eventId\030\003 \001(\004\022/\n\010eventyp" +
      "e\030\004 \001(\0162\035.if_proto_common.EVENT_TPYE_E\022\017" +
      "\n\007ulstate\030\005 \001(\r\022\016\n\006ulUUID\030\006 \001(\004\022\021\n\tdbObs" +
      "Utmx\030\007 \001(\001\022\021\n\tdbObsUtmY\030\010 \001(\001\022\014\n\004slId\030\t " +
      "\001(\005\022\022\n\ndbAvgSpeed\030\n \001(\001\022\022\n\ndbObsSpeed\030\013 " +
      "\001(\001\022\020\n\010ulDrsuId\030\014 \001(\r\022\020\n\010ulLandId\030\r \001(\r\022" +
      "\022\n\nulHDlaneId\030\016 \001(\r\022\030\n\020ulHDConnectionId\030" +
      "\017 \001(\r\022\022\n\nstrPlateNo\030\020 \001(\t\022\027\n\017strDetector" +
      "Info\030\021 \001(\t\022\017\n\007ulDrcId\030\022 \001(\r\"\213\003\n\031DRC_EVEN" +
      "T_DEBUG_LOW_SPEED\022\r\n\005frame\030\001 \001(\r\022\020\n\010subf" +
      "rame\030\002 \001(\r\022\017\n\007eventId\030\003 \001(\004\022/\n\010eventype\030" +
      "\004 \001(\0162\035.if_proto_common.EVENT_TPYE_E\022\017\n\007" +
      "ulstate\030\005 \001(\r\022\016\n\006ulUUID\030\006 \001(\004\022\021\n\tdbObsUt" +
      "mx\030\007 \001(\001\022\021\n\tdbObsUtmY\030\010 \001(\001\022\014\n\004slId\030\t \001(" +
      "\005\022\022\n\ndbAvgSpeed\030\n \001(\001\022\022\n\ndbObsSpeed\030\013 \001(" +
      "\001\022\020\n\010ulDrsuId\030\014 \001(\r\022\020\n\010ulLandId\030\r \001(\r\022\022\n" +
      "\nulHDlaneId\030\016 \001(\r\022\030\n\020ulHDConnectionId\030\017 " +
      "\001(\r\022\022\n\nstrPlateNo\030\020 \001(\t\022\027\n\017strDetectorIn" +
      "fo\030\021 \001(\t\022\017\n\007ulDrcId\030\022 \001(\r*\223\003\n\030ABNORMAL_P" +
      "ARKING_STATE_E\022\037\n\033ABNORMAL_PARKING_NULL_" +
      "STATE\020\000\022\037\n\033ABNORMAL_PARKING_INIT_STATE\020\001" +
      "\022 \n\034ABNORMAL_PARKING_WATCH_STATE\020\002\022!\n\035AB" +
      "NORMAL_PARKING_ACTIVE_STATE\020\003\022\"\n\036ABNORMA" +
      "L_PARKING_SUSPEND_STATE\020\004\022(\n$ABNORMAL_PA" +
      "RKING_WATCH_SUSPEND_STATE\020\005\022\037\n\033TRAFFIC_A" +
      "CCIDENT_NULL_STATE\020\006\022!\n\035TRAFFIC_ACCIDENT" +
      "_ACTIVE_STATE\020\007\022\"\n\036TRAFFIC_ACCIDENT_SUSP" +
      "END_STATE\020\010\022\032\n\026EVENT_LANE_TRAFFIC_JAM\020\t\022" +
      "\036\n\032EVENT_NOCONESL_LANE_CLOSED\020\n*t\n\024EVENT" +
      "_CHANGE_STATE_E\022\024\n\020OBS_WITHIN_RANGE\020\001\022\024\n" +
      "\020OBS_OUT_OF_RANGE\020\002\022\026\n\022OBS_DATA_DISAPPEA" +
      "R\020\003\022\030\n\024OBS_TRAFFIC_ACCIDENT\020\004*\341\001\n\034OBS_AB" +
      "NORMAL_PARKING_STATE_E\022#\n\037OBS_ABNORMAL_P" +
      "ARKING_NULL_STATE\020\000\022#\n\037OBS_ABNORMAL_PARK" +
      "ING_INIT_STATE\020\001\022$\n OBS_ABNORMAL_PARKING" +
      "_WATCH_STATE\020\002\022\'\n#OBS_ABNORMAL_PARKING_A" +
      "CCIDENT_STATE\020\003\022(\n$OBS_ABNORMAL_PARKING_" +
      "DISAPPEAR_STATE\020c"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          if_proto_common.IfProtoCommon.getDescriptor(),
        });
    internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_ABNORMAL_PARKING_descriptor,
        new java.lang.String[] { "Frame", "Subframe", "RctpId", "EventId", "Eventype", "State", "Cstate", "ObsState", "DiffDistance", "UlMaxWaitTime", "CenterPostionX", "CenterPostionY", "DirecRad", "LargeMajorAxisRadius", "LargeMinorAxisRadius", "SmallMajorAxisRadius", "SmallMinorAxisRadius", "NewOBSUUID", "NewOBSframe", "NewOBSsubframe", "NewOBSx", "NewOBSy", "NewOBSdrsu", "NewOBSlane", "NewOBSHDlane", "NewOBSHDconnection", "FirstOBSUUID", "FirstOBSframe", "FirstOBSsubframe", "FirstOBSx", "FirstOBSy", "FirstOBSdrsu", "FirstOBSlane", "FirstOBSHDlane", "FirstOBSHDconnection", "StrDetectorInfo", "StrExtParam", "UlDrcId", "VehicleType", "StrPlateNo", });
    internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_TRAFFIC_ACCIDENT_OBS_descriptor,
        new java.lang.String[] { "UlUUID", "UlFrameFirst", "UlFrameSecond", "DbVehiclePositionX", "DbVehiclePositionY", "UlMasterDrsuid", "UlMasterLandid", "UlHDLaneid", "UlHDConnectionId", "StrPlateNo", "IsHighFlow", "UlAbParkingEventId", });
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_ACCIDENT_descriptor,
        new java.lang.String[] { "Frame", "Subframe", "EventId", "Eventype", "State", "StVehicleInfos", "StrDetectorInfo", "StrExtParam", "CenterPostionX", "CenterPostionY", "UlDrcId", });
    internal_static_event_debug_NoConesEventInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_event_debug_NoConesEventInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_NoConesEventInfo_descriptor,
        new java.lang.String[] { "EventId", "Eventype", "MergeEventId", "SlDetectorId", "DbUtmx", "DbUtmY", "UlLowVehicleSize", "UlLowVehicleThreshold", "UlRelieveCount", });
    internal_static_event_debug_NoConesAdjDetectorInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_event_debug_NoConesAdjDetectorInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_NoConesAdjDetectorInfo_descriptor,
        new java.lang.String[] { "SlDetectorId", "DbCoeff", });
    internal_static_event_debug_NoConesDetectorInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_event_debug_NoConesDetectorInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_NoConesDetectorInfo_descriptor,
        new java.lang.String[] { "SlId", "SlState", "UlVehiclesOfReach", "UlHistoryVehicles", "UlCycleOfNonReach", "UlMeanDt", "UlMaxDt", "StAdjInfos", "DbP", "DbM", "DbS2", "SlAdjDetectorId", "DbUtmx", "DbUtmY", "UlActiveSource", "UlActiveFrame", "UlActiveSubFrame", "UlVels", });
    internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_NO_CONES_descriptor,
        new java.lang.String[] { "UlFrame", "UlSubFrame", "UlCycle", "StEventInfo", "StDetectorInfo", "UlDrcId", });
    internal_static_event_debug_TrafficJamEventInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_event_debug_TrafficJamEventInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_TrafficJamEventInfo_descriptor,
        new java.lang.String[] { "EventId", "Eventype", "MergeEventId", "SlDetectorId", "DbUtmx", "DbUtmY", });
    internal_static_event_debug_TrafficJamDetectorInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_event_debug_TrafficJamDetectorInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_TrafficJamDetectorInfo_descriptor,
        new java.lang.String[] { "SlId", "SlState", "DbAvgSpeed", "SlVels", "DbUtmx", "DbUtmY", });
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_TRAFFIC_JAM_descriptor,
        new java.lang.String[] { "UlFrame", "UlSubFrame", "UlCycle", "StEventInfo", "StDetectorInfo", "UlDrcId", });
    internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_DETECTOR_INFO_descriptor,
        new java.lang.String[] { "DetectorInfos", "UlFrame", "UlSubFrame", "UlDrcId", });
    internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_ULTRA_LOW_SPEED_descriptor,
        new java.lang.String[] { "Frame", "Subframe", "EventId", "Eventype", "Ulstate", "UlUUID", "DbObsUtmx", "DbObsUtmY", "SlId", "DbAvgSpeed", "DbObsSpeed", "UlDrsuId", "UlLandId", "UlHDlaneId", "UlHDConnectionId", "StrPlateNo", "StrDetectorInfo", "UlDrcId", });
    internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_event_debug_DRC_EVENT_DEBUG_LOW_SPEED_descriptor,
        new java.lang.String[] { "Frame", "Subframe", "EventId", "Eventype", "Ulstate", "UlUUID", "DbObsUtmx", "DbObsUtmY", "SlId", "DbAvgSpeed", "DbObsSpeed", "UlDrsuId", "UlLandId", "UlHDlaneId", "UlHDConnectionId", "StrPlateNo", "StrDetectorInfo", "UlDrcId", });
    if_proto_common.IfProtoCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
