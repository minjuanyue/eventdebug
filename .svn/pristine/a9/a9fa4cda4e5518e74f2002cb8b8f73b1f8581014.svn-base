// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bxt.common.Header.proto

package if_proto_common;

public final class BxtCommonHeader {
  private BxtCommonHeader() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:if_proto_common.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Message index or query time in seconds. It is recommended 
     * to obtain timestamp_sec from sensor time, it is used as a query 
     * time in GetExpectedObserved.
     * </pre>
     *
     * <code>optional double timestamp_sec = 1;</code>
     * @return Whether the timestampSec field is set.
     */
    boolean hasTimestampSec();
    /**
     * <pre>
     * Message index or query time in seconds. It is recommended 
     * to obtain timestamp_sec from sensor time, it is used as a query 
     * time in GetExpectedObserved.
     * </pre>
     *
     * <code>optional double timestamp_sec = 1;</code>
     * @return The timestampSec.
     */
    double getTimestampSec();

    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return Whether the moduleName field is set.
     */
    boolean hasModuleName();
    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return The moduleName.
     */
    java.lang.String getModuleName();
    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return The bytes for moduleName.
     */
    com.google.protobuf.ByteString
        getModuleNameBytes();

    /**
     * <pre>
     * Sequence number for each message. Each module maintains its own counter for
     * sequence_num, always starting from 0 on boot.
     * </pre>
     *
     * <code>optional uint32 sequence_num = 3;</code>
     * @return Whether the sequenceNum field is set.
     */
    boolean hasSequenceNum();
    /**
     * <pre>
     * Sequence number for each message. Each module maintains its own counter for
     * sequence_num, always starting from 0 on boot.
     * </pre>
     *
     * <code>optional uint32 sequence_num = 3;</code>
     * @return The sequenceNum.
     */
    int getSequenceNum();

    /**
     * <pre>
     * Lidar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 lidar_timestamp = 4;</code>
     * @return Whether the lidarTimestamp field is set.
     */
    boolean hasLidarTimestamp();
    /**
     * <pre>
     * Lidar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 lidar_timestamp = 4;</code>
     * @return The lidarTimestamp.
     */
    long getLidarTimestamp();

    /**
     * <pre>
     * Camera Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 camera_timestamp = 5;</code>
     * @return Whether the cameraTimestamp field is set.
     */
    boolean hasCameraTimestamp();
    /**
     * <pre>
     * Camera Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 camera_timestamp = 5;</code>
     * @return The cameraTimestamp.
     */
    long getCameraTimestamp();

    /**
     * <pre>
     * Radar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 radar_timestamp = 6;</code>
     * @return Whether the radarTimestamp field is set.
     */
    boolean hasRadarTimestamp();
    /**
     * <pre>
     * Radar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 radar_timestamp = 6;</code>
     * @return The radarTimestamp.
     */
    long getRadarTimestamp();

    /**
     * <pre>
     * data version
     * </pre>
     *
     * <code>optional uint32 version = 7 [default = 1];</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <pre>
     * data version
     * </pre>
     *
     * <code>optional uint32 version = 7 [default = 1];</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     * @return The status.
     */
    if_proto_common.BxtStatusPb.StatusPb getStatus();
    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     */
    if_proto_common.BxtStatusPb.StatusPbOrBuilder getStatusOrBuilder();

    /**
     * <pre>
     * Message publishing time in seconds. It is recommended to obtain
     * timestamp_sec from ros::Time::now(), right before calling
     * SerializeToString() and publish().
     * </pre>
     *
     * <code>optional double pub_timestamp_sec = 9;</code>
     * @return Whether the pubTimestampSec field is set.
     */
    boolean hasPubTimestampSec();
    /**
     * <pre>
     * Message publishing time in seconds. It is recommended to obtain
     * timestamp_sec from ros::Time::now(), right before calling
     * SerializeToString() and publish().
     * </pre>
     *
     * <code>optional double pub_timestamp_sec = 9;</code>
     * @return The pubTimestampSec.
     */
    double getPubTimestampSec();

    /**
     * <code>optional uint64 mec_rcv_timestamp = 10;</code>
     * @return Whether the mecRcvTimestamp field is set.
     */
    boolean hasMecRcvTimestamp();
    /**
     * <code>optional uint64 mec_rcv_timestamp = 10;</code>
     * @return The mecRcvTimestamp.
     */
    long getMecRcvTimestamp();

    /**
     * <code>optional uint64 mec_send_timestamp = 11;</code>
     * @return Whether the mecSendTimestamp field is set.
     */
    boolean hasMecSendTimestamp();
    /**
     * <code>optional uint64 mec_send_timestamp = 11;</code>
     * @return The mecSendTimestamp.
     */
    long getMecSendTimestamp();

    /**
     * <code>optional uint64 dra_rcv_timestamp = 12;</code>
     * @return Whether the draRcvTimestamp field is set.
     */
    boolean hasDraRcvTimestamp();
    /**
     * <code>optional uint64 dra_rcv_timestamp = 12;</code>
     * @return The draRcvTimestamp.
     */
    long getDraRcvTimestamp();

    /**
     * <code>optional uint64 dra_send_timestamp = 13;</code>
     * @return Whether the draSendTimestamp field is set.
     */
    boolean hasDraSendTimestamp();
    /**
     * <code>optional uint64 dra_send_timestamp = 13;</code>
     * @return The draSendTimestamp.
     */
    long getDraSendTimestamp();
  }
  /**
   * Protobuf type {@code if_proto_common.Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:if_proto_common.Header)
      HeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      moduleName_ = "";
      version_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Header();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              timestampSec_ = input.readDouble();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              moduleName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sequenceNum_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lidarTimestamp_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cameraTimestamp_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              radarTimestamp_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              version_ = input.readUInt32();
              break;
            }
            case 66: {
              if_proto_common.BxtStatusPb.StatusPb.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) != 0)) {
                subBuilder = status_.toBuilder();
              }
              status_ = input.readMessage(if_proto_common.BxtStatusPb.StatusPb.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(status_);
                status_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              pubTimestampSec_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              mecRcvTimestamp_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              mecSendTimestamp_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              draRcvTimestamp_ = input.readUInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              draSendTimestamp_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return if_proto_common.BxtCommonHeader.internal_static_if_proto_common_Header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return if_proto_common.BxtCommonHeader.internal_static_if_proto_common_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              if_proto_common.BxtCommonHeader.Header.class, if_proto_common.BxtCommonHeader.Header.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_SEC_FIELD_NUMBER = 1;
    private double timestampSec_;
    /**
     * <pre>
     * Message index or query time in seconds. It is recommended 
     * to obtain timestamp_sec from sensor time, it is used as a query 
     * time in GetExpectedObserved.
     * </pre>
     *
     * <code>optional double timestamp_sec = 1;</code>
     * @return Whether the timestampSec field is set.
     */
    @java.lang.Override
    public boolean hasTimestampSec() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Message index or query time in seconds. It is recommended 
     * to obtain timestamp_sec from sensor time, it is used as a query 
     * time in GetExpectedObserved.
     * </pre>
     *
     * <code>optional double timestamp_sec = 1;</code>
     * @return The timestampSec.
     */
    @java.lang.Override
    public double getTimestampSec() {
      return timestampSec_;
    }

    public static final int MODULE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object moduleName_;
    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return Whether the moduleName field is set.
     */
    @java.lang.Override
    public boolean hasModuleName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return The moduleName.
     */
    @java.lang.Override
    public java.lang.String getModuleName() {
      java.lang.Object ref = moduleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          moduleName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Module name.
     * </pre>
     *
     * <code>optional string module_name = 2;</code>
     * @return The bytes for moduleName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModuleNameBytes() {
      java.lang.Object ref = moduleName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        moduleName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCE_NUM_FIELD_NUMBER = 3;
    private int sequenceNum_;
    /**
     * <pre>
     * Sequence number for each message. Each module maintains its own counter for
     * sequence_num, always starting from 0 on boot.
     * </pre>
     *
     * <code>optional uint32 sequence_num = 3;</code>
     * @return Whether the sequenceNum field is set.
     */
    @java.lang.Override
    public boolean hasSequenceNum() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Sequence number for each message. Each module maintains its own counter for
     * sequence_num, always starting from 0 on boot.
     * </pre>
     *
     * <code>optional uint32 sequence_num = 3;</code>
     * @return The sequenceNum.
     */
    @java.lang.Override
    public int getSequenceNum() {
      return sequenceNum_;
    }

    public static final int LIDAR_TIMESTAMP_FIELD_NUMBER = 4;
    private long lidarTimestamp_;
    /**
     * <pre>
     * Lidar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 lidar_timestamp = 4;</code>
     * @return Whether the lidarTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasLidarTimestamp() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Lidar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 lidar_timestamp = 4;</code>
     * @return The lidarTimestamp.
     */
    @java.lang.Override
    public long getLidarTimestamp() {
      return lidarTimestamp_;
    }

    public static final int CAMERA_TIMESTAMP_FIELD_NUMBER = 5;
    private long cameraTimestamp_;
    /**
     * <pre>
     * Camera Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 camera_timestamp = 5;</code>
     * @return Whether the cameraTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasCameraTimestamp() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Camera Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 camera_timestamp = 5;</code>
     * @return The cameraTimestamp.
     */
    @java.lang.Override
    public long getCameraTimestamp() {
      return cameraTimestamp_;
    }

    public static final int RADAR_TIMESTAMP_FIELD_NUMBER = 6;
    private long radarTimestamp_;
    /**
     * <pre>
     * Radar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 radar_timestamp = 6;</code>
     * @return Whether the radarTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasRadarTimestamp() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Radar Sensor timestamp for nano-second.
     * </pre>
     *
     * <code>optional uint64 radar_timestamp = 6;</code>
     * @return The radarTimestamp.
     */
    @java.lang.Override
    public long getRadarTimestamp() {
      return radarTimestamp_;
    }

    public static final int VERSION_FIELD_NUMBER = 7;
    private int version_;
    /**
     * <pre>
     * data version
     * </pre>
     *
     * <code>optional uint32 version = 7 [default = 1];</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * data version
     * </pre>
     *
     * <code>optional uint32 version = 7 [default = 1];</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private if_proto_common.BxtStatusPb.StatusPb status_;
    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     * @return The status.
     */
    @java.lang.Override
    public if_proto_common.BxtStatusPb.StatusPb getStatus() {
      return status_ == null ? if_proto_common.BxtStatusPb.StatusPb.getDefaultInstance() : status_;
    }
    /**
     * <code>optional .if_proto_common.StatusPb status = 8;</code>
     */
    @java.lang.Override
    public if_proto_common.BxtStatusPb.StatusPbOrBuilder getStatusOrBuilder() {
      return status_ == null ? if_proto_common.BxtStatusPb.StatusPb.getDefaultInstance() : status_;
    }

    public static final int PUB_TIMESTAMP_SEC_FIELD_NUMBER = 9;
    private double pubTimestampSec_;
    /**
     * <pre>
     * Message publishing time in seconds. It is recommended to obtain
     * timestamp_sec from ros::Time::now(), right before calling
     * SerializeToString() and publish().
     * </pre>
     *
     * <code>optional double pub_timestamp_sec = 9;</code>
     * @return Whether the pubTimestampSec field is set.
     */
    @java.lang.Override
    public boolean hasPubTimestampSec() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Message publishing time in seconds. It is recommended to obtain
     * timestamp_sec from ros::Time::now(), right before calling
     * SerializeToString() and publish().
     * </pre>
     *
     * <code>optional double pub_timestamp_sec = 9;</code>
     * @return The pubTimestampSec.
     */
    @java.lang.Override
    public double getPubTimestampSec() {
      return pubTimestampSec_;
    }

    public static final int MEC_RCV_TIMESTAMP_FIELD_NUMBER = 10;
    private long mecRcvTimestamp_;
    /**
     * <code>optional uint64 mec_rcv_timestamp = 10;</code>
     * @return Whether the mecRcvTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasMecRcvTimestamp() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint64 mec_rcv_timestamp = 10;</code>
     * @return The mecRcvTimestamp.
     */
    @java.lang.Override
    public long getMecRcvTimestamp() {
      return mecRcvTimestamp_;
    }

    public static final int MEC_SEND_TIMESTAMP_FIELD_NUMBER = 11;
    private long mecSendTimestamp_;
    /**
     * <code>optional uint64 mec_send_timestamp = 11;</code>
     * @return Whether the mecSendTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasMecSendTimestamp() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint64 mec_send_timestamp = 11;</code>
     * @return The mecSendTimestamp.
     */
    @java.lang.Override
    public long getMecSendTimestamp() {
      return mecSendTimestamp_;
    }

    public static final int DRA_RCV_TIMESTAMP_FIELD_NUMBER = 12;
    private long draRcvTimestamp_;
    /**
     * <code>optional uint64 dra_rcv_timestamp = 12;</code>
     * @return Whether the draRcvTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasDraRcvTimestamp() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint64 dra_rcv_timestamp = 12;</code>
     * @return The draRcvTimestamp.
     */
    @java.lang.Override
    public long getDraRcvTimestamp() {
      return draRcvTimestamp_;
    }

    public static final int DRA_SEND_TIMESTAMP_FIELD_NUMBER = 13;
    private long draSendTimestamp_;
    /**
     * <code>optional uint64 dra_send_timestamp = 13;</code>
     * @return Whether the draSendTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasDraSendTimestamp() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional uint64 dra_send_timestamp = 13;</code>
     * @return The draSendTimestamp.
     */
    @java.lang.Override
    public long getDraSendTimestamp() {
      return draSendTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, timestampSec_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, moduleName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, sequenceNum_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, lidarTimestamp_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(5, cameraTimestamp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, radarTimestamp_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, version_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(8, getStatus());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeDouble(9, pubTimestampSec_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt64(10, mecRcvTimestamp_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt64(11, mecSendTimestamp_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeUInt64(12, draRcvTimestamp_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeUInt64(13, draSendTimestamp_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timestampSec_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, moduleName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequenceNum_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, lidarTimestamp_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, cameraTimestamp_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, radarTimestamp_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, version_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getStatus());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, pubTimestampSec_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, mecRcvTimestamp_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, mecSendTimestamp_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, draRcvTimestamp_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, draSendTimestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof if_proto_common.BxtCommonHeader.Header)) {
        return super.equals(obj);
      }
      if_proto_common.BxtCommonHeader.Header other = (if_proto_common.BxtCommonHeader.Header) obj;

      if (hasTimestampSec() != other.hasTimestampSec()) return false;
      if (hasTimestampSec()) {
        if (java.lang.Double.doubleToLongBits(getTimestampSec())
            != java.lang.Double.doubleToLongBits(
                other.getTimestampSec())) return false;
      }
      if (hasModuleName() != other.hasModuleName()) return false;
      if (hasModuleName()) {
        if (!getModuleName()
            .equals(other.getModuleName())) return false;
      }
      if (hasSequenceNum() != other.hasSequenceNum()) return false;
      if (hasSequenceNum()) {
        if (getSequenceNum()
            != other.getSequenceNum()) return false;
      }
      if (hasLidarTimestamp() != other.hasLidarTimestamp()) return false;
      if (hasLidarTimestamp()) {
        if (getLidarTimestamp()
            != other.getLidarTimestamp()) return false;
      }
      if (hasCameraTimestamp() != other.hasCameraTimestamp()) return false;
      if (hasCameraTimestamp()) {
        if (getCameraTimestamp()
            != other.getCameraTimestamp()) return false;
      }
      if (hasRadarTimestamp() != other.hasRadarTimestamp()) return false;
      if (hasRadarTimestamp()) {
        if (getRadarTimestamp()
            != other.getRadarTimestamp()) return false;
      }
      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (hasPubTimestampSec() != other.hasPubTimestampSec()) return false;
      if (hasPubTimestampSec()) {
        if (java.lang.Double.doubleToLongBits(getPubTimestampSec())
            != java.lang.Double.doubleToLongBits(
                other.getPubTimestampSec())) return false;
      }
      if (hasMecRcvTimestamp() != other.hasMecRcvTimestamp()) return false;
      if (hasMecRcvTimestamp()) {
        if (getMecRcvTimestamp()
            != other.getMecRcvTimestamp()) return false;
      }
      if (hasMecSendTimestamp() != other.hasMecSendTimestamp()) return false;
      if (hasMecSendTimestamp()) {
        if (getMecSendTimestamp()
            != other.getMecSendTimestamp()) return false;
      }
      if (hasDraRcvTimestamp() != other.hasDraRcvTimestamp()) return false;
      if (hasDraRcvTimestamp()) {
        if (getDraRcvTimestamp()
            != other.getDraRcvTimestamp()) return false;
      }
      if (hasDraSendTimestamp() != other.hasDraSendTimestamp()) return false;
      if (hasDraSendTimestamp()) {
        if (getDraSendTimestamp()
            != other.getDraSendTimestamp()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestampSec()) {
        hash = (37 * hash) + TIMESTAMP_SEC_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestampSec()));
      }
      if (hasModuleName()) {
        hash = (37 * hash) + MODULE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getModuleName().hashCode();
      }
      if (hasSequenceNum()) {
        hash = (37 * hash) + SEQUENCE_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNum();
      }
      if (hasLidarTimestamp()) {
        hash = (37 * hash) + LIDAR_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLidarTimestamp());
      }
      if (hasCameraTimestamp()) {
        hash = (37 * hash) + CAMERA_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCameraTimestamp());
      }
      if (hasRadarTimestamp()) {
        hash = (37 * hash) + RADAR_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getRadarTimestamp());
      }
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      if (hasPubTimestampSec()) {
        hash = (37 * hash) + PUB_TIMESTAMP_SEC_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPubTimestampSec()));
      }
      if (hasMecRcvTimestamp()) {
        hash = (37 * hash) + MEC_RCV_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMecRcvTimestamp());
      }
      if (hasMecSendTimestamp()) {
        hash = (37 * hash) + MEC_SEND_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMecSendTimestamp());
      }
      if (hasDraRcvTimestamp()) {
        hash = (37 * hash) + DRA_RCV_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDraRcvTimestamp());
      }
      if (hasDraSendTimestamp()) {
        hash = (37 * hash) + DRA_SEND_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDraSendTimestamp());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.BxtCommonHeader.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonHeader.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonHeader.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(if_proto_common.BxtCommonHeader.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code if_proto_common.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:if_proto_common.Header)
        if_proto_common.BxtCommonHeader.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return if_proto_common.BxtCommonHeader.internal_static_if_proto_common_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return if_proto_common.BxtCommonHeader.internal_static_if_proto_common_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                if_proto_common.BxtCommonHeader.Header.class, if_proto_common.BxtCommonHeader.Header.Builder.class);
      }

      // Construct using if_proto_common.BxtCommonHeader.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestampSec_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        moduleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        lidarTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        cameraTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        radarTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        version_ = 1;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (statusBuilder_ == null) {
          status_ = null;
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        pubTimestampSec_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        mecRcvTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        mecSendTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        draRcvTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        draSendTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return if_proto_common.BxtCommonHeader.internal_static_if_proto_common_Header_descriptor;
      }

      @java.lang.Override
      public if_proto_common.BxtCommonHeader.Header getDefaultInstanceForType() {
        return if_proto_common.BxtCommonHeader.Header.getDefaultInstance();
      }

      @java.lang.Override
      public if_proto_common.BxtCommonHeader.Header build() {
        if_proto_common.BxtCommonHeader.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public if_proto_common.BxtCommonHeader.Header buildPartial() {
        if_proto_common.BxtCommonHeader.Header result = new if_proto_common.BxtCommonHeader.Header(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestampSec_ = timestampSec_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.moduleName_ = moduleName_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sequenceNum_ = sequenceNum_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.lidarTimestamp_ = lidarTimestamp_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.cameraTimestamp_ = cameraTimestamp_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.radarTimestamp_ = radarTimestamp_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          if (statusBuilder_ == null) {
            result.status_ = status_;
          } else {
            result.status_ = statusBuilder_.build();
          }
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.pubTimestampSec_ = pubTimestampSec_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.mecRcvTimestamp_ = mecRcvTimestamp_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.mecSendTimestamp_ = mecSendTimestamp_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.draRcvTimestamp_ = draRcvTimestamp_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.draSendTimestamp_ = draSendTimestamp_;
          to_bitField0_ |= 0x00001000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof if_proto_common.BxtCommonHeader.Header) {
          return mergeFrom((if_proto_common.BxtCommonHeader.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(if_proto_common.BxtCommonHeader.Header other) {
        if (other == if_proto_common.BxtCommonHeader.Header.getDefaultInstance()) return this;
        if (other.hasTimestampSec()) {
          setTimestampSec(other.getTimestampSec());
        }
        if (other.hasModuleName()) {
          bitField0_ |= 0x00000002;
          moduleName_ = other.moduleName_;
          onChanged();
        }
        if (other.hasSequenceNum()) {
          setSequenceNum(other.getSequenceNum());
        }
        if (other.hasLidarTimestamp()) {
          setLidarTimestamp(other.getLidarTimestamp());
        }
        if (other.hasCameraTimestamp()) {
          setCameraTimestamp(other.getCameraTimestamp());
        }
        if (other.hasRadarTimestamp()) {
          setRadarTimestamp(other.getRadarTimestamp());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasPubTimestampSec()) {
          setPubTimestampSec(other.getPubTimestampSec());
        }
        if (other.hasMecRcvTimestamp()) {
          setMecRcvTimestamp(other.getMecRcvTimestamp());
        }
        if (other.hasMecSendTimestamp()) {
          setMecSendTimestamp(other.getMecSendTimestamp());
        }
        if (other.hasDraRcvTimestamp()) {
          setDraRcvTimestamp(other.getDraRcvTimestamp());
        }
        if (other.hasDraSendTimestamp()) {
          setDraSendTimestamp(other.getDraSendTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if_proto_common.BxtCommonHeader.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (if_proto_common.BxtCommonHeader.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timestampSec_ ;
      /**
       * <pre>
       * Message index or query time in seconds. It is recommended 
       * to obtain timestamp_sec from sensor time, it is used as a query 
       * time in GetExpectedObserved.
       * </pre>
       *
       * <code>optional double timestamp_sec = 1;</code>
       * @return Whether the timestampSec field is set.
       */
      @java.lang.Override
      public boolean hasTimestampSec() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Message index or query time in seconds. It is recommended 
       * to obtain timestamp_sec from sensor time, it is used as a query 
       * time in GetExpectedObserved.
       * </pre>
       *
       * <code>optional double timestamp_sec = 1;</code>
       * @return The timestampSec.
       */
      @java.lang.Override
      public double getTimestampSec() {
        return timestampSec_;
      }
      /**
       * <pre>
       * Message index or query time in seconds. It is recommended 
       * to obtain timestamp_sec from sensor time, it is used as a query 
       * time in GetExpectedObserved.
       * </pre>
       *
       * <code>optional double timestamp_sec = 1;</code>
       * @param value The timestampSec to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampSec(double value) {
        bitField0_ |= 0x00000001;
        timestampSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message index or query time in seconds. It is recommended 
       * to obtain timestamp_sec from sensor time, it is used as a query 
       * time in GetExpectedObserved.
       * </pre>
       *
       * <code>optional double timestamp_sec = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampSec() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampSec_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object moduleName_ = "";
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @return Whether the moduleName field is set.
       */
      public boolean hasModuleName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @return The moduleName.
       */
      public java.lang.String getModuleName() {
        java.lang.Object ref = moduleName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            moduleName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @return The bytes for moduleName.
       */
      public com.google.protobuf.ByteString
          getModuleNameBytes() {
        java.lang.Object ref = moduleName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          moduleName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @param value The moduleName to set.
       * @return This builder for chaining.
       */
      public Builder setModuleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        moduleName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearModuleName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        moduleName_ = getDefaultInstance().getModuleName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Module name.
       * </pre>
       *
       * <code>optional string module_name = 2;</code>
       * @param value The bytes for moduleName to set.
       * @return This builder for chaining.
       */
      public Builder setModuleNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        moduleName_ = value;
        onChanged();
        return this;
      }

      private int sequenceNum_ ;
      /**
       * <pre>
       * Sequence number for each message. Each module maintains its own counter for
       * sequence_num, always starting from 0 on boot.
       * </pre>
       *
       * <code>optional uint32 sequence_num = 3;</code>
       * @return Whether the sequenceNum field is set.
       */
      @java.lang.Override
      public boolean hasSequenceNum() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Sequence number for each message. Each module maintains its own counter for
       * sequence_num, always starting from 0 on boot.
       * </pre>
       *
       * <code>optional uint32 sequence_num = 3;</code>
       * @return The sequenceNum.
       */
      @java.lang.Override
      public int getSequenceNum() {
        return sequenceNum_;
      }
      /**
       * <pre>
       * Sequence number for each message. Each module maintains its own counter for
       * sequence_num, always starting from 0 on boot.
       * </pre>
       *
       * <code>optional uint32 sequence_num = 3;</code>
       * @param value The sequenceNum to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNum(int value) {
        bitField0_ |= 0x00000004;
        sequenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence number for each message. Each module maintains its own counter for
       * sequence_num, always starting from 0 on boot.
       * </pre>
       *
       * <code>optional uint32 sequence_num = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceNum_ = 0;
        onChanged();
        return this;
      }

      private long lidarTimestamp_ ;
      /**
       * <pre>
       * Lidar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 lidar_timestamp = 4;</code>
       * @return Whether the lidarTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasLidarTimestamp() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Lidar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 lidar_timestamp = 4;</code>
       * @return The lidarTimestamp.
       */
      @java.lang.Override
      public long getLidarTimestamp() {
        return lidarTimestamp_;
      }
      /**
       * <pre>
       * Lidar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 lidar_timestamp = 4;</code>
       * @param value The lidarTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setLidarTimestamp(long value) {
        bitField0_ |= 0x00000008;
        lidarTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Lidar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 lidar_timestamp = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLidarTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lidarTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long cameraTimestamp_ ;
      /**
       * <pre>
       * Camera Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 camera_timestamp = 5;</code>
       * @return Whether the cameraTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasCameraTimestamp() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Camera Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 camera_timestamp = 5;</code>
       * @return The cameraTimestamp.
       */
      @java.lang.Override
      public long getCameraTimestamp() {
        return cameraTimestamp_;
      }
      /**
       * <pre>
       * Camera Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 camera_timestamp = 5;</code>
       * @param value The cameraTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setCameraTimestamp(long value) {
        bitField0_ |= 0x00000010;
        cameraTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Camera Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 camera_timestamp = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCameraTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cameraTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long radarTimestamp_ ;
      /**
       * <pre>
       * Radar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 radar_timestamp = 6;</code>
       * @return Whether the radarTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasRadarTimestamp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Radar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 radar_timestamp = 6;</code>
       * @return The radarTimestamp.
       */
      @java.lang.Override
      public long getRadarTimestamp() {
        return radarTimestamp_;
      }
      /**
       * <pre>
       * Radar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 radar_timestamp = 6;</code>
       * @param value The radarTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setRadarTimestamp(long value) {
        bitField0_ |= 0x00000020;
        radarTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Radar Sensor timestamp for nano-second.
       * </pre>
       *
       * <code>optional uint64 radar_timestamp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRadarTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        radarTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private int version_ = 1;
      /**
       * <pre>
       * data version
       * </pre>
       *
       * <code>optional uint32 version = 7 [default = 1];</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * data version
       * </pre>
       *
       * <code>optional uint32 version = 7 [default = 1];</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * data version
       * </pre>
       *
       * <code>optional uint32 version = 7 [default = 1];</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000040;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * data version
       * </pre>
       *
       * <code>optional uint32 version = 7 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        version_ = 1;
        onChanged();
        return this;
      }

      private if_proto_common.BxtStatusPb.StatusPb status_;
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.BxtStatusPb.StatusPb, if_proto_common.BxtStatusPb.StatusPb.Builder, if_proto_common.BxtStatusPb.StatusPbOrBuilder> statusBuilder_;
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       * @return The status.
       */
      public if_proto_common.BxtStatusPb.StatusPb getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? if_proto_common.BxtStatusPb.StatusPb.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public Builder setStatus(if_proto_common.BxtStatusPb.StatusPb value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public Builder setStatus(
          if_proto_common.BxtStatusPb.StatusPb.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public Builder mergeStatus(if_proto_common.BxtStatusPb.StatusPb value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
              status_ != null &&
              status_ != if_proto_common.BxtStatusPb.StatusPb.getDefaultInstance()) {
            status_ =
              if_proto_common.BxtStatusPb.StatusPb.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = null;
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public if_proto_common.BxtStatusPb.StatusPb.Builder getStatusBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      public if_proto_common.BxtStatusPb.StatusPbOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              if_proto_common.BxtStatusPb.StatusPb.getDefaultInstance() : status_;
        }
      }
      /**
       * <code>optional .if_proto_common.StatusPb status = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          if_proto_common.BxtStatusPb.StatusPb, if_proto_common.BxtStatusPb.StatusPb.Builder, if_proto_common.BxtStatusPb.StatusPbOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              if_proto_common.BxtStatusPb.StatusPb, if_proto_common.BxtStatusPb.StatusPb.Builder, if_proto_common.BxtStatusPb.StatusPbOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      private double pubTimestampSec_ ;
      /**
       * <pre>
       * Message publishing time in seconds. It is recommended to obtain
       * timestamp_sec from ros::Time::now(), right before calling
       * SerializeToString() and publish().
       * </pre>
       *
       * <code>optional double pub_timestamp_sec = 9;</code>
       * @return Whether the pubTimestampSec field is set.
       */
      @java.lang.Override
      public boolean hasPubTimestampSec() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Message publishing time in seconds. It is recommended to obtain
       * timestamp_sec from ros::Time::now(), right before calling
       * SerializeToString() and publish().
       * </pre>
       *
       * <code>optional double pub_timestamp_sec = 9;</code>
       * @return The pubTimestampSec.
       */
      @java.lang.Override
      public double getPubTimestampSec() {
        return pubTimestampSec_;
      }
      /**
       * <pre>
       * Message publishing time in seconds. It is recommended to obtain
       * timestamp_sec from ros::Time::now(), right before calling
       * SerializeToString() and publish().
       * </pre>
       *
       * <code>optional double pub_timestamp_sec = 9;</code>
       * @param value The pubTimestampSec to set.
       * @return This builder for chaining.
       */
      public Builder setPubTimestampSec(double value) {
        bitField0_ |= 0x00000100;
        pubTimestampSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message publishing time in seconds. It is recommended to obtain
       * timestamp_sec from ros::Time::now(), right before calling
       * SerializeToString() and publish().
       * </pre>
       *
       * <code>optional double pub_timestamp_sec = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPubTimestampSec() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pubTimestampSec_ = 0D;
        onChanged();
        return this;
      }

      private long mecRcvTimestamp_ ;
      /**
       * <code>optional uint64 mec_rcv_timestamp = 10;</code>
       * @return Whether the mecRcvTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasMecRcvTimestamp() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint64 mec_rcv_timestamp = 10;</code>
       * @return The mecRcvTimestamp.
       */
      @java.lang.Override
      public long getMecRcvTimestamp() {
        return mecRcvTimestamp_;
      }
      /**
       * <code>optional uint64 mec_rcv_timestamp = 10;</code>
       * @param value The mecRcvTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setMecRcvTimestamp(long value) {
        bitField0_ |= 0x00000200;
        mecRcvTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 mec_rcv_timestamp = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMecRcvTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mecRcvTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long mecSendTimestamp_ ;
      /**
       * <code>optional uint64 mec_send_timestamp = 11;</code>
       * @return Whether the mecSendTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasMecSendTimestamp() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint64 mec_send_timestamp = 11;</code>
       * @return The mecSendTimestamp.
       */
      @java.lang.Override
      public long getMecSendTimestamp() {
        return mecSendTimestamp_;
      }
      /**
       * <code>optional uint64 mec_send_timestamp = 11;</code>
       * @param value The mecSendTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setMecSendTimestamp(long value) {
        bitField0_ |= 0x00000400;
        mecSendTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 mec_send_timestamp = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMecSendTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        mecSendTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long draRcvTimestamp_ ;
      /**
       * <code>optional uint64 dra_rcv_timestamp = 12;</code>
       * @return Whether the draRcvTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasDraRcvTimestamp() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional uint64 dra_rcv_timestamp = 12;</code>
       * @return The draRcvTimestamp.
       */
      @java.lang.Override
      public long getDraRcvTimestamp() {
        return draRcvTimestamp_;
      }
      /**
       * <code>optional uint64 dra_rcv_timestamp = 12;</code>
       * @param value The draRcvTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setDraRcvTimestamp(long value) {
        bitField0_ |= 0x00000800;
        draRcvTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 dra_rcv_timestamp = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDraRcvTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000800);
        draRcvTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long draSendTimestamp_ ;
      /**
       * <code>optional uint64 dra_send_timestamp = 13;</code>
       * @return Whether the draSendTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasDraSendTimestamp() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint64 dra_send_timestamp = 13;</code>
       * @return The draSendTimestamp.
       */
      @java.lang.Override
      public long getDraSendTimestamp() {
        return draSendTimestamp_;
      }
      /**
       * <code>optional uint64 dra_send_timestamp = 13;</code>
       * @param value The draSendTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setDraSendTimestamp(long value) {
        bitField0_ |= 0x00001000;
        draSendTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 dra_send_timestamp = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDraSendTimestamp() {
        bitField0_ = (bitField0_ & ~0x00001000);
        draSendTimestamp_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:if_proto_common.Header)
    }

    // @@protoc_insertion_point(class_scope:if_proto_common.Header)
    private static final if_proto_common.BxtCommonHeader.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new if_proto_common.BxtCommonHeader.Header();
    }

    public static if_proto_common.BxtCommonHeader.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      @java.lang.Override
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public if_proto_common.BxtCommonHeader.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_if_proto_common_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_if_proto_common_Header_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027bxt.common.Header.proto\022\017if_proto_comm" +
      "on\032\022bxt.StatusPb.proto\"\336\002\n\006Header\022\025\n\rtim" +
      "estamp_sec\030\001 \001(\001\022\023\n\013module_name\030\002 \001(\t\022\024\n" +
      "\014sequence_num\030\003 \001(\r\022\027\n\017lidar_timestamp\030\004" +
      " \001(\004\022\030\n\020camera_timestamp\030\005 \001(\004\022\027\n\017radar_" +
      "timestamp\030\006 \001(\004\022\022\n\007version\030\007 \001(\r:\0011\022)\n\006s" +
      "tatus\030\010 \001(\0132\031.if_proto_common.StatusPb\022\031" +
      "\n\021pub_timestamp_sec\030\t \001(\001\022\031\n\021mec_rcv_tim" +
      "estamp\030\n \001(\004\022\032\n\022mec_send_timestamp\030\013 \001(\004" +
      "\022\031\n\021dra_rcv_timestamp\030\014 \001(\004\022\032\n\022dra_send_" +
      "timestamp\030\r \001(\004"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          if_proto_common.BxtStatusPb.getDescriptor(),
        });
    internal_static_if_proto_common_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_if_proto_common_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_if_proto_common_Header_descriptor,
        new java.lang.String[] { "TimestampSec", "ModuleName", "SequenceNum", "LidarTimestamp", "CameraTimestamp", "RadarTimestamp", "Version", "Status", "PubTimestampSec", "MecRcvTimestamp", "MecSendTimestamp", "DraRcvTimestamp", "DraSendTimestamp", });
    if_proto_common.BxtStatusPb.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
