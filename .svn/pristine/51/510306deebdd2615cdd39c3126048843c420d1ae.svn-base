// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bxt.common.math.MatrixXd.proto

package if_proto_common;

public final class BxtCommonMathMatrixXd {
  private BxtCommonMathMatrixXd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MatrixXdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:if_proto_common.MatrixXd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @return A list containing the data.
     */
    java.util.List<java.lang.Double> getDataList();
    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @return The count of data.
     */
    int getDataCount();
    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    double getData(int index);

    /**
     * <pre>
     * The row number of the matrix.
     * </pre>
     *
     * <code>optional int32 rows = 2 [default = 0];</code>
     * @return Whether the rows field is set.
     */
    boolean hasRows();
    /**
     * <pre>
     * The row number of the matrix.
     * </pre>
     *
     * <code>optional int32 rows = 2 [default = 0];</code>
     * @return The rows.
     */
    int getRows();

    /**
     * <pre>
     * The col number of the matrix.
     * </pre>
     *
     * <code>optional int32 cols = 3 [default = 0];</code>
     * @return Whether the cols field is set.
     */
    boolean hasCols();
    /**
     * <pre>
     * The col number of the matrix.
     * </pre>
     *
     * <code>optional int32 cols = 3 [default = 0];</code>
     * @return The cols.
     */
    int getCols();
  }
  /**
   * Protobuf type {@code if_proto_common.MatrixXd}
   */
  public static final class MatrixXd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:if_proto_common.MatrixXd)
      MatrixXdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MatrixXd.newBuilder() to construct.
    private MatrixXd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatrixXd() {
      data_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MatrixXd();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MatrixXd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                data_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.addDouble(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                data_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                data_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              rows_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cols_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          data_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return if_proto_common.BxtCommonMathMatrixXd.internal_static_if_proto_common_MatrixXd_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return if_proto_common.BxtCommonMathMatrixXd.internal_static_if_proto_common_MatrixXd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              if_proto_common.BxtCommonMathMatrixXd.MatrixXd.class, if_proto_common.BxtCommonMathMatrixXd.MatrixXd.Builder.class);
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.DoubleList data_;
    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @return A list containing the data.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @return The count of data.
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Matrix data.
     * The storage order of data is column major.
     * </pre>
     *
     * <code>repeated double data = 1;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    public double getData(int index) {
      return data_.getDouble(index);
    }

    public static final int ROWS_FIELD_NUMBER = 2;
    private int rows_;
    /**
     * <pre>
     * The row number of the matrix.
     * </pre>
     *
     * <code>optional int32 rows = 2 [default = 0];</code>
     * @return Whether the rows field is set.
     */
    @java.lang.Override
    public boolean hasRows() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The row number of the matrix.
     * </pre>
     *
     * <code>optional int32 rows = 2 [default = 0];</code>
     * @return The rows.
     */
    @java.lang.Override
    public int getRows() {
      return rows_;
    }

    public static final int COLS_FIELD_NUMBER = 3;
    private int cols_;
    /**
     * <pre>
     * The col number of the matrix.
     * </pre>
     *
     * <code>optional int32 cols = 3 [default = 0];</code>
     * @return Whether the cols field is set.
     */
    @java.lang.Override
    public boolean hasCols() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The col number of the matrix.
     * </pre>
     *
     * <code>optional int32 cols = 3 [default = 0];</code>
     * @return The cols.
     */
    @java.lang.Override
    public int getCols() {
      return cols_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < data_.size(); i++) {
        output.writeDouble(1, data_.getDouble(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(2, rows_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(3, cols_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDataList().size();
        size += dataSize;
        size += 1 * getDataList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rows_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cols_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof if_proto_common.BxtCommonMathMatrixXd.MatrixXd)) {
        return super.equals(obj);
      }
      if_proto_common.BxtCommonMathMatrixXd.MatrixXd other = (if_proto_common.BxtCommonMathMatrixXd.MatrixXd) obj;

      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (hasRows() != other.hasRows()) return false;
      if (hasRows()) {
        if (getRows()
            != other.getRows()) return false;
      }
      if (hasCols() != other.hasCols()) return false;
      if (hasCols()) {
        if (getCols()
            != other.getCols()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      if (hasRows()) {
        hash = (37 * hash) + ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getRows();
      }
      if (hasCols()) {
        hash = (37 * hash) + COLS_FIELD_NUMBER;
        hash = (53 * hash) + getCols();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(if_proto_common.BxtCommonMathMatrixXd.MatrixXd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code if_proto_common.MatrixXd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:if_proto_common.MatrixXd)
        if_proto_common.BxtCommonMathMatrixXd.MatrixXdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return if_proto_common.BxtCommonMathMatrixXd.internal_static_if_proto_common_MatrixXd_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return if_proto_common.BxtCommonMathMatrixXd.internal_static_if_proto_common_MatrixXd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                if_proto_common.BxtCommonMathMatrixXd.MatrixXd.class, if_proto_common.BxtCommonMathMatrixXd.MatrixXd.Builder.class);
      }

      // Construct using if_proto_common.BxtCommonMathMatrixXd.MatrixXd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cols_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return if_proto_common.BxtCommonMathMatrixXd.internal_static_if_proto_common_MatrixXd_descriptor;
      }

      @java.lang.Override
      public if_proto_common.BxtCommonMathMatrixXd.MatrixXd getDefaultInstanceForType() {
        return if_proto_common.BxtCommonMathMatrixXd.MatrixXd.getDefaultInstance();
      }

      @java.lang.Override
      public if_proto_common.BxtCommonMathMatrixXd.MatrixXd build() {
        if_proto_common.BxtCommonMathMatrixXd.MatrixXd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public if_proto_common.BxtCommonMathMatrixXd.MatrixXd buildPartial() {
        if_proto_common.BxtCommonMathMatrixXd.MatrixXd result = new if_proto_common.BxtCommonMathMatrixXd.MatrixXd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          data_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rows_ = rows_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cols_ = cols_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof if_proto_common.BxtCommonMathMatrixXd.MatrixXd) {
          return mergeFrom((if_proto_common.BxtCommonMathMatrixXd.MatrixXd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(if_proto_common.BxtCommonMathMatrixXd.MatrixXd other) {
        if (other == if_proto_common.BxtCommonMathMatrixXd.MatrixXd.getDefaultInstance()) return this;
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        if (other.hasRows()) {
          setRows(other.getRows());
        }
        if (other.hasCols()) {
          setCols(other.getCols());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if_proto_common.BxtCommonMathMatrixXd.MatrixXd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (if_proto_common.BxtCommonMathMatrixXd.MatrixXd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList data_ = emptyDoubleList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          data_ = mutableCopy(data_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @return A list containing the data.
       */
      public java.util.List<java.lang.Double>
          getDataList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(data_) : data_;
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @return The count of data.
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      public double getData(int index) {
        return data_.getDouble(index);
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @param index The index to set the value at.
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          int index, double value) {
        ensureDataIsMutable();
        data_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @param value The data to add.
       * @return This builder for chaining.
       */
      public Builder addData(double value) {
        ensureDataIsMutable();
        data_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @param values The data to add.
       * @return This builder for chaining.
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Matrix data.
       * The storage order of data is column major.
       * </pre>
       *
       * <code>repeated double data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        data_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int rows_ ;
      /**
       * <pre>
       * The row number of the matrix.
       * </pre>
       *
       * <code>optional int32 rows = 2 [default = 0];</code>
       * @return Whether the rows field is set.
       */
      @java.lang.Override
      public boolean hasRows() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The row number of the matrix.
       * </pre>
       *
       * <code>optional int32 rows = 2 [default = 0];</code>
       * @return The rows.
       */
      @java.lang.Override
      public int getRows() {
        return rows_;
      }
      /**
       * <pre>
       * The row number of the matrix.
       * </pre>
       *
       * <code>optional int32 rows = 2 [default = 0];</code>
       * @param value The rows to set.
       * @return This builder for chaining.
       */
      public Builder setRows(int value) {
        bitField0_ |= 0x00000002;
        rows_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The row number of the matrix.
       * </pre>
       *
       * <code>optional int32 rows = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRows() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rows_ = 0;
        onChanged();
        return this;
      }

      private int cols_ ;
      /**
       * <pre>
       * The col number of the matrix.
       * </pre>
       *
       * <code>optional int32 cols = 3 [default = 0];</code>
       * @return Whether the cols field is set.
       */
      @java.lang.Override
      public boolean hasCols() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The col number of the matrix.
       * </pre>
       *
       * <code>optional int32 cols = 3 [default = 0];</code>
       * @return The cols.
       */
      @java.lang.Override
      public int getCols() {
        return cols_;
      }
      /**
       * <pre>
       * The col number of the matrix.
       * </pre>
       *
       * <code>optional int32 cols = 3 [default = 0];</code>
       * @param value The cols to set.
       * @return This builder for chaining.
       */
      public Builder setCols(int value) {
        bitField0_ |= 0x00000004;
        cols_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The col number of the matrix.
       * </pre>
       *
       * <code>optional int32 cols = 3 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearCols() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cols_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:if_proto_common.MatrixXd)
    }

    // @@protoc_insertion_point(class_scope:if_proto_common.MatrixXd)
    private static final if_proto_common.BxtCommonMathMatrixXd.MatrixXd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new if_proto_common.BxtCommonMathMatrixXd.MatrixXd();
    }

    public static if_proto_common.BxtCommonMathMatrixXd.MatrixXd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MatrixXd>
        PARSER = new com.google.protobuf.AbstractParser<MatrixXd>() {
      @java.lang.Override
      public MatrixXd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MatrixXd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatrixXd> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MatrixXd> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public if_proto_common.BxtCommonMathMatrixXd.MatrixXd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_if_proto_common_MatrixXd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_if_proto_common_MatrixXd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036bxt.common.math.MatrixXd.proto\022\017if_pro" +
      "to_common\":\n\010MatrixXd\022\014\n\004data\030\001 \003(\001\022\017\n\004r" +
      "ows\030\002 \001(\005:\0010\022\017\n\004cols\030\003 \001(\005:\0010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_if_proto_common_MatrixXd_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_if_proto_common_MatrixXd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_if_proto_common_MatrixXd_descriptor,
        new java.lang.String[] { "Data", "Rows", "Cols", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
